{"version":3,"file":"ort.wasm.min.js","mappings":"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","sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/wasm/jsep/backend-webgpu.ts","webpack://ort/./lib/wasm/jsep/init.ts","webpack://ort/./lib/wasm/jsep/log.ts","webpack://ort/./lib/wasm/jsep/util.ts","webpack://ort/./lib/wasm/jsep/webgpu/attribute-with-cache-key.ts","webpack://ort/./lib/wasm/jsep/webgpu/gpu-data-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/op-resolve-rules.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/activation_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv2d_mm_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/conv_util.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/3rd-party/matmul_packed_webgpu.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/binary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/common.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv-grouped.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/conv2d-mm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/fuse-utils.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/gemm.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/matmul.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/pool.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/transpose.ts","webpack://ort/./lib/wasm/jsep/webgpu/ops/unary-op.ts","webpack://ort/./lib/wasm/jsep/webgpu/program-manager.ts","webpack://ort/./lib/wasm/jsep/webgpu/types.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-common.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/../node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, () => {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nlet logLevelValue = 'warning';\nexport const env = {\n    wasm: {},\n    webgl: {},\n    webgpu: {},\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        logLevelValue = value;\n    },\n    get logLevel() {\n        return logLevelValue;\n    },\n};\n// set property 'logLevel' so that they can be correctly transferred to worker by `postMessage()`.\nObject.defineProperty(env, 'logLevel', { enumerable: true });\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { env as envImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = envImpl;\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\n// the following code allows delaying execution of BigInt checking. This allows lazy initialization for\n// NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP and NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP, which allows BigInt polyfill\n// if available.\nlet isBigIntChecked = false;\nconst checkBigInt = () => {\n    if (!isBigIntChecked) {\n        isBigIntChecked = true;\n        const isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\n        const isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n        if (isBigInt64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n        }\n        if (isBigUint64ArrayAvailable) {\n            NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n            NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n        }\n    }\n};\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        checkBigInt();\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    /**\n     * Create a new tensor object from image object\n     *\n     * @param buffer - Extracted image buffer data - assuming RGBA format\n     * @param imageFormat - input image configuration - required configurations height, width, format\n     * @param tensorFormat - output tensor configuration - Default is RGB format\n     */\n    static bufferToTensor(buffer, options) {\n        if (buffer === undefined) {\n            throw new Error('Image buffer must be defined');\n        }\n        if (options.height === undefined || options.width === undefined) {\n            throw new Error('Image height and width must be defined');\n        }\n        if (options.tensorLayout === 'NHWC') {\n            throw new Error('NHWC Tensor layout is not supported yet');\n        }\n        const { height, width } = options;\n        const norm = options.norm ?? { mean: 255, bias: 0 };\n        let normMean;\n        let normBias;\n        if (typeof (norm.mean) === 'number') {\n            normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n        }\n        else {\n            normMean = [norm.mean[0], norm.mean[1], norm.mean[2], norm.mean[3] ?? 255];\n        }\n        if (typeof (norm.bias) === 'number') {\n            normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n        }\n        else {\n            normBias = [norm.bias[0], norm.bias[1], norm.bias[2], norm.bias[3] ?? 0];\n        }\n        const inputformat = options.bitmapFormat !== undefined ? options.bitmapFormat : 'RGBA';\n        // default value is RGBA since imagedata and HTMLImageElement uses it\n        const outputformat = options.tensorFormat !== undefined ?\n            (options.tensorFormat !== undefined ? options.tensorFormat : 'RGB') :\n            'RGB';\n        const stride = height * width;\n        const float32Data = outputformat === 'RGBA' ? new Float32Array(stride * 4) : new Float32Array(stride * 3);\n        // Default pointer assignments\n        let step = 4, rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n        let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n        // Updating the pointer assignments based on the input image format\n        if (inputformat === 'RGB') {\n            step = 3;\n            rImagePointer = 0;\n            gImagePointer = 1;\n            bImagePointer = 2;\n            aImagePointer = -1;\n        }\n        // Updating the pointer assignments based on the output tensor format\n        if (outputformat === 'RGBA') {\n            aTensorPointer = stride * 3;\n        }\n        else if (outputformat === 'RBG') {\n            rTensorPointer = 0;\n            bTensorPointer = stride;\n            gTensorPointer = stride * 2;\n        }\n        else if (outputformat === 'BGR') {\n            bTensorPointer = 0;\n            gTensorPointer = stride;\n            rTensorPointer = stride * 2;\n        }\n        for (let i = 0; i < stride; i++, rImagePointer += step, bImagePointer += step, gImagePointer += step, aImagePointer += step) {\n            float32Data[rTensorPointer++] = (buffer[rImagePointer] + normBias[0]) / normMean[0];\n            float32Data[gTensorPointer++] = (buffer[gImagePointer] + normBias[1]) / normMean[1];\n            float32Data[bTensorPointer++] = (buffer[bImagePointer] + normBias[2]) / normMean[2];\n            if (aTensorPointer !== -1 && aImagePointer !== -1) {\n                float32Data[aTensorPointer++] = (buffer[aImagePointer] + normBias[3]) / normMean[3];\n            }\n        }\n        // Float32Array -> ort.Tensor\n        const outputTensor = outputformat === 'RGBA' ? new Tensor('float32', float32Data, [1, 4, height, width]) :\n            new Tensor('float32', float32Data, [1, 3, height, width]);\n        return outputTensor;\n    }\n    static async fromImage(image, options) {\n        // checking the type of image object\n        const isHTMLImageEle = typeof (HTMLImageElement) !== 'undefined' && image instanceof HTMLImageElement;\n        const isImageDataEle = typeof (ImageData) !== 'undefined' && image instanceof ImageData;\n        const isImageBitmap = typeof (ImageBitmap) !== 'undefined' && image instanceof ImageBitmap;\n        const isString = typeof image === 'string';\n        let data;\n        let tensorConfig = options ?? {};\n        // filling and checking image configuration options\n        if (isHTMLImageEle) {\n            // HTMLImageElement - image object - format is RGBA by default\n            const canvas = document.createElement('canvas');\n            canvas.width = image.width;\n            canvas.height = image.height;\n            const pixels2DContext = canvas.getContext('2d');\n            if (pixels2DContext != null) {\n                let height = image.height;\n                let width = image.width;\n                if (options !== undefined && options.resizedHeight !== undefined && options.resizedWidth !== undefined) {\n                    height = options.resizedHeight;\n                    width = options.resizedWidth;\n                }\n                if (options !== undefined) {\n                    tensorConfig = options;\n                    if (options.tensorFormat !== undefined) {\n                        throw new Error('Image input config format must be RGBA for HTMLImageElement');\n                    }\n                    else {\n                        tensorConfig.tensorFormat = 'RGBA';\n                    }\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match HTMLImageElement height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match HTMLImageElement width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.tensorFormat = 'RGBA';\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                pixels2DContext.drawImage(image, 0, 0);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isImageDataEle) {\n            // ImageData - image object - format is RGBA by default\n            const format = 'RGBA';\n            let height;\n            let width;\n            if (options !== undefined && options.resizedWidth !== undefined && options.resizedHeight !== undefined) {\n                height = options.resizedHeight;\n                width = options.resizedWidth;\n            }\n            else {\n                height = image.height;\n                width = image.width;\n            }\n            if (options !== undefined) {\n                tensorConfig = options;\n                if (options.bitmapFormat !== undefined && options.bitmapFormat !== format) {\n                    throw new Error('Image input config format must be RGBA for ImageData');\n                }\n                else {\n                    tensorConfig.bitmapFormat = 'RGBA';\n                }\n            }\n            else {\n                tensorConfig.bitmapFormat = 'RGBA';\n            }\n            tensorConfig.height = height;\n            tensorConfig.width = width;\n            if (options !== undefined) {\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = width;\n                tempCanvas.height = height;\n                const pixels2DContext = tempCanvas.getContext('2d');\n                if (pixels2DContext != null) {\n                    pixels2DContext.putImageData(image, 0, 0);\n                    data = pixels2DContext.getImageData(0, 0, width, height).data;\n                }\n                else {\n                    throw new Error('Can not access image data');\n                }\n            }\n            else {\n                data = image.data;\n            }\n        }\n        else if (isImageBitmap) {\n            // ImageBitmap - image object - format must be provided by user\n            if (options === undefined) {\n                throw new Error('Please provide image config with format for Imagebitmap');\n            }\n            if (options.bitmapFormat !== undefined) {\n                throw new Error('Image input config format must be defined for ImageBitmap');\n            }\n            const pixels2DContext = document.createElement('canvas').getContext('2d');\n            if (pixels2DContext != null) {\n                const height = image.height;\n                const width = image.width;\n                pixels2DContext.drawImage(image, 0, 0, width, height);\n                data = pixels2DContext.getImageData(0, 0, width, height).data;\n                if (options !== undefined) {\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.height !== undefined && options.height !== height) {\n                        throw new Error('Image input config height doesn\\'t match ImageBitmap height');\n                    }\n                    else {\n                        tensorConfig.height = height;\n                    }\n                    // using square brackets to avoid TS error - type 'never'\n                    if (options.width !== undefined && options.width !== width) {\n                        throw new Error('Image input config width doesn\\'t match ImageBitmap width');\n                    }\n                    else {\n                        tensorConfig.width = width;\n                    }\n                }\n                else {\n                    tensorConfig.height = height;\n                    tensorConfig.width = width;\n                }\n                return Tensor.bufferToTensor(data, tensorConfig);\n            }\n            else {\n                throw new Error('Can not access image data');\n            }\n        }\n        else if (isString) {\n            return new Promise((resolve, reject) => {\n                const canvas = document.createElement('canvas');\n                const context = canvas.getContext('2d');\n                if (!image || !context) {\n                    return reject();\n                }\n                const newImage = new Image();\n                newImage.crossOrigin = 'Anonymous';\n                newImage.src = image;\n                newImage.onload = () => {\n                    canvas.width = newImage.width;\n                    canvas.height = newImage.height;\n                    context.drawImage(newImage, 0, 0, canvas.width, canvas.height);\n                    const img = context.getImageData(0, 0, canvas.width, canvas.height);\n                    if (options !== undefined) {\n                        if (options.height !== undefined && options.height !== canvas.height) {\n                            throw new Error('Image input config height doesn\\'t match height');\n                        }\n                        else {\n                            tensorConfig.height = canvas.height;\n                        }\n                        if (options.width !== undefined && options.width !== canvas.width) {\n                            throw new Error('Image input config width doesn\\'t match width');\n                        }\n                        else {\n                            tensorConfig.width = canvas.width;\n                        }\n                    }\n                    else {\n                        tensorConfig.height = canvas.height;\n                        tensorConfig.width = canvas.width;\n                    }\n                    resolve(Tensor.bufferToTensor(img.data, tensorConfig));\n                };\n            });\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n        if (data !== undefined) {\n            return Tensor.bufferToTensor(data, tensorConfig);\n        }\n        else {\n            throw new Error('Input data provided is not supported - aborted tensor creation');\n        }\n    }\n    toDataURL(options) {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.dims[3];\n        canvas.height = this.dims[2];\n        const pixels2DContext = canvas.getContext('2d');\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n            }\n            const inputformat = options?.format !== undefined ? options.format : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 0];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            // Default pointer assignments\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            for (let i = 0; i < height; i++) {\n                for (let j = 0; j < width; j++) {\n                    const R = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                    const G = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                    const B = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                    const A = aTensorPointer === -1 ?\n                        255 :\n                        (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n                    // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                    pixels2DContext.fillStyle = 'rgba(' + R + ',' + G + ',' + B + ',' + A + ')';\n                    pixels2DContext.fillRect(j, i, 1, 1);\n                }\n            }\n            return canvas.toDataURL();\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n    }\n    toImageData(options) {\n        const pixels2DContext = document.createElement('canvas').getContext('2d');\n        let image;\n        if (pixels2DContext != null) {\n            // Default values for height and width & format\n            let width;\n            let height;\n            let channels;\n            if (options?.tensorLayout !== undefined && options.tensorLayout === 'NHWC') {\n                width = this.dims[2];\n                height = this.dims[1];\n                channels = this.dims[3];\n            }\n            else { // Default layout is NCWH\n                width = this.dims[3];\n                height = this.dims[2];\n                channels = this.dims[1];\n            }\n            const inputformat = options !== undefined ? (options.format !== undefined ? options.format : 'RGB') : 'RGB';\n            const norm = options?.norm;\n            let normMean;\n            let normBias;\n            if (norm === undefined || norm.mean === undefined) {\n                normMean = [255, 255, 255, 255];\n            }\n            else {\n                if (typeof (norm.mean) === 'number') {\n                    normMean = [norm.mean, norm.mean, norm.mean, norm.mean];\n                }\n                else {\n                    normMean = [norm.mean[0], norm.mean[1], norm.mean[2], 255];\n                    if (norm.mean[3] !== undefined) {\n                        normMean[3] = norm.mean[3];\n                    }\n                }\n            }\n            if (norm === undefined || norm.bias === undefined) {\n                normBias = [0, 0, 0, 0];\n            }\n            else {\n                if (typeof (norm.bias) === 'number') {\n                    normBias = [norm.bias, norm.bias, norm.bias, norm.bias];\n                }\n                else {\n                    normBias = [norm.bias[0], norm.bias[1], norm.bias[2], 0];\n                    if (norm.bias[3] !== undefined) {\n                        normBias[3] = norm.bias[3];\n                    }\n                }\n            }\n            const stride = height * width;\n            if (options !== undefined) {\n                if (options.height !== undefined && options.height !== height) {\n                    throw new Error('Image output config height doesn\\'t match tensor height');\n                }\n                if (options.width !== undefined && options.width !== width) {\n                    throw new Error('Image output config width doesn\\'t match tensor width');\n                }\n                if (options.format !== undefined && (channels === 4 && options.format !== 'RGBA') ||\n                    (channels === 3 && (options.format !== 'RGB' && options.format !== 'BGR'))) {\n                    throw new Error('Tensor format doesn\\'t match input tensor dims');\n                }\n            }\n            // Default pointer assignments\n            const step = 4;\n            let rImagePointer = 0, gImagePointer = 1, bImagePointer = 2, aImagePointer = 3;\n            let rTensorPointer = 0, gTensorPointer = stride, bTensorPointer = stride * 2, aTensorPointer = -1;\n            // Updating the pointer assignments based on the input image format\n            if (inputformat === 'RGBA') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n                aTensorPointer = stride * 3;\n            }\n            else if (inputformat === 'RGB') {\n                rTensorPointer = 0;\n                gTensorPointer = stride;\n                bTensorPointer = stride * 2;\n            }\n            else if (inputformat === 'RBG') {\n                rTensorPointer = 0;\n                bTensorPointer = stride;\n                gTensorPointer = stride * 2;\n            }\n            image = pixels2DContext.createImageData(width, height);\n            for (let i = 0; i < height * width; rImagePointer += step, gImagePointer += step, bImagePointer += step, aImagePointer += step, i++) {\n                image.data[rImagePointer] = (this.data[rTensorPointer++] - normBias[0]) * normMean[0]; // R value\n                image.data[gImagePointer] = (this.data[gTensorPointer++] - normBias[1]) * normMean[1]; // G value\n                image.data[bImagePointer] = (this.data[bTensorPointer++] - normBias[2]) * normMean[2]; // B value\n                image.data[aImagePointer] = aTensorPointer === -1 ?\n                    255 :\n                    (this.data[aTensorPointer++] - normBias[3]) * normMean[3]; // A value\n            }\n        }\n        else {\n            throw new Error('Can not access image data');\n        }\n        return image;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    async release() {\n        return this.handler.dispose();\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\n\nimport {initializeWebAssemblyInstance} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initializeWebAssemblyInstance();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(pathOrBuffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\n\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  if (!BUILD_DEFS.DISABLE_WEBGPU && typeof navigator !== 'undefined' && navigator.gpu) {\n    registerBackend('webgpu', wasmBackend, 5);\n  }\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n  registerBackend('webnn', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {configureLogger, LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {createGpuDataManager, GpuDataManager} from './webgpu/gpu-data-manager';\nimport {RunFunction, WEBGPU_OP_RESOLVE_RULES} from './webgpu/op-resolve-rules';\nimport {ProgramManager} from './webgpu/program-manager';\nimport {ComputeContext, GpuData, GpuDataType, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/**\n * get a unique key representing the program from the program info,input shapes and types.\n *\n * @returns a unique key is a shorter string than the shader source, which contains all the information to identify a\n * program. if the key is the same, the program shader source should be the same, so we can reuse the program.\n *\n */\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTensorShapes: ReadonlyArray<TensorView['dims']>,\n     inputGpuDataTypes: readonly GpuDataType[]): string => {\n      const inputTensorShapesToString = inputTensorShapes.map(d => `${d.join(',')}`).join('_');\n      const inputGpuDataTypesToString = inputGpuDataTypes.join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputTensorShapesToString + ';' + inputGpuDataTypesToString;\n      return key;\n    };\n\n/**\n * this class is designed to store status and being used as a singleton for JSEP. It will be passed to jsepInit() as\n * the first parameter so that it is stored for future use.\n */\nexport class WebGpuBackend {\n  device: GPUDevice;\n  /**\n   * an instance of GpuDataManager to manage a GpuDataId -> GpuBuffer mapping\n   */\n  gpuDataManager: GpuDataManager;\n  /**\n   * an instance of ProgramManager to build and run WebGPU compute shader program, and manage a ProgramKey -> Program\n   * artifacts mapping\n   */\n  programManager: ProgramManager;\n\n  /**\n   * representing the kernel ID of which is currently being computed (CPU code perspective).\n   * `null` means no kernel is being computed.\n   * only one kernel can be computed at a moment.\n   */\n  currentKernelId: number|null = null;\n  /**\n   * a list of temporary GPU data for the current kernel. should release when the kernel done computation.\n   */\n  private temporaryData: GpuData[];\n  /**\n   * a KernelID -> a GPU data list, which stores persistent GPU data owned by the specific kernel.\n   */\n  private kernelPersistentData: Map<number, GpuData[]>;\n  /**\n   * a KernelID -> a custom data, which stores custom data owned by the specific kernel.\n   */\n  private kernelCustomData: Map<number, {[key: string]: unknown}>;\n  /**\n   * get the custom data of the current kernel\n   */\n  get currentKernelCustomData(): {[key: string]: unknown} {\n    if (this.currentKernelId === null) {\n      throw new Error('currentKernelCustomData(): currentKernelId is null. (should not happen)');\n    }\n\n    let data = this.kernelCustomData.get(this.currentKernelId);\n    if (!data) {\n      data = {};\n      this.kernelCustomData.set(this.currentKernelId, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * a KernelID -> kernel info mapping. value is [ name, run function, [optional] preprocess_attribute_once function ]\n   */\n  kernels: Map<number, [string, RunFunction, [((attribute: unknown) => unknown) | undefined, unknown]]>;\n\n  commandEncoder: GPUCommandEncoder|null = null;\n  computePassEncoder: GPUComputePassEncoder|null = null;\n  pendingDispatchNumber = 0;\n\n  profilingEnabled = false;\n  profilingQuerySet: GPUQuerySet;\n  profilingTimeBase?: bigint;\n\n  async initialize(env: Env): Promise<void> {\n    if (!navigator.gpu) {\n      // WebGPU is not available.\n      throw new Error('WebGpuBackend: WebGPU is not available.');\n    }\n\n    const adapter = await navigator.gpu.requestAdapter();\n    if (!adapter) {\n      throw new Error('WebGpuBackend: Failed to get GPU adapter.');\n    }\n\n    const deviceDescriptor: GPUDeviceDescriptor = {\n      requiredLimits: {\n        maxComputeWorkgroupStorageSize: adapter.limits.maxComputeWorkgroupStorageSize,\n        maxComputeWorkgroupsPerDimension: adapter.limits.maxComputeWorkgroupsPerDimension,\n        maxStorageBufferBindingSize: adapter.limits.maxStorageBufferBindingSize,\n      }\n    };\n    // WebGPU Spec: Timestamp Queries Inside Passes\n    // https://github.com/gpuweb/gpuweb/blob/main/proposals/timestamp-query-inside-passes.md\n    if (adapter.features.has('timestamp-query-inside-passes') && env.webgpu.profilingMode === 'default') {\n      this.profilingEnabled = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      deviceDescriptor.requiredFeatures = ['timestamp-query-inside-passes' as any];\n    }\n\n    this.device = await adapter.requestDevice(deviceDescriptor);\n    this.gpuDataManager = createGpuDataManager(this);\n    this.programManager = new ProgramManager(this);\n    this.kernels = new Map();\n    this.kernelPersistentData = new Map();\n    this.kernelCustomData = new Map();\n\n    // set up flags for logger\n    configureLogger(env.logLevel!, !!env.debug);\n\n    // TODO: set up flags\n\n    this.device.onuncapturederror = ev => {\n      if (ev.error instanceof GPUValidationError) {\n        // eslint-disable-next-line no-console\n        console.error(`An uncaught WebGPU validation error was raised: ${ev.error.message}`);\n      }\n    };\n\n    if (this.profilingEnabled) {\n      this.profilingQuerySet = this.device.createQuerySet({\n        type: 'timestamp',\n        count: 2,\n      });\n    }\n  }\n\n  dispose(): void {\n    // currently, we do not do anything in this function. In all known use cases, we don't have the requirement to\n    // actually dispose the WebGpuBackend instance, because it's always used as a singleton.\n    //\n    // revisit this place if we get real requirement to dispose the instance.\n  }\n\n  getCommandEncoder(): GPUCommandEncoder {\n    if (!this.commandEncoder) {\n      this.commandEncoder = this.device.createCommandEncoder();\n    }\n    return this.commandEncoder;\n  }\n\n  getComputePassEncoder(): GPUComputePassEncoder {\n    if (!this.computePassEncoder) {\n      this.computePassEncoder = this.getCommandEncoder().beginComputePass();\n    }\n    return this.computePassEncoder;\n  }\n\n  endComputePass(): void {\n    if (this.computePassEncoder) {\n      this.computePassEncoder.end();\n      this.computePassEncoder = null;\n    }\n  }\n\n  flush(): void {\n    this.endComputePass();\n    this.device.queue.submit([this.getCommandEncoder().finish()]);\n    this.gpuDataManager.refreshPendingBuffers();\n    this.commandEncoder = null;\n    this.pendingDispatchNumber = 0;\n  }\n\n  /**\n   * run a WebGPU program.\n   * @param program either a ProgramInfo instance containing metadata including the shader code, or a function that\n   * can be called and return a ProgramInfo instance\n   * @param inputs a TensorView array. each element represents a value already exists in GPU.\n   * @param outputIndices an indices array. each element can be either -1 (temporary data), -2 (persistent data) or an\n   * index to the kernel's output.\n   * @param createKernelOutput a callback function that create a value to kernel's output with the given index\n   * @param createIntermediateOutput a callback function that create a value as a intermediate value, either temporary\n   * or persistent (owned by the current kernel)\n   * @returns a TensorView array representing the result.\n   */\n  run(program: ProgramInfoLoader|ProgramInfo, inputs: readonly TensorView[], outputIndices: readonly number[],\n      createKernelOutput: (index: number, dataType: number, dims: readonly number[]) => TensorView,\n      createIntermediateOutput: (dataType: number, dims: readonly number[]) => TensorView): TensorView[] {\n    if (inputs.length !== program.inputTypes.length) {\n      throw new Error(`Input size must be equal to ${program.inputTypes.length}.`);\n    }\n\n    // create info for inputs\n    const inputDatas: GpuData[] = [];\n    for (let i = 0; i < inputs.length; ++i) {\n      const gpuData = this.gpuDataManager.get(inputs[i].data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for input: ${inputs[i].data}`);\n      }\n      inputDatas[i] = gpuData;\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputs.map(i => i.dims), inputDatas.map(i => i.type));\n    let artifact = this.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // check output indices\n    const validatedOutputIndices = outputIndices.length === 0 ? programInfo.outputs.map((_, i) => i) : outputIndices;\n    if (validatedOutputIndices.length !== programInfo.outputs.length) {\n      throw new Error(`Output size ${validatedOutputIndices.length} must be equal to ${programInfo.outputs.length}.`);\n    }\n\n    // create info for outputs\n    const outputTensorViews: TensorView[] = [];\n    const outputDatas: GpuData[] = [];\n    for (let i = 0; i < programInfo.outputs.length; ++i) {\n      // value -1 and -2 are used for creating temporary and persistent outputs. so -2, -1 and 0, 1, 2, ... are valid\n      // output indices. see type definition of ComputeContextInputsOutputsMapping for more details.\n      if (!Number.isInteger(validatedOutputIndices[i]) || validatedOutputIndices[i] < -2 ||\n          validatedOutputIndices[i] >= programInfo.outputs.length) {\n        throw new Error(`Invalid output index: ${validatedOutputIndices[i]}`);\n      }\n      const isTemporary = validatedOutputIndices[i] === -1;\n      const isPersistent = validatedOutputIndices[i] === -2;\n      const tensorView = (isTemporary || isPersistent) ?\n          createIntermediateOutput(programInfo.outputs[i].dataType, programInfo.outputs[i].dims) :\n          createKernelOutput(validatedOutputIndices[i], programInfo.outputs[i].dataType, programInfo.outputs[i].dims);\n      const gpuData = this.gpuDataManager.get(tensorView.data);\n      if (!gpuData) {\n        throw new Error(`no GPU data for output: ${tensorView.data}`);\n      }\n      if (isTemporary) {\n        this.temporaryData.push(gpuData);\n      }\n      if (isPersistent) {\n        let persistentData = this.kernelPersistentData.get(this.currentKernelId!);\n        if (!persistentData) {\n          persistentData = [];\n          this.kernelPersistentData.set(this.currentKernelId!, persistentData);\n        }\n        persistentData.push(gpuData);\n      }\n      outputTensorViews.push(tensorView);\n      outputDatas.push(gpuData);\n    }\n\n    const normalizedDispatchGroup = this.programManager.normalizeDispatchGroupSize(programInfo.dispatchGroup(inputs));\n\n    if (!artifact) {\n      artifact = this.programManager.build(programInfo, normalizedDispatchGroup);\n      this.programManager.setArtifact(key, artifact);\n    }\n\n    LOG_DEBUG(\n        'info',\n        () => `[ProgramManager] run \"${programInfo.name}\" (key=${key}) with ${normalizedDispatchGroup[0]}x${\n            normalizedDispatchGroup[1]}x${normalizedDispatchGroup[2]}`);\n    this.programManager.run(artifact, inputDatas, outputDatas, normalizedDispatchGroup);\n\n    return outputTensorViews;\n  }\n\n  upload(gpuDataId: number, data: Uint8Array): void {\n    this.gpuDataManager.upload(gpuDataId, data);\n  }\n\n  memcpy(src: number, dst: number): void {\n    this.gpuDataManager.memcpy(src, dst);\n  }\n\n  async download(gpuDataId: number, getTargetBuffer: () => Uint8Array): Promise<void> {\n    const arrayBuffer = await this.gpuDataManager.download(gpuDataId);\n\n    // the underlying buffer may be changed after the async function is called. so we use a getter function to make sure\n    // the buffer is up-to-date.\n    const data = getTargetBuffer();\n    data.set(new Uint8Array(arrayBuffer, 0, data.byteLength));\n  }\n\n  alloc(size: number): number {\n    return this.gpuDataManager.create(size).id;\n  }\n\n  free(ptr: number): number {\n    return this.gpuDataManager.release(ptr);\n  }\n\n  createKernel(name: string, kernelId: number, attribute: unknown): void {\n    const op = WEBGPU_OP_RESOLVE_RULES.get(name);\n    if (!op) {\n      throw new Error(`kernel not implemented: ${name}`);\n    }\n\n    this.kernels.set(kernelId, [name, op[0], [op[1], attribute]]);\n  }\n\n  releaseKernel(kernelId: number): void {\n    const persistentData = this.kernelPersistentData.get(kernelId);\n    if (persistentData) {\n      for (const data of persistentData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.kernelPersistentData.delete(kernelId);\n    }\n\n    this.kernelCustomData.delete(kernelId);\n    this.kernels.delete(kernelId);\n  }\n\n  computeKernel(kernelId: number, context: ComputeContext): number {\n    const kernel = this.kernels.get(kernelId);\n    if (!kernel) {\n      throw new Error(`kernel not created: ${kernelId}`);\n    }\n    const [name, kernelEntry, attributes] = kernel;\n    if (this.currentKernelId !== null) {\n      throw new Error(`kernel \"${name}\" is not allowed to be called recursively`);\n    }\n    this.currentKernelId = kernelId;\n\n    // parse attributes if necessary\n    if (attributes[0]) {\n      attributes[1] = attributes[0](attributes[1]);\n      attributes[0] = undefined;\n    }\n\n    LOG_DEBUG('info', () => `[WebGPU] Start to run kernel \"${name}\"...`);\n\n    this.temporaryData = [];\n    try {\n      kernelEntry(context, attributes[1]);\n      return 0;  // ORT_OK\n    } catch (e) {\n      LOG_DEBUG('warning', `[WebGPU] Kernel \"${name}\" failed. Error: ${e}`);\n      return 1;  // ORT_FAIL\n    } finally {\n      for (const data of this.temporaryData) {\n        this.gpuDataManager.release(data.id);\n      }\n      this.temporaryData = [];\n      this.currentKernelId = null;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {OrtWasmModule} from '../binding/ort-wasm';\nimport {getTensorElementSize} from '../wasm-common';\n\nimport {WebGpuBackend} from './backend-webgpu';\nimport {LOG_DEBUG} from './log';\nimport {TensorView} from './tensor';\nimport {ShapeUtil} from './util';\nimport {ComputeContext, ComputeContextInputsOutputsMapping, ProgramInfo, ProgramInfoLoader} from './webgpu/types';\n\n/* eslint-disable no-bitwise */\n\nclass TensorViewImpl implements TensorView {\n  constructor(\n      private module: OrtWasmModule, public readonly dataType: number, public readonly data: number,\n      public readonly dims: readonly number[]) {}\n\n  getFloat32Array(): Float32Array {\n    return new Float32Array(this.module.HEAP8.buffer, this.data, ShapeUtil.size(this.dims));\n  }\n\n  reshape(newDims: readonly number[]): TensorView {\n    if (ShapeUtil.size(newDims) !== ShapeUtil.size(this.dims)) {\n      throw new Error('Invalid new shape');\n    }\n    return new TensorViewImpl(this.module, this.dataType, this.data, newDims);\n  }\n}\n\nclass ComputeContextImpl implements ComputeContext {\n  readonly opKernelContext: number;\n  readonly inputs: readonly TensorView[];\n  get customData(): {[key: string]: unknown} {\n    return this.backend.currentKernelCustomData;\n  }\n  constructor(private module: OrtWasmModule, private backend: WebGpuBackend, contextDataOffset: number) {\n    const heapU32 = module.HEAPU32;\n\n    // extract context data\n    let dataIndex = (contextDataOffset >> 2);\n    this.opKernelContext = heapU32[dataIndex++];\n    const inputCount = heapU32[dataIndex++];\n\n    const inputs: TensorView[] = [];\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = heapU32[dataIndex++];\n      const data = heapU32[dataIndex++];\n      const dim = heapU32[dataIndex++];\n      const dims: number[] = [];\n      for (let d = 0; d < dim; d++) {\n        dims.push(heapU32[dataIndex++]);\n      }\n      inputs.push(new TensorViewImpl(module, dataType, data, dims));\n    }\n    this.inputs = inputs;\n  }\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[] {\n    // prepare inputs. inputs should always be valid data.\n    const mappedInputs =\n        inputsOutputsMapping?.inputs?.map(i => typeof i === 'number' ? this.inputs[i] : i) ?? this.inputs;\n    // prepare outputs.\n    const outputIndices = inputsOutputsMapping?.outputs ?? [];\n    const createKernelOutput = (index: number, dataType: number, dims: readonly number[]): TensorView =>\n        new TensorViewImpl(this.module, dataType, this.output(index, dims), dims);\n    const createTemporaryOutput = (dataType: number, dims: readonly number[]): TensorView => {\n      const elementSize = getTensorElementSize(dataType);\n      if (!elementSize) {\n        throw new Error(`Unsupported data type: ${dataType}`);\n      }\n      const bufferSize = elementSize * ShapeUtil.size(dims);\n      return new TensorViewImpl(this.module, dataType, this.backend.gpuDataManager.create(bufferSize).id, dims);\n    };\n    return this.backend.run(program, mappedInputs, outputIndices, createKernelOutput, createTemporaryOutput);\n  }\n\n  output(index: number, dims: readonly number[]): number {\n    const stack = this.module.stackSave();\n    try {\n      const data = this.module.stackAlloc((1 + dims.length) * 4 /* sizeof(size_t) */);\n      let offset = data >> 2;\n      this.module.HEAPU32[offset++] = dims.length;\n      for (let i = 0; i < dims.length; i++) {\n        this.module.HEAPU32[offset++] = dims[i];\n      }\n      return this.module._JsepOutput(this.opKernelContext, index, data);\n    } finally {\n      this.module.stackRestore(stack);\n    }\n  }\n}\n\nexport const init = async(module: OrtWasmModule, env: Env): Promise<void> => {\n  const init = module.jsepInit;\n  if (init && navigator.gpu) {\n    if (!env.wasm.simd) {\n      throw new Error(\n          'Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP');\n    }\n    const backend = new WebGpuBackend();\n    await backend.initialize(env);\n\n    init(\n        // backend\n        {backend},\n\n        // jsepAlloc()\n        (size: number) => backend.alloc(size),\n\n        // jsepFree()\n        (ptr: number) => backend.free(ptr),\n\n        // jsepCopy(src, dst, size, isSourceGpu)\n        (src: number, dst: number, size: number, isSourceGpu = false) => {\n          if (isSourceGpu) {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyGpuToGpu: src=${src}, dst=${dst}, size=${size}`);\n            backend.memcpy(src, dst);\n          } else {\n            LOG_DEBUG('verbose', () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${src}, gpuDataId=${dst}, size=${size}`);\n            const data = module.HEAPU8.subarray(src, src + size);\n            backend.upload(dst, data);\n          }\n        },\n\n        // jsepCopyAsync(src, dst, size)\n        async(gpuDataId: number, dataOffset: number, size: number):\n            Promise<void> => {\n              LOG_DEBUG(\n                  'verbose',\n                  () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${gpuDataId}, dataOffset=${dataOffset}, size=${size}`);\n\n              await backend.download(gpuDataId, () => module.HEAPU8.subarray(dataOffset, dataOffset + size));\n            },\n\n        // jsepCreateKernel\n        (name: string, kernel: number, attribute: unknown) => backend.createKernel(name, kernel, attribute),\n\n        // jsepReleaseKernel\n        (kernel: number) => backend.releaseKernel(kernel),\n\n        // jsepRun\n        (kernel: number, contextDataOffset: number) => {\n          LOG_DEBUG('verbose', () => `[WebGPU] jsepRun: kernel=${kernel}, contextDataOffset=${contextDataOffset}`);\n          const context = new ComputeContextImpl(module, backend, contextDataOffset);\n          return backend.computeKernel(kernel, context);\n        });\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {logLevelStringToEnum} from '../wasm-common';\n\ntype LogLevel = NonNullable<Env['logLevel']>;\ntype MessageString = string;\ntype MessageFunction = () => string;\ntype Message = MessageString|MessageFunction;\n\nconst logLevelPrefix = ['V', 'I', 'W', 'E', 'F'];\n\nconst doLog = (level: number, message: string): void => {\n  // eslint-disable-next-line no-console\n  console.log(`[${logLevelPrefix[level]},${new Date().toISOString()}]${message}`);\n};\n\nlet configLogLevel: LogLevel|undefined;\nlet debug: boolean|undefined;\n\nexport const configureLogger = ($configLogLevel: LogLevel, $debug: boolean): void => {\n  configLogLevel = $configLogLevel;\n  debug = $debug;\n};\n\n/**\n * A simple logging utility to log messages to the console.\n */\nexport const LOG = (logLevel: LogLevel, msg: Message): void => {\n  const messageLevel = logLevelStringToEnum(logLevel);\n  const configLevel = logLevelStringToEnum(configLogLevel);\n  if (messageLevel >= configLevel) {\n    doLog(messageLevel, typeof msg === 'function' ? msg() : msg);\n  }\n};\n\n/**\n * A simple logging utility to log messages to the console. Only logs when debug is enabled.\n */\nexport const LOG_DEBUG: typeof LOG = (...args: Parameters<typeof LOG>) => {\n  if (debug) {\n    LOG(...args);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable no-param-reassign */\n\nexport class MatMulUtil {\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n\nexport class ShapeUtil {\n  /**\n   * calculate the size (number of elements)\n   */\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) from the given axis (inclusive)\n   */\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  /**\n   * calculate the size (number of elements) to the given axis (exclusive)\n   */\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  /**\n   * calculate the size (number of elements) from and to the given axis [start, end)\n   */\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank?: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank ?? axes.length));\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      dilations: number[], pads: number[]): void {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust dilation value\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < dilations.length) {\n        if (dilations[dim] < 0) {\n          throw new Error('dilations should be greater than or equal to 1');\n        }\n      } else {\n        dilations.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], isChannelLast: boolean, autoPad?: string): void {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + (isChannelLast ? 1 : 2)], strides[dim], dilations[dim], kernelShape[dim], pads, dim,\n          dim + inputDims.length - 2, autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param dilations Dilation along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\n\nexport const MIN_CLIP = -3.4028234663852886e+38;\nexport const MAX_CLIP = 3.4028234663852886e+38;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\n/**\n * create a new object from the given attribute, and add a cacheKey property to it\n */\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {GpuData, GpuDataId, GpuDataType} from './types';\n\n/**\n * manages GpuDataId -> GpuBuffer\n */\nexport interface GpuDataManager {\n  /**\n   * copy data from CPU to GPU.\n   */\n  upload(id: GpuDataId, data: Uint8Array): void;\n  /**\n   * copy data from GPU to GPU.\n   */\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void;\n  /**\n   * create new data on GPU.\n   */\n  create(size: number, usage?: number): GpuData;\n  /**\n   * get GPU data by ID.\n   */\n  get(id: GpuDataId): GpuData|undefined;\n  /**\n   * release the data on GPU by ID.\n   *\n   * @return size of the data released\n   */\n  release(id: GpuDataId): number;\n  /**\n   * copy data from GPU to CPU.\n   */\n  download(id: GpuDataId): Promise<ArrayBufferLike>;\n\n  /**\n   * refresh the buffers that marked for release.\n   *\n   * when release() is called, the buffer is not released immediately. this is because we need to wait for the commands\n   * to be submitted to the GPU. this function is called after the commands are submitted so that the buffers can be\n   * actually released.\n   */\n  refreshPendingBuffers(): void;\n}\n\ninterface StorageCacheValue {\n  gpuData: GpuData;\n  originalSize: number;\n}\n\ninterface DownloadCacheValue {\n  data: Promise<ArrayBufferLike>;\n}\n\n/**\n * normalize the buffer size so that it fits the 128-bits (16 bytes) alignment.\n */\nconst calcNormalizedBufferSize = (size: number) => Math.ceil(size / 16) * 16;\n\nlet guid = 0;\nconst createNewGpuDataId = () => guid++;\n\nclass GpuDataManagerImpl implements GpuDataManager {\n  // GPU Data ID => GPU Data ( storage buffer )\n  storageCache: Map<GpuDataId, StorageCacheValue>;\n\n  // GPU Data ID => GPU Data ( read buffer )\n  downloadCache: Map<GpuDataId, DownloadCacheValue>;\n\n  // pending buffers for uploading ( data is unmapped )\n  private buffersForUploadingPending: GPUBuffer[];\n  // pending buffers for computing\n  private buffersPending: GPUBuffer[];\n\n  constructor(private backend: WebGpuBackend /* , private reuseBuffer: boolean */) {\n    this.storageCache = new Map();\n    this.downloadCache = new Map();\n    this.buffersForUploadingPending = [];\n    this.buffersPending = [];\n  }\n\n  upload(id: GpuDataId, data: Uint8Array): void {\n    const srcArrayBuffer = data.buffer;\n    const srcOffset = data.byteOffset;\n    const srcLength = data.byteLength;\n    const size = calcNormalizedBufferSize(srcLength);\n\n    // get destination gpu buffer\n    const gpuDataCache = this.storageCache.get(id);\n    if (!gpuDataCache) {\n      throw new Error('gpu data for uploading does not exist');\n    }\n    if (gpuDataCache.originalSize !== srcLength) {\n      throw new Error(`inconsistent data size. gpu data size=${gpuDataCache.originalSize}, data size=${srcLength}`);\n    }\n\n    // create gpu buffer\n    const gpuBufferForUploading = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {mappedAtCreation: true, size, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC});\n\n    // copy (upload) data\n    const arrayBuffer = gpuBufferForUploading.getMappedRange();\n    new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer, srcOffset, srcLength));\n    gpuBufferForUploading.unmap();\n\n\n    // GPU copy\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    commandEncoder.copyBufferToBuffer(gpuBufferForUploading, 0, gpuDataCache.gpuData.buffer, 0, size);\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.upload(id=${id})`);\n\n    this.buffersForUploadingPending.push(gpuBufferForUploading);\n  }\n\n  memcpy(sourceId: GpuDataId, destinationId: GpuDataId): void {\n    // get source gpu buffer\n    const sourceGpuDataCache = this.storageCache.get(sourceId);\n    if (!sourceGpuDataCache) {\n      throw new Error('source gpu data for memcpy does not exist');\n    }\n    // get destination gpu buffer\n    const destinationGpuDataCache = this.storageCache.get(destinationId);\n    if (!destinationGpuDataCache) {\n      throw new Error('destination gpu data for memcpy does not exist');\n    }\n    if (sourceGpuDataCache.originalSize !== destinationGpuDataCache.originalSize) {\n      throw new Error('inconsistent source and destination gpu data size');\n    }\n    const size = calcNormalizedBufferSize(sourceGpuDataCache.originalSize);\n    // GPU copy\n    this.backend.getCommandEncoder().copyBufferToBuffer(\n        sourceGpuDataCache.gpuData.buffer, 0, destinationGpuDataCache.gpuData.buffer, 0, size);\n  }\n\n  // eslint-disable-next-line no-bitwise\n  create(size: number, usage = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST): GpuData {\n    // !!!\n    // !!! IMPORTANT: TODO: whether we should keep the storage buffer every time, or always create new ones.\n    // !!!                  This need to be figured out by performance test results.\n    // !!!\n\n    const bufferSize = calcNormalizedBufferSize(size);\n\n    // create gpu buffer\n    const gpuBuffer = this.backend.device.createBuffer({size: bufferSize, usage});\n\n    const gpuData = {id: createNewGpuDataId(), type: GpuDataType.default, buffer: gpuBuffer};\n    this.storageCache.set(gpuData.id, {gpuData, originalSize: size});\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.create(size=${size}) => id=${gpuData.id}`);\n    return gpuData;\n  }\n\n  get(id: GpuDataId): GpuData|undefined {\n    return this.storageCache.get(id)?.gpuData;\n  }\n\n  release(id: GpuDataId): number {\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('releasing data does not exist');\n    }\n\n    LOG_DEBUG('verbose', () => `[WebGPU] GpuDataManager.release(id=${id}), gpuDataId=${cachedData.gpuData.id}`);\n\n    this.storageCache.delete(id);\n    this.buffersPending.push(cachedData.gpuData.buffer);\n    // cachedData.gpuData.buffer.destroy();\n\n    const downloadingData = this.downloadCache.get(id);\n    if (downloadingData) {\n      this.downloadCache.delete(id);\n    }\n\n    return cachedData.originalSize;\n  }\n\n  async download(id: GpuDataId): Promise<ArrayBufferLike> {\n    const downloadData = this.downloadCache.get(id);\n    if (downloadData) {\n      return downloadData.data;\n    }\n\n    const cachedData = this.storageCache.get(id);\n    if (!cachedData) {\n      throw new Error('data does not exist');\n    }\n\n    const commandEncoder = this.backend.getCommandEncoder();\n    this.backend.endComputePass();\n    const bufferSize = calcNormalizedBufferSize(cachedData.originalSize);\n    const gpuReadBuffer = this.backend.device.createBuffer(\n        // eslint-disable-next-line no-bitwise\n        {size: bufferSize, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ});\n    commandEncoder.copyBufferToBuffer(\n        cachedData.gpuData.buffer /* source buffer */, 0 /* source offset */, gpuReadBuffer /* destination buffer */,\n        0 /* destination offset */, bufferSize /* size */\n    );\n    this.backend.flush();\n\n    const readDataPromise = new Promise<ArrayBuffer>((resolve) => {\n      gpuReadBuffer.mapAsync(GPUMapMode.READ).then(() => {\n        const data = gpuReadBuffer.getMappedRange().slice(0);\n        gpuReadBuffer.destroy();\n        resolve(data);\n      });\n    });\n\n    this.downloadCache.set(id, {data: readDataPromise});\n\n    return readDataPromise;\n  }\n\n  refreshPendingBuffers(): void {\n    for (const buffer of this.buffersForUploadingPending) {\n      buffer.destroy();\n    }\n    for (const buffer of this.buffersPending) {\n      buffer.destroy();\n    }\n  }\n}\n\nexport const createGpuDataManager = (...args: ConstructorParameters<typeof GpuDataManagerImpl>): GpuDataManager =>\n    new GpuDataManagerImpl(...args);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as binaryOps from './ops/binary-op';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {gemm, parseGemmAttributes} from './ops/gemm';\nimport {matMul} from './ops/matmul';\nimport * as pool from './ops/pool';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {ComputeContext} from './types';\n\nexport type RunFunction = (context: ComputeContext, attribute?: unknown) => void;\nexport type ParseAttributeFunction = (attributeRaw: unknown) => unknown;\nexport type OperatorImplementation = [RunFunction]|[RunFunction, ParseAttributeFunction];\n\nexport const WEBGPU_OP_RESOLVE_RULES: Map<string, OperatorImplementation> = new Map([\n  ['Abs', [unaryOps.abs]],\n  ['Acos', [unaryOps.acos]],\n  ['Acosh', [unaryOps.acosh]],\n  ['Add', [binaryOps.add]],\n  ['Asin', [unaryOps.asin]],\n  ['Asinh', [unaryOps.asinh]],\n  ['Atan', [unaryOps.atan]],\n  ['Atanh', [unaryOps.atanh]],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', [pool.averagePool, pool.parseAveragePoolAttributes]],\n  ['Ceil', [unaryOps.ceil]],\n  ['ClipV10', [unaryOps.clipV10]],\n  ['Clip', [unaryOps.clip]],\n  ['Conv', [conv, parseConvAttributes]],\n  ['Cos', [unaryOps.cos]],\n  ['Cosh', [unaryOps.cosh]],\n  ['Div', [binaryOps.div]],\n  ['Elu', [unaryOps.elu, unaryOps.parseAlphaAttributes]],\n  ['Erf', [unaryOps.erf]],\n  ['Exp', [unaryOps.exp]],\n  ['Floor', [unaryOps.floor]],\n  ['Gemm', [gemm, parseGemmAttributes]],\n  ['GlobalAveragePool', [pool.globalAveragePool, pool.parseGlobalAveragePoolAttributes]],\n  ['GlobalMaxPool', [pool.globalMaxPool, pool.parseGlobalMaxPoolAttributes]],\n  ['LeakyRelu', [unaryOps.leakyRelu, unaryOps.parseAlphaAttributes]],\n  ['MatMul', [matMul]],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', [pool.maxPool, pool.parseMaxPoolAttributes]],\n  ['Mul', [binaryOps.mul]],\n  ['Neg', [unaryOps.neg]],\n  ['Pow', [binaryOps.pow]],\n  ['Reciprocal', [unaryOps.reciprocal]],\n  ['Relu', [unaryOps.relu]],\n  ['Sigmoid', [unaryOps.sigmoid]],\n  ['Sin', [unaryOps.sin]],\n  ['Sinh', [unaryOps.sinh]],\n  ['Sqrt', [unaryOps.sqrt]],\n  ['Sub', [binaryOps.sub]],\n  ['Tan', [unaryOps.tan]],\n  ['Tanh', [unaryOps.tanh]],\n  ['ThresholdedRelu', [unaryOps.thresholdedRelu, unaryOps.parseAlphaAttributes]],\n  ['Transpose', [transpose, parseTransposeAttributes]],\n]);\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/activation_util.ts\n//\n// modified to fit the needs of the project\n\nexport declare type Activation = 'linear' | 'relu' | 'prelu' | 'elu' | 'relu6' | 'leakyrelu' | 'sigmoid';\n\nexport const typeSnippet = (component: number) => {\n  switch (component) {\n    case 1:\n      return 'f32';\n    case 2:\n      return 'vec2<f32>';\n    case 3:\n      return 'vec3<f32>';\n    case 4:\n      return 'vec4<f32>';\n    default:\n      throw new Error(`${component}-component is not supported.`);\n  }\n};\n\nexport const activationFnSnippet =\n    (activation?: Activation, _hasPreluActivationWeights = false, _packed = false, _coordsLength = 3): string => {\n      if (!activation) {\n        return '';\n      }\n\n      // TODO: add implementations\n      return '';\n    };\n\nexport const biasActivationSnippet = (hasBias: boolean, activation?: Activation): string => `\n      ${hasBias ? 'value = value + getBiasByOutputCoords(coords);' : ''}\n      ${activation ? 'value = activation(value, coords);' : ''}\n      `;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/conv2d_mm_webgpu.ts\n//\n// modified to fit the needs of the project\n\nimport {LOG_DEBUG} from '../../../log';\nimport {TensorView} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {GpuDataType, ProgramInfo, ProgramMetadata} from '../../types';\nimport {ConvAttributes} from '../conv';\n\nimport {Activation, activationFnSnippet, biasActivationSnippet, typeSnippet} from './activation_util';\nimport {utilFunctions} from './conv_util';\nimport {makeMatMulPackedSource, makeMatMulPackedVec4Source} from './matmul_packed_webgpu';\n\nconst conv2dCommonSnippet =\n    (isChannelsLast: boolean, fitAOuter: boolean, fitBOuter: boolean, fitInner: boolean, addBias = false,\n     activation?: Activation, hasPreluActivationWeights = false, innerElementSizeX = 4, innerElementSizeW = 4,\n     innerElementSize = 4): string => {\n      const getXSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'resData = x[xIndex];';\n          case 3:\n            return 'resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);';\n          case 4:\n            return 'resData = x[xIndex / 4];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const getWSnippet = (innerElementSize: number) => {\n        switch (innerElementSize) {\n          case 1:\n            return 'return w[row * wShape[3] + colIn];';\n          case 4:\n            return 'return w[row * wShape[3] / 4 + colIn];';\n          default:\n            throw new Error(`innerElementSize ${innerElementSize} is not supported.`);\n        }\n      };\n      const coordASnippet = isChannelsLast ? `\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ` :\n                                             `\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `;\n\n      const coordResSnippet = isChannelsLast ? `\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ` :\n                                               `\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `;\n\n      const xHeight = isChannelsLast ? 'xShape[1]' : 'xShape[2]';\n      const xWidth = isChannelsLast ? 'xShape[2]' : 'xShape[3]';\n      const row = isChannelsLast ? 'row' : 'col';\n      const col = isChannelsLast ? 'col' : 'row';\n      const readXSnippet = `\n    let inChannels = wShape[2];\n    let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n    let outRow = ${row} / outWidth;\n    let outCol = ${row} % outWidth;\n\n    let WRow = ${col} / (filterDims[1] * inChannels);\n    let WCol = ${col} / inChannels % filterDims[1];\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\n    let xCh = ${col} % inChannels;\n    var resData = ${typeSnippet(innerElementSizeX)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${xHeight} && xCol >= 0 && xCol < ${xWidth}) {\n      ${coordASnippet}\n      let xIndex = getIndexFromCoords4D(coord, xShape);\n      ${getXSnippet(innerElementSizeX)}\n    }\n    return resData;`;\n\n      const sampleX = isChannelsLast ? (fitAOuter && fitInner ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimAOuter && col < dimInner) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`) :\n                                       (fitInner && fitBOuter ? `\n    let col = colIn * ${innerElementSizeX};\n    ${readXSnippet}` :\n                                                                `\n    let col = colIn * ${innerElementSizeX};\n    if (row < dimInner && col < dimBOuter) {\n      ${readXSnippet}\n    }\n    return ${typeSnippet(innerElementSizeX)}(0.0);`);\n\n      const sampleW = `${getWSnippet(innerElementSizeW)}`;\n\n      const resType = typeSnippet(innerElementSize);\n      const aType = isChannelsLast ? typeSnippet(innerElementSizeX) : typeSnippet(innerElementSizeW);\n      const bType = isChannelsLast ? typeSnippet(innerElementSizeW) : typeSnippet(innerElementSizeX);\n      const userCode = `\n    ${activationFnSnippet(activation, hasPreluActivationWeights, innerElementSize === 4, 4)}\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${aType} {\n      ${isChannelsLast ? sampleX : sampleW}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${bType} {\n      ${isChannelsLast ? sampleW : sampleX}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${resType}) {\n      let col = colIn * ${innerElementSize};\n      if (row < dimAOuter && col < dimBOuter)\n      {\n      var value = valueIn;\n      let outWidth = ${isChannelsLast ? 'outShape[2]' : 'outShape[3]'};\n      ${coordResSnippet}\n      ${biasActivationSnippet(addBias, activation)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`;\n      return userCode;\n    };\n\nexport const createConv2DMatMulProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     outputShape: readonly number[], dimAOuter: number, dimBOuter: number, dimInner: number, hasBias: boolean,\n     sequentialAccessByThreads: boolean): ProgramInfo => {\n      const isChannelsLast = attributes.format === 'NHWC';\n      const inChannels = isChannelsLast ? inputs[0].dims[3] : inputs[0].dims[1];\n      const batchSize = outputShape[0];\n      const outWidth = isChannelsLast ? outputShape[2] : outputShape[3];\n      const outHeight = isChannelsLast ? outputShape[1] : outputShape[2];\n      const outChannels = isChannelsLast ? outputShape[3] : outputShape[1];\n      const isVec4 = (((inChannels % 4 === 0 || inChannels % 3 === 0) && isChannelsLast) ||\n                      (outWidth % 4 === 0 && !isChannelsLast)) &&\n          outChannels % 4 === 0;\n\n      // TODO: fine tune size\n      const dispatchX = isChannelsLast ? outChannels : outWidth * outHeight;\n      const dispatchY = isChannelsLast ? outWidth * outHeight : outChannels;\n      const workGroupSize: [number, number, number] =\n          isVec4 ? [8, 8, 1] : [dispatchX <= 4 ? 4 : 16, dispatchX > 4 && dispatchY <= 4 ? 4 : 16, 1];\n      const elementsPerThread =\n          isVec4 ? [4, 4, 1] : [dispatchX <= 4 ? 1 : 2, dispatchX > 4 && dispatchY <= 4 ? 1 : 2, 1];\n      const dispatch = [\n        Math.ceil(dispatchX / workGroupSize[0] / elementsPerThread[0]),\n        Math.ceil(dispatchY / workGroupSize[1] / elementsPerThread[1]),\n        Math.ceil(batchSize / workGroupSize[2] / elementsPerThread[1])\n      ];\n\n      LOG_DEBUG('verbose', () => `[conv2d_mm_webgpu] dispatch = ${dispatch}`);\n\n      const innerElementSize = isVec4 ? (isChannelsLast && inChannels % 4 !== 0 ? 3 : 4) : elementsPerThread[0];\n\n      const tileAOuter = workGroupSize[1] * elementsPerThread[1];\n      const tileBOuter = workGroupSize[0] * elementsPerThread[0];\n      const tileInner = Math.max(workGroupSize[0] * innerElementSize, workGroupSize[1]);\n\n      const fitAOuter = dimAOuter % tileAOuter === 0;\n      const fitBOuter = dimBOuter % tileBOuter === 0;\n      const fitInner = dimInner % tileInner === 0;\n\n      const elementsSize = isVec4 ? [innerElementSize, 4, 4] : [1, 1, 1];\n\n      const declareInputs = [\n        `@group(0) @binding(0) var<storage, read> x: array<${isVec4 && innerElementSize === 4 ? 'vec4<f32>' : 'f32'}>;`,\n        `@group(0) @binding(1) var<storage, read> w: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`\n      ];\n      let declareFunctions = `\n      fn setOutputAtIndex(flatIndex : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        result[flatIndex] = ${isVec4 ? 'vec4<f32>' : 'f32'}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${isVec4 ? 'vec4<f32>' : 'f32'}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${isVec4 ? '/ 4' : ''}, value);\n      }`;\n      if (hasBias) {\n        declareInputs.push(`@group(0) @binding(2) var<storage, read> bias: array<${isVec4 ? 'vec4<f32>' : 'f32'}>;`);\n        declareFunctions += `\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${isVec4 ? 'vec4<f32>' : 'f32'} {\n          return bias[coords.${isChannelsLast ? 'w' : 'y'}${isVec4 ? '/ 4' : ''}];\n        }`;\n      }\n\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () => ({x: dispatch[0], y: dispatch[1], z: dispatch[2]}),\n        getShaderSource: () => `\n        ${utilFunctions}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${declareInputs.join('')}\n        @group(0) @binding(${declareInputs.length}) var<storage, read_write> result: array<${\n            isVec4 ? 'vec4<f32>' : 'f32'}>;\n        //@group(0) @binding(${declareInputs.length + 1}) var<uniform> uniforms: Uniforms;\n\n        const xShape : vec4<i32> = vec4<i32>(${inputs[0].dims.join(',')});\n        const wShape : vec4<i32> = vec4<i32>(${inputs[1].dims.join(',')});\n        const outShape : vec4<i32> = vec4<i32>(${outputShape.join(',')});\n        const outShapeStrides : vec3<i32> = vec3<i32>(${ShapeUtil.computeStrides(outputShape).slice(0, 3).join(',')});\n        const filterDims : vec2<i32> = vec2<i32>(${attributes.kernelShape[0]}, ${attributes.kernelShape[1]});\n        const pad : vec2<i32> = vec2<i32>(${attributes.pads[0]}, ${attributes.pads[1]});\n        const stride : vec2<i32> = vec2<i32>(${attributes.strides[0]}, ${attributes.strides[1]});\n        const dilation : vec2<i32> = vec2<i32>(${attributes.dilations[0]}, ${attributes.dilations[1]});\n        const dimAOuter : i32 = ${dimAOuter};\n        const dimBOuter : i32 = ${dimBOuter};\n        const dimInner : i32 = ${dimInner};\n        ${declareFunctions}\n        ${\n            conv2dCommonSnippet(\n                isChannelsLast, fitAOuter, fitBOuter, fitInner, hasBias, undefined, false, elementsSize[0],\n                elementsSize[1], elementsSize[2])}\n            ${\n            isVec4 ? makeMatMulPackedVec4Source(elementsPerThread, workGroupSize, !isChannelsLast, tileInner) :\n                     makeMatMulPackedSource(\n                         elementsPerThread, workGroupSize, !isChannelsLast, tileInner, false, undefined,\n                         sequentialAccessByThreads)}`\n      };\n    };\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-core/src/ops/conv_util.ts\n//\n// modified to fit the needs of the project\n\nexport const utilFunctions = `\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\n}\n`;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// sampled from [@tensorflow/tfjs] tfjs-backend-webgpu/src/matmul_packed_webgpu.ts\n//\n// modified to fit the needs of the project\n\nconst writeDataToSubAVec4Snippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol);\n        `;\n\n  } else {\n    return `\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol);\n        `;\n  }\n};\n\nconst calculateResultSnippet = (transposeA: boolean, innerElementSize: number) => {\n  if (transposeA) {\n    return `\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${innerElementSize === 3 ? '' : 'let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];'}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached3[i] + acc[i];'}\n        }`;\n  } else {\n    return `\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${innerElementSize === 3 ? '' : 'acc[i] = BCached3 * ACached.w + acc[i];'}\n        }`;\n  }\n};\n\nexport const makeMatMulPackedVec4Source =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, isVectorA = false): string => {\n      const tileAOuter = workgroupSize[1] * workPerThread[1];\n      const tileBOuter = workgroupSize[0] * workPerThread[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n      const innerElementSize = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n\n      if (!(((transposeA && innerElementSize === 4 && workPerThread[1] === 4) ||\n             (!transposeA && (innerElementSize === 3 || innerElementSize === 4))) &&\n            tileAWidth % workgroupSize[0] === 0 && tileInner % workgroupSize[1] === 0 && workPerThread[0] === 4)) {\n        throw new Error(`If transposeA ${transposeA} is true, innerElementSize ${\n            innerElementSize} and workPerThread[1] ${workPerThread[1]} must be 4.\n      Otherwise, innerElementSize ${innerElementSize} must be 3 or 4.\n  tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${workgroupSize[0]}. tileInner ${\n            tileInner} must be divisible by workgroupSize[1] ${workgroupSize[1]}. colPerThread ${\n            workPerThread[0]} must be 4.`);\n      }\n      return `\nvar<workgroup> mm_Asub : array<array<vec${innerElementSize}<f32>, ${tileAWidth / innerElementSize}>, ${tileAHight}>;\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${tileBOuter / workPerThread[0]}>, ${tileInner}>;\n\nconst rowPerThread = ${workPerThread[1]};\nconst colPerThread = ${workPerThread[0]};\nconst innerElementSize = ${innerElementSize};\nconst tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = ${isVectorA ? '0' : 'localRow * rowPerThread'};\n  let tileCol = i32(localId.x);\n\n  let globalRow = ${isVectorA ? '0' : 'i32(globalId.y) * rowPerThread'};\n  let globalCol = i32(globalId.x);\n  let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n  let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\n  let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n  var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n  var acc: array<vec4<f32>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${rowPerThreadB};\n  for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${writeDataToSubAVec4Snippet(transposeA)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${innerElementSize === 3 ? '' : 'let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];'}\n\n          ${calculateResultSnippet(transposeA, innerElementSize)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`;\n    };\n\nconst writeDataToSubASnippet = (transpose: boolean) => {\n  if (transpose) {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol);\n            `;\n\n  } else {\n    return `\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol);\n            `;\n  }\n};\n\nconst readDataFromSubASnippet = (transposeA: boolean) =>\n    transposeA ? 'let ACached = mm_Asub[k][tileRow + innerRow];' : 'let ACached = mm_Asub[tileRow + innerRow][k];';\n\n// sequentialAccessByThreads means sequential data in memory is accessed by\n// threads, instead of a single thread (default behavior).\nexport const makeMatMulPackedSource =\n    (workPerThread: number[], workgroupSize: [number, number, number], transposeA = false, tileInner = 32,\n     splitK = false, splitedDimInner = 32, sequentialAccessByThreads = false): string => {\n      const tileAOuter = workPerThread[1] * workgroupSize[1];\n      const tileBOuter = workPerThread[0] * workgroupSize[0];\n      const tileAWidth = transposeA ? tileAOuter : tileInner;\n      const tileAHight = transposeA ? tileInner : tileAOuter;\n\n      if (!(tileAHight % workgroupSize[1] === 0 && tileAWidth % workgroupSize[0] === 0 &&\n            tileInner % workgroupSize[1] === 0)) {\n        throw new Error(`tileAHight ${tileAHight} must be divisible by workgroupSize[1]${\n            workgroupSize[1]}, tileAWidth ${tileAWidth} must be divisible by workgroupSize[0]${\n            workgroupSize[0]}, tileInner ${tileInner} must be divisible by workgroupSize[1]${workgroupSize[1]}`);\n      }\n      const rowPerThreadA = tileAHight / workgroupSize[1];\n      const colPerThreadA = tileAWidth / workgroupSize[0];\n      const rowPerThreadB = tileInner / workgroupSize[1];\n      const matmulSnippet = sequentialAccessByThreads ?\n          `\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n    let globalColStart = i32(workgroupId.x) * ${tileBOuter};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${tileAHight}; inputRow = inputRow + ${workgroupSize[1]}) {\n        for (var inputCol = localCol; inputCol < ${tileAWidth}; inputCol = inputCol + ${workgroupSize[0]}) {\n          ${writeDataToSubASnippet(transposeA)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${tileInner}; inputRow = inputRow + ${workgroupSize[1]}) {\n            for (var inputCol = localCol; inputCol < ${tileBOuter}; inputCol = inputCol + ${workgroupSize[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol);\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<f32, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${workgroupSize[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${\n              transposeA ? `mm_Asub[k][localRow + innerRow * ${workgroupSize[1]}];` :\n                           `mm_Asub[localRow + innerRow * ${workgroupSize[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${workgroupSize[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${workgroupSize[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    ` :\n          `\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${tileAOuter};\n\nlet tileRowA = i32(localId.y) * ${rowPerThreadA};\nlet tileColA = i32(localId.x) * ${colPerThreadA};\nlet tileRowB = i32(localId.y) * ${rowPerThreadB};\n// Loop over shared dimension.\nfor (var t = 0; t < numTiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadA}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${colPerThreadA}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${writeDataToSubASnippet(transposeA)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${rowPerThreadB}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol);\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<f32, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${readDataFromSubASnippet(transposeA)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;\n\n      return `\n  var<workgroup> mm_Asub : array<array<f32, ${tileAWidth}>, ${tileAHight}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${tileBOuter}>, ${tileInner}>;\n  const rowPerThread = ${workPerThread[1]};\n  const colPerThread = ${workPerThread[0]};\n  const tileInner = ${tileInner};\n\n@compute @workgroup_size(${workgroupSize[0]}, ${workgroupSize[1]}, ${workgroupSize[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${splitK ? '0' : 'i32(globalId.z)'};\n    let numTiles = ${splitK ? `${Math.ceil(splitedDimInner / tileInner)}` : '(dimInner - 1) / tileInner + 1'};\n    var kStart = ${splitK ? `i32(globalId.z) * ${splitedDimInner}` : '0'};\n\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${matmulSnippet}\n  }\n`;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype BinaryCustomExpression = (expressionA: string, expressionB: string) => string;\ntype BinaryFunctionCall = BuiltinFunctionName|BinaryCustomExpression|{\n  scalar: BinaryCustomExpression;\n  vector: BinaryCustomExpression;\n};\n\nconst createBinaryOpProgramShader =\n    (shaderHelper: ShaderHelper, dimsA: readonly number[], dimsB: readonly number[], dimsOutput: readonly number[],\n     vectorize: boolean, doBroadcast: boolean, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     typeA = 'f32', typeB = 'f32', typeOutput = 'f32') => {\n      const outputSize = ShapeUtil.size(dimsOutput);\n      const vecSize = Math.ceil(outputSize / 4);\n\n      let expressionScalar: BinaryCustomExpression;\n      let expressionVector: BinaryCustomExpression;\n      if (typeof funcCall === 'string') {\n        expressionScalar = expressionVector = (a, b) => `${funcCall}((${a}),(${b}))`;\n      } else if (typeof funcCall === 'function') {\n        expressionScalar = expressionVector = funcCall;\n      } else {\n        expressionScalar = funcCall.scalar;\n        expressionVector = funcCall.vector;\n      }\n\n      let broadcastImpl = '';\n      const outputIndicesHelper = createIndicesHelper('output', dimsOutput);\n      if (doBroadcast) {\n        const calcOffsetImpl = (dims: readonly number[]) => {\n          const strides = ShapeUtil.computeStrides(dims);\n          const offsets: string[] = [];\n          for (let i = dims.length - 1; i >= 0; i--) {\n            const idx = dimsOutput.length === 0 ? '0u' :\n                (dimsOutput.length === 1)       ? '(*outputIndices)' :\n                                                  `(*outputIndices)[${i + dimsOutput.length - dims.length}]`;\n            offsets.push(`${strides[i]}u * (${idx} % ${dims[i]}u)`);\n          }\n          return offsets.length > 0 ? offsets.join('+') : '0u';\n        };\n\n        broadcastImpl = `\n  ${outputIndicesHelper.o2iImpl}\n\n  fn calcOffsetA(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsA)};\n  }\n\n  fn calcOffsetB(outputIndices: ptr<function, ${outputIndicesHelper.iType}>) -> u32 {\n    return ${calcOffsetImpl(dimsB)};\n  }\n  `;\n      }\n\n      let assignment: string;\n      if (vectorize) {\n        if (doBroadcast) {\n          assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${outputIndicesHelper.o2iCall('global_idx * 4u', 'outputIndices')}\n      let offsetA = calcOffsetA(&outputIndices);\n      let offsetB = calcOffsetB(&outputIndices);\n      outputData[global_idx] = ${expressionVector('aData[offsetA / 4u]', 'bData[offsetB / 4u]')};`;\n        } else {\n          assignment = `outputData[global_idx] = ${expressionVector('aData[global_idx]', 'bData[global_idx]')};`;\n        }\n      } else {\n        if (!doBroadcast) {\n          throw new Error('no necessary to use scalar implementation for element-wise binary op implementation.');\n        }\n        const singleAssignment = (x: number) => {\n          const expressionA = `aData[indexA${x}][componentA${x}]`;\n          const expressionB = `bData[indexB${x}][componentB${x}]`;\n          return `\n      ${outputIndicesHelper.o2iCall(`global_idx * 4u + ${x}u`, 'outputIndices')}\n      let offsetA${x} = calcOffsetA(&outputIndices);\n      let offsetB${x} = calcOffsetB(&outputIndices);\n      let indexA${x} = offsetA${x} / 4u;\n      let indexB${x} = offsetB${x} / 4u;\n      let componentA${x} = offsetA${x} % 4u;\n      let componentB${x} = offsetB${x} % 4u;\n      outputData[global_idx][${x}] = ${expressionScalar(expressionA, expressionB)};`;\n        };\n\n        assignment = `\n      ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n      ${singleAssignment(0)}\n      ${singleAssignment(1)}\n      ${singleAssignment(2)}\n      ${singleAssignment(3)}`;\n      }\n\n      return `\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${typeA}>>;\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${typeB}>>;\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${typeOutput}>>;\n\n  ${additionalImplementation ?? ''}\n  ${broadcastImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n    ${assignment}\n  }`;\n    };\n\nconst createBinaryOpProgramInfo =\n    (metadata: ProgramMetadata, a: TensorView, b: TensorView, funcCall: BinaryFunctionCall,\n     additionalImplementation?: string, outputDataType: number = a.dataType): ProgramInfo => {\n      const isBroadcast = !ShapeUtil.areEqual(a.dims, b.dims);\n      let outputShape = a.dims;\n      let outputSize = ShapeUtil.size(a.dims);\n\n      let vectorize = false;\n\n      // TODO: deal with zero-sized tensors (eg. dims=[1,0])\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(a.dims, b.dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        outputSize = ShapeUtil.size(outputShape);\n\n        // check whether vectorize can be enabled\n        let sharedDimension = 1;\n        for (let i = 0; i < outputShape.length; i++) {\n          const dimA = a.dims[a.dims.length - i] ?? 1;\n          const dimB = b.dims[b.dims.length - i] ?? 1;\n          if (dimA === dimB) {\n            sharedDimension *= dimA;\n          } else {\n            break;\n          }\n        }\n        if (sharedDimension % 4 === 0) {\n          vectorize = true;\n        }\n\n\n      } else {\n        // element-wise\n        vectorize = true;\n      }\n\n      return {\n        ...metadata,\n        getShaderSource: (shaderHelper) => createBinaryOpProgramShader(\n            shaderHelper, a.dims, b.dims, outputShape, vectorize, isBroadcast, funcCall, additionalImplementation),\n        outputs: [{dims: outputShape, dataType: outputDataType, gpuDataType: GpuDataType.default}],\n        dispatchGroup: () =>\n            ({x: Math.ceil(outputSize / 64 /* workgroup size */ / (vectorize ? 4 : 1) /* vec size */)})\n      };\n    };\n\nconst createBinaryOpProgramInfoLoader =\n    (inputs: readonly TensorView[], name: string, funcCall: BinaryFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata:\n          ProgramMetadata = {name, inputTypes: [GpuDataType.default, GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createBinaryOpProgramInfo(metadata, inputs[0], inputs[1], funcCall, additionalImplementation)\n      };\n    };\n\nexport const add = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Add', (a, b) => `${a}+${b}`));\n};\n\nexport const div = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Div', (a, b) => `${a}/${b}`));\n};\n\nexport const mul = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Mul', (a, b) => `${a}*${b}`));\n};\n\nexport const pow = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(\n      context.inputs, 'Pow', ({scalar: (a, b) => `pow_f32(${a},${b})`, vector: (a, b) => `pow_vf32(${a},${b})`}), `\n    fn pow_f32(a : f32, b : f32) -> f32 {\n      if (b == 0.0) {\n        return 1.0;\n      } else if (a < 0.0 && b != floor(b)) {\n        return pow(a, b); // NaN\n      }\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\n    }\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n      // TODO: implement vectorized pow\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\n    }\n      `));\n};\n\nexport const sub = (context: ComputeContext): void => {\n  context.compute(createBinaryOpProgramInfoLoader(context.inputs, 'Sub', (a, b) => `${a}-${b}`));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\n\n/**\n * constant value for a workgroup size.\n *\n * We definitely can do further optimization in future, but for now we use 64.\n *\n * rule of thumb: Use [a workgroup size of] 64 unless you know what GPU you are targeting or that your workload\n *                needs something different.\n *\n * from: https://surma.dev/things/webgpu/\n **/\nexport const WORKGROUP_SIZE = 64;\n\nexport interface IndicesHelper {\n  /**\n   * WGSL code of function implementation for offset-to-indices\n   */\n  o2iImpl: string;\n  /**\n   * WGSL code of function call for offset-to-indices\n   */\n  o2iCall: (varOffset: string, varIndices: string) => string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   */\n  i2oImpl: string;\n  /**\n   * WGSL code of function implementation for indices-to-offset\n   *\n   * @param isPtr - whether the variable is a pointer. default is false.\n   */\n  i2oExpression: (varIndices: string, isPtr?: boolean) => string;\n  /**\n   * WGSL code of indices variable declaration\n   *\n   * @param v - variable name.\n   * @param init - initial value.\n   */\n  indicesVariableDeclaration: (v: string, init?: string[]) => string;\n  /**\n   * data type of indices\n   */\n  iType: string;\n}\n\nexport const createIndicesHelper = (name: string, shape: readonly number[]): IndicesHelper => {\n  const iType = shape.length < 2 ? 'u32' : `array<u32, ${shape.length}>`;\n\n  const strides = ShapeUtil.computeStrides(shape);\n  let o2iSnippet = '';\n  for (let i = 0; i < shape.length - 1; i++) {\n    o2iSnippet += `\n    let dim${i} = current / ${strides[i]}u;\n    let rest${i} = current % ${strides[i]}u;\n    (*indices)[${i}] = dim${i};\n    current = rest${i};\n    `;\n  }\n  o2iSnippet += `(*indices)[${shape.length - 1}] = current;`;\n\n  const o2iImpl = shape.length < 2 ? '' : `\n  fn ih_o2i_${name}(offset: u32, indices: ptr<function, ${iType}>) {\n    var current = offset;\n    ${o2iSnippet}\n  }`;\n\n  const o2iCall = (varOffset: string, varIndices: string) =>\n      shape.length < 2 ? `${varIndices}=${varOffset};` : `ih_o2i_${name}(${varOffset}, &${varIndices});`;\n\n  const offsets: string[] = [];\n  if (shape.length === 0) {\n    offsets.push('0u');\n  } else if (shape.length < 2) {\n    offsets.push('(*indices)');\n  } else {\n    for (let i = shape.length - 1; i >= 0; i--) {\n      offsets.push(`${strides[i]}u * ((*indices)[${i}])`);\n    }\n  }\n\n  const i2oImpl = shape.length < 2 ? '' : `\n  fn ih_i2o_${name}(indices: ptr<function, ${iType}>) -> u32 {\n    return ${offsets.join('+')};\n  }`;\n\n  const i2oExpression = (varIndices: string, isPtr?: boolean) =>\n      shape.length < 2 ? `(${isPtr ? '*' : ''}${varIndices})` : `ih_i2o_${name}(${isPtr ? '' : '&'}${varIndices})`;\n\n  const indicesVariableDeclaration = (v: string, init?: string[]) =>\n      `var ${v}:${iType}${init ? `=${iType}(${init.join(',')})` : ''};`;\n\n  return {o2iImpl, o2iCall, i2oImpl, i2oExpression, indicesVariableDeclaration, iType};\n};\n\n/**\n * A ShaderHelper is a helper class for generating WGSL code.\n */\nexport interface ShaderHelper {\n  mainStart(workgroupSize?: number|[number, number, number]): string;\n  guardAgainstOutOfBoundsWorkgroupSizes(size: unknown): string;\n}\n\nclass ShaderHelperImpl implements ShaderHelper {\n  constructor(private normalizedDispatchGroup: [number, number, number]) {}\n  guardAgainstOutOfBoundsWorkgroupSizes(size: number|string): string {\n    // Guard against out-of-bounds work group sizes\n    const sizeInCode = typeof size === 'number' ? `${size}u` : size;\n    return `if (global_idx >= ${sizeInCode}) { return; }`;\n  }\n  mainStart(workgroupSize: number|[number, number, number] = WORKGROUP_SIZE) {\n    const workgroupSizeX = typeof workgroupSize === 'number' ? workgroupSize : workgroupSize[0];\n    const workgroupSizeY = typeof workgroupSize === 'number' ? 1 : workgroupSize[1];\n    const workgroupSizeZ = typeof workgroupSize === 'number' ? 1 : workgroupSize[2];\n\n    const is1DimensionDispatch = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1;\n    const paramList = is1DimensionDispatch ? '@builtin(global_invocation_id) global_id : vec3<u32>' :\n                                             `@builtin(local_invocation_index) local_index : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>`;\n    const globalIdxDefinition = is1DimensionDispatch ?\n        'let global_idx = global_id.x;' :\n        `let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0] * this.normalizedDispatchGroup[1]}u +\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${\n            workgroupSizeX * workgroupSizeY * workgroupSizeZ}u + local_index;`;\n\n    return `@compute @workgroup_size(${workgroupSizeX}, ${workgroupSizeY}, ${workgroupSizeZ})\n  fn main(${paramList}) {\n    ${globalIdxDefinition}\n  `;\n  }\n}\n\nexport const createShaderHelper = (dispatchGroup: [number, number, number]): ShaderHelper =>\n    new ShaderHelperImpl(dispatchGroup);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createGroupedConvProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += b[output_channel];' : '';\n      const xShape = inputs[0].dims;\n      const wShape = inputs[1].dims;\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n\n      const dataType = 'f32';  // TODO: support other data type\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> x : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> w : array<${dataType}>;`\n      ];\n      if (hasBias) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> b : array<${dataType}>;`);\n      }\n\n      const isChannelLast = attributes.format === 'NHWC';\n      const outputShape = calculateOutputShape(\n          xShape, wShape, attributes.dilations, attributes.pads, attributes.strides, isChannelLast);\n      const outputSize = ShapeUtil.size(outputShape);\n      const outputIndicesHelper = createIndicesHelper('output', outputShape);\n      const xIndicesHelper = createIndicesHelper('x', xShape);\n      const wIndicesHelper = createIndicesHelper('w', wShape);\n\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const strides: vec2<u32> = vec2(${attributes.strides[0]}u, ${attributes.strides[1]}u);\n  const pads: vec2<u32> = vec2(${attributes.pads[0]}u, ${attributes.pads[1]}u);\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputStorageBuffersDeclarations.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n  ${outputIndicesHelper.o2iImpl}\n  ${xIndicesHelper.i2oImpl}\n  ${wIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('outputIndices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'outputIndices')}\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${isChannelLast ? 3 : 1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${isChannelLast ? 1 : 2}], outputIndices[${\n          isChannelLast ? 2 : 3}]) * strides - pads;\n    let group_id: u32 = output_channel / ${outputChannelsPerGroup}u;\n\n    var value: ${dataType} = ${dataType}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < ${wShape[1]}u; wInChannel++) {\n      let input_channel = group_id * ${wShape[1]}u + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < ${wShape[2]}u; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]}u;\n\n        if (xHeight < 0u || xHeight >= ${xShape[isChannelLast ? 1 : 2]}u) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < ${wShape[3]}u; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]}u;\n          if (xWidth < 0u || xWidth >= ${xShape[isChannelLast ? 2 : 3]}u) {\n            continue;\n          }\n\n          ${\n          xIndicesHelper.indicesVariableDeclaration(\n              'xIndices',\n              isChannelLast ? ['batch', 'xHeight', 'xWidth', 'input_channel'] :\n                              [\n                                'batch', 'input_channel', 'xHeight', 'xWidth'\n                              ])}\n          let xVal = x[${xIndicesHelper.i2oExpression('xIndices')}];\n          ${\n          wIndicesHelper.indicesVariableDeclaration('wIndices', [\n            'output_channel', 'wInChannel', 'wHeight', 'wWidth'\n          ])}\n          let wVal = w[${wIndicesHelper.i2oExpression('wIndices')}];\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n      return {\n        ...metadata,\n        outputs: [{\n          dims: squeezeOutputShapeFunction ? squeezeOutputShapeFunction(outputShape) : outputShape,\n          dataType: inputs[0].dataType,\n          gpuDataType: GpuDataType.default\n        }],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\n/**\n * naive grouped conv implementation, supports 1d/2d conv\n * @param squeezeOutputShapeFunction - an optional function to squeeze the output shape, only used in conv1d\n */\nexport const createGroupedConvProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes,\n     squeezeOutputShapeFunction?: (shape: readonly number[]) => number[]): ProgramInfoLoader => {\n      const metadata = createGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createGroupedConvProgramInfo(inputs, metadata, attributes, squeezeOutputShapeFunction)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext} from '../types';\n\nimport {createGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {createConv2DMatMulProgramInfoLoader} from './conv2d-mm';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createTransposeProgramInfo, TransposeAttributes, transposeProgramMetadata} from './transpose';\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[], isChannelLast: boolean): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(isChannelLast ? 1 : 2, isChannelLast ? 3 : 4);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      outputShape.splice(0, 0, batchSize);\n      outputShape.splice(isChannelLast ? 3 : 1, 0, outChannels);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly format: 'NHWC'|'NCHW';\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n  readonly wIsConst: boolean;\n}\n\n// for transposing weight tensor from [M, C/group, KH, KW] to [KH, KW, C/group, M]\nconst weightTransposeAttribute: TransposeAttributes = createAttributeWithCacheKey({perm: [2, 3, 1, 0]});\n\nconst validateInputs = (inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 && inputs[0].dims.length !== 3) {\n    throw new Error('currently only support conv 1D and 2D');\n  }\n\n  if (inputs[0].dims.length !== inputs[1].dims.length) {\n    throw new Error('filter does not have same dimension as input');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[attributes.format === 'NHWC' ? inputs[0].dims.length - 1 : 1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].dataType !== DataType.float) {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: readonly TensorView[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  for (let i = 2; i < inputs[1].dims.length; ++i) {\n    if (kernelShape[i - 2] === 0) {\n      kernelShape[i - 2] = inputs[1].dims[i];\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.format === 'NHWC',\n      attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes = (attributes: Record<string, unknown>): ConvAttributes => {\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const format = attributes.format as 'NHWC' | 'NCHW';\n  const autoPad = ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number];\n  const dilations = attributes.dilations as [number, number];\n  const group = attributes.group as number;\n  const kernelShape = attributes.kernel_shape as [number, number];\n  const pads = attributes.pads as [number, number, number, number];\n  const strides = attributes.strides as [number, number];\n  const wIsConst = (attributes.w_is_const as () => boolean)();\n\n  return createAttributeWithCacheKey(\n      {autoPad, format, dilations, group, kernelShape, pads, strides, wIsConst, ...activationAttributes});\n};\n\nconst conv2d = (context: ComputeContext, inputs: readonly TensorView[], attributes: ConvAttributes): void => {\n  const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n\n  // check attributes\n\n  const hasBias = inputs.length === 3;\n  // const hasPreluActivationWeights = false; /* TODO: add support for prelu activation weights */\n  const isChannelsLast = attributes.format === 'NHWC';\n\n  // const batchSize = context.inputs[0].dims[0];\n  const inputHeight = inputs[0].dims[isChannelsLast ? 1 : 2];\n  const inputWidth = inputs[0].dims[isChannelsLast ? 2 : 3];\n  const inputChannels = inputs[0].dims[isChannelsLast ? 3 : 1];\n  const weightHeight = inputs[1].dims[2];\n  const weightWidth = inputs[1].dims[3];\n\n  const outputShape = calculateOutputShape(\n      inputs[0].dims, inputs[1].dims, attributes.dilations, adjustedAttributes.pads, attributes.strides,\n      isChannelsLast);\n  const outHeight = outputShape[isChannelsLast ? 1 : 2];\n  const outWidth = outputShape[isChannelsLast ? 2 : 3];\n  const outChannels = outputShape[isChannelsLast ? 3 : 1];\n\n  const sameSize =\n      isChannelsLast && weightHeight === inputHeight && weightWidth === inputWidth && attributes.autoPad === 'VALID';\n  if (sameSize ||\n      (weightHeight === 1 && weightWidth === 1 && attributes.dilations[0] === 1 && attributes.dilations[1] === 1 &&\n       attributes.strides[0] === 1 && attributes.strides[1] === 1 &&\n       (attributes.autoPad === 'SAME_UPPER' || attributes.autoPad === 'SAME_LOWER' ||\n        attributes.autoPad === 'VALID'))) {\n    // TODO: implement conv2dByMatMul()\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  if (!isChannelsLast || attributes.group !== 1) {\n    context.compute(createGroupedConvProgramInfoLoader(inputs, adjustedAttributes));\n    return;\n  }\n\n  // TODO: implement conv2dWithIm2Col()\n\n  const dimAOuter = isChannelsLast ? outHeight * outWidth : outChannels;\n  const dimBOuter = isChannelsLast ? outChannels : outHeight * outWidth;\n  const dimInner = weightHeight * weightWidth * inputChannels;\n\n  const sequentialAccessByThreads = /* backend.adapterInfo.isIntel() */ true;\n\n  // STEP.1: transpose weight\n  const transposedWeight = (context.customData.wT as TensorView | undefined) ??\n      context.compute(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: weightTransposeAttribute.cacheKey,\n            get: () => createTransposeProgramInfo(inputs[1], weightTransposeAttribute.perm)\n          },\n          {inputs: [1], outputs: [attributes.wIsConst ? -2 : -1]})[0];\n  if (attributes.wIsConst && !context.customData.wT) {\n    context.customData.wT = transposedWeight;\n  }\n\n  // STEP.2: prepare reshaped inputs\n  const convInputs = [inputs[0], transposedWeight];\n  if (hasBias) {\n    if (!isChannelsLast && inputs[2].dims.length === 1) {\n      convInputs.push(inputs[2].reshape([inputs[2].dims[0], 1, 1]));\n    } else {\n      convInputs.push(inputs[2]);\n    }\n  }\n\n  // STEP.3: compute matmul\n  context.compute(\n      createConv2DMatMulProgramInfoLoader(\n          convInputs, adjustedAttributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n          sequentialAccessByThreads),\n      {inputs: convInputs});\n};\n\nconst conv1d = (context: ComputeContext, attributes: ConvAttributes): void => {\n  // extend the input to 2D by adding H dimension\n  const isChannelLast = attributes.format === 'NHWC';\n  const inputs = [\n    context.inputs[0].reshape(\n        isChannelLast ?\n            // [N, W, C] -> [N, H=1, W, C]\n            [context.inputs[0].dims[0], 1, context.inputs[0].dims[1], context.inputs[0].dims[2]] :\n            // [N, C, W] -> [N, C, H=1, W]\n            [context.inputs[0].dims[0], context.inputs[0].dims[1], 1, context.inputs[0].dims[2]]),\n    //[FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kW] -> [FILTER_OUT_CHANNEL, FILTER_IN_CHANNEL, kH=1, kW]\n    context.inputs[1].reshape([context.inputs[1].dims[0], context.inputs[1].dims[1], 1, context.inputs[1].dims[2]])\n  ];\n  if (context.inputs.length === 3) {\n    inputs.push(context.inputs[2]);\n  }\n  const pads = [0, attributes.pads[0], 0, attributes.pads[1]];\n  const strides = [1].concat(attributes.strides);\n  const dilations = [1].concat(attributes.dilations);\n  const kernelShape = [1].concat(attributes.kernelShape);\n  const adjustedAttributes = getAdjustedConvAttributes({...attributes, pads, strides, dilations, kernelShape}, inputs);\n  context.compute(createGroupedConvProgramInfoLoader(\n      inputs, adjustedAttributes,\n      outputShape => isChannelLast ? [outputShape[0], outputShape[2], outputShape[3]] : []));\n};\n\nexport const conv = (context: ComputeContext, attributes: ConvAttributes): void => {\n  validateInputs(context.inputs, attributes);  // currently will fail if not conv1D/2D\n  if (context.inputs[0].dims.length === 3) {\n    conv1d(context, attributes);\n  } else {\n    conv2d(context, context.inputs, attributes);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {GpuDataType, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {createConv2DMatMulProgramInfo} from './3rd-party/conv2d_mm_webgpu';\nimport {ConvAttributes} from './conv';\n\n\nconst createConv2DMatMulProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'Conv2DMatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nexport const createConv2DMatMulProgramInfoLoader =\n    (inputs: readonly TensorView[], attributes: ConvAttributes, outputShape: readonly number[], dimAOuter: number,\n     dimBOuter: number, dimInner: number, hasBias: boolean, sequentialAccessByThreads: boolean): ProgramInfoLoader => {\n      const metadata = createConv2DMatMulProgramMetadata(hasBias, attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createConv2DMatMulProgramInfo(\n            inputs, metadata, attributes, outputShape, dimAOuter, dimBOuter, dimInner, hasBias,\n            sequentialAccessByThreads)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {MAX_CLIP, MIN_CLIP} from '../../util';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport const getActicationSnippet =\n    (attributes: InternalActivationAttributes): {activationFunction: string; applyActivation: string} => {\n      switch (attributes.activation) {\n        case 'Relu':\n          return {activationFunction: '', applyActivation: 'value = max(value, 0.0);'};\n        case 'Sigmoid':\n          return {activationFunction: '', applyActivation: 'value = (1.0 / (1.0 + exp(-value)));'};\n        case 'Clip':\n          return {\n            activationFunction:\n                `const clip_min_=f32(${attributes.clipMin!});const clip_max_=f32(${attributes.clipMax!});`,\n            applyActivation: 'value = clamp(value, clip_min_, clip_max_);'\n          };\n          // TODO: adding other activations that can be fused.\n        default:\n          return {activationFunction: '', applyActivation: ''};\n      }\n    };\n\nexport const parseInternalActivationAttributes =\n    (attributes: Record<string, unknown>|undefined): InternalActivationAttributes => {\n      const activation = attributes?.activation as string || '';\n\n      if (activation === 'Clip') {\n        const [clipMin, clipMax] = attributes?.activation_params as [number, number] || [MIN_CLIP, MAX_CLIP];\n        return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n      }\n      return {activation, activationCacheKey: activation};\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {GemmUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (inputs.length < 2 || inputs.length > 3) {\n    throw new Error('Invaid input number.');\n  }\n\n  // 'C' can be of dimensionality 0, 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length > 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].dataType !== DataType.float) || (inputs[1].dataType !== DataType.float) ||\n      (inputs.length === 3 && inputs[2].dataType !== DataType.float)) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].dataType !== inputs[1].dataType) ||\n      (inputs.length === 3 && inputs[0].dataType !== inputs[2].dataType)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n}\n\nconst offsetC = (m: number, n: number, dims: readonly number[]): string => {\n  if (dims.length === 0) {\n    return '0u';\n  }\n\n  const broadcastM = (dims.length === 1 && m !== 1) || (dims.length === 2 && dims[0] !== m);\n  const broadcastN = dims[dims.length - 1] !== n;\n\n  let offset = '0u';\n  if (!broadcastM) {\n    offset += `+ m * ${dims[dims.length - 1]}u`;\n  }\n  if (!broadcastN) {\n    offset += '+n';\n  }\n\n  return offset;\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N, K] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      const outputSize = ShapeUtil.size(outputShape);\n      let line = '';\n      if (attributes.transA && attributes.transB) {\n        line = 'value += a[k * M + m] * b[n * K + k];';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += a[k * M + m] * b[k * N + n];';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += a[m * K + k] * b[n * K + k];';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += a[m * K + k] * b[k * N + n];';\n      }\n\n      const dataType = 'f32';  // TODO: support other data type\n      const calculateAlpha = attributes.alpha === 1 ? '' : 'value *= alpha;';\n      const calculateC = inputs.length === 3 ? `value += beta * c[${offsetC(M, N, inputs[2].dims)}];` : '';\n      const inputStorageBuffersDeclarations = [\n        `@group(0) @binding(0) var<storage, read> a : array<${dataType}>;`,\n        `@group(0) @binding(1) var<storage, read> b : array<${dataType}>;`\n      ];\n      if (inputs.length === 3) {\n        inputStorageBuffersDeclarations.push(`@group(0) @binding(2) var<storage, read> c : array<${dataType}>;`);\n      }\n      const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n  const alpha = ${dataType}(${attributes.alpha});\n  const beta = ${dataType}(${attributes.beta});\n\n  ${inputStorageBuffersDeclarations.join('\\n')}\n  @group(0) @binding(${inputs.length}) var<storage, read_write> output : array<${dataType}>;\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let m = global_id.x / N;\n    let n = global_id.x % N;\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      ${line}\n    }\n\n    ${calculateAlpha}\n    ${calculateC}\n    output[global_id.x] = value;\n\n  }`;\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource,\n        dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n      };\n    };\n\nconst createGemmProgramInfoLoader = (inputs: readonly TensorView[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputTypes: inputs.length === 3 ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                                      [GpuDataType.default, GpuDataType.default],\n    cacheHint: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nexport const gemm = (context: ComputeContext, attributes: GemmAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute(createGemmProgramInfoLoader(context.inputs, attributes));\n};\n\nexport const parseGemmAttributes = (attributes: Record<string, unknown>): GemmAttributes =>\n    createAttributeWithCacheKey(attributes as Omit<GemmAttributes, keyof AttributeWithCacheKey>);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../util';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\n\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputTypes: hasBias ? [GpuDataType.default, GpuDataType.default, GpuDataType.default] :\n                        [GpuDataType.default, GpuDataType.default],\n  cacheHint\n});\n\nconst createMatmulProgramInfo =\n    (metadata: ProgramMetadata, inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes):\n        ProgramInfo => {\n          const aShape = inputs[0].dims;\n          const bShape = inputs[1].dims;\n          const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n          if (!outputShape) {\n            throw new Error('Can\\'t use matmul on the given tensors');\n          }\n          const outputSize = ShapeUtil.size(outputShape);\n          // TODO: support broadcasting\n\n          const dataType = 'f32';  // TODO: support other data type\n          const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n          const M = outputShape[outputShape.length - 2];\n          const K = aShape[aShape.length - 1];\n          const N = outputShape[outputShape.length - 1];\n          const getShaderSource = (shaderHelper: ShaderHelper) => `\n  const M: u32 = ${M}u;\n  const N: u32 = ${N}u;\n  const K: u32 = ${K}u;\n\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read> b : array<${dataType}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${dataType}>;\n\n  ${activationFunction}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    let stack = global_idx / (M * N);\n    let mn = global_idx % (M * N);\n    let n = global_idx % N;\n    let m = mn / N;\n\n    let offsetA = stack * (M * K);\n    let offsetB = stack * (K * N);\n\n    var value = ${dataType}(0);\n    for (var k: u32 = 0u; k<${K}u; k++) {\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\n    }\n    ${applyActivation}\n    output[global_idx] = value;\n  }`;\n          return {\n            ...metadata,\n            outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n            getShaderSource,\n            dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n          };\n        };\n\nexport const createMatmulProgramInfoLoader =\n    (inputs: readonly TensorView[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n    };\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if (inputs[0].dataType !== DataType.float || inputs[1].dataType !== DataType.float) {\n    throw new Error('inputs should be float type');\n  }\n};\n\nexport const matMul = (context: ComputeContext): void => {\n  validateInputs(context.inputs);\n\n  context.compute(createMatmulProgramInfoLoader(context.inputs, {activation: '', activationCacheKey: ''}));\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramMetadata} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\n// TODO: support:\n// - ceil_mode                 \"test_maxpool_2d_ceil\"\n// - storage_order             \"test_maxpool_with_argmax_2d_precomputed_strides\"\n// - [MaxPool] dilations       \"test_maxpool_2d_dilations\"\n// - [MaxPool] output[1]       \"test_maxpool_with_argmax_2d_precomputed_pads\"\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Pool ops supports 2-D inputs only for now.');\n  }\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getAdjustedPoolAttributesAndOutputShape = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    inputs: readonly TensorView[], attributes: AttributeType, isGlobalOperator: boolean): [AttributeType, number[]] => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const inputShapeAsChannelFirst = isChannelsLast ?\n      [inputs[0].dims[0], inputs[0].dims[3], inputs[0].dims[1], inputs[0].dims[2]] :\n      inputs[0].dims.slice();\n  const hasDilations = Object.hasOwnProperty.call(attributes, 'dilations');\n  const kernelShape = attributes.kernelShape.slice();\n  const strides = attributes.strides.slice();\n  const dilations: number[] = hasDilations ? (attributes as MaxPoolAttributes).dilations.slice() : [];\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPoolAttributes(isGlobalOperator, inputShapeAsChannelFirst, kernelShape, strides, dilations, pads);\n\n  const outputShapeAsChannelFirst = PoolConvUtil.computePoolOutputShape(\n      isGlobalOperator, inputShapeAsChannelFirst, strides, dilations, kernelShape, pads, attributes.autoPad);\n\n  const newAttributes = Object.assign({}, attributes);\n  if (hasDilations) {\n    Object.assign(newAttributes, {kernelShape, strides, pads, dilations, cacheKey: attributes.cacheKey});\n  } else {\n    Object.assign(newAttributes, {kernelShape, strides, pads, cacheKey: attributes.cacheKey});\n  }\n  return [\n    newAttributes,\n    isChannelsLast ?\n        [\n          outputShapeAsChannelFirst[0], outputShapeAsChannelFirst[2], outputShapeAsChannelFirst[3],\n          outputShapeAsChannelFirst[1]\n        ] :\n        outputShapeAsChannelFirst\n  ];\n};\n\nconst generatePoolingCode = <AttributeType extends AveragePoolAttributes|MaxPoolAttributes>(\n    shaderHelper: ShaderHelper, inputDims: readonly number[], outputShape: readonly number[], attributes: AttributeType,\n    op1: string, op2: string, dataType: string, start: string): string => {\n  const isChannelsLast = attributes.format === 'NHWC';\n  const rank = inputDims.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const xIndicesHelper = createIndicesHelper('x', inputDims);\n\n  if (attributes.kernelShape.length <= 2) {\n    const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n    const sw = attributes.strides[attributes.strides.length - 1];\n    const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n    const pwEnd = attributes.pads[attributes.pads.length - 1];\n    const dimIdxW = rank - (isChannelsLast ? 2 : 1);\n    let codeW = '';\n    let codeH = '';\n    let codeHEnd = '';\n    if (pwStart + pwEnd !== 0) {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                if (xIndices[${dimIdxW}] < 0 || xIndices[${dimIdxW}] >= ${inputDims[dimIdxW]}) {\n                  pad++;\n                  continue;\n                }\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      codeW = `\n              for (var i: u32 = 0u; i < ${kw}u; i++) {\n                xIndices[${dimIdxW}] = indices[${dimIdxW}] * ${sw} - ${pwStart} + i;\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    }\n\n    if (attributes.kernelShape.length === 2) {\n      const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n      const sh = attributes.strides[attributes.strides.length - 2];\n      const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n      const phEnd = attributes.pads[attributes.pads.length - 2];\n      const dimIdxH = rank - (isChannelsLast ? 3 : 2);\n      const dimH = inputDims[dimIdxH];\n      if (phStart + phEnd !== 0) {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                  if (xIndices[${dimIdxH}] < 0 || xIndices[${dimIdxH}] >= ${dimH}) {\n                    pad+= ${kw};\n                    continue;\n                  }\n              `;\n      } else {\n        codeH = `\n                for (var j: u32 = 0u; j < ${kh}u; j++) {\n                  xIndices[${dimIdxH}] = indices[${dimIdxH}] * ${sh} - ${phStart} + j;\n                `;\n      }\n      codeHEnd = `\n              }\n            `;\n    }\n\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var value: ${dataType} = ${dataType}(${start});\n              var pad = 0;\n              ${codeH}\n              ${codeW}\n              ${codeHEnd}\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  } else {\n    if (isChannelsLast) {\n      throw new Error('Pooling with kernelShape.length > 2 is not supported for NHWC format.');\n    }\n    const kernelSize = ShapeUtil.size(attributes.kernelShape);\n    const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n    const stridesRank = kernelStrides.length;\n    const padsRank = attributes.pads.length;\n    const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n    let padCode = '';\n    if (hasPads) {\n      padCode = `\n                if (xIndices[j] >= inputDims[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n                ${op1}\n              }`;\n    } else {\n      padCode = `\n              }\n              let x_val = x[${xIndicesHelper.i2oExpression('xIndices')}];\n              ${op1}\n            `;\n    }\n    const poolingCode = `\n            @group(0) @binding(0) var<storage, read> x : array<${dataType}>;\n            @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n            ${outputIndicesHelper.o2iImpl}\n            ${xIndicesHelper.i2oImpl}\n\n            const pads = array<u32, ${padsRank}>(${attributes.pads.map(i => `${i}u`).join(',')});\n            const inputDims = array<u32, ${rank}>(${inputDims.map(i => `${i}u`).join(',')});\n            const kernelStrides = array<u32, ${stridesRank}>(${kernelStrides.map(i => `${i}u`).join(',')});\n            const strides = array<u32, ${stridesRank}>(${attributes.strides.map(i => `${i}u`).join(',')});\n\n            ${shaderHelper.mainStart()}\n              ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n              ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n              ${outputIndicesHelper.indicesVariableDeclaration('xIndices')}\n              ${outputIndicesHelper.o2iCall('global_idx', 'xIndices')}\n\n              var offsets: array<u32, ${stridesRank}>;\n\n              var value = ${dataType}(${start});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < ${kernelSize}u; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${stridesRank - 1}u; j++) {\n                  offsets[j] = offset / kernelStrides[j];\n                  offset -= offsets[j] * kernelStrides[j];\n                }\n                offsets[${stridesRank - 1}] = offset;\n\n                isPad = false;\n                for (var j = ${rank - stridesRank}u; j < ${rank}u; j++) {\n                  xIndices[j] = indices[j] * strides[j - ${rank - stridesRank}u]\n                    + offsets[j - ${rank - stridesRank}u] - pads[j - 2u];\n                  ${padCode}\n              }\n              ${op2}\n\n              output[global_idx] = value;\n            }`;\n    return poolingCode;\n  }\n};\n\nexport interface FormatAttributes {\n  readonly format: 'NHWC'|'NCHW';\n}\n\nexport interface PoolCommonAttributes extends FormatAttributes {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly kernelShape: readonly number[];\n  readonly strides: readonly number[];\n  readonly pads: readonly number[];\n}\n\nconst parsePoolCommonAttributes = (attributes: Record<string, unknown>): PoolCommonAttributes => ({\n  format: attributes.format as FormatAttributes['format'],\n  autoPad: ['NOTSET', 'VALID', 'SAME_UPPER', 'SAME_LOWER'][attributes.auto_pad as number],\n  ceilMode: attributes.ceil_mode as number,\n  kernelShape: attributes.kernel_shape as [number, number],\n  strides: attributes.strides as [number, number],\n  pads: attributes.pads as [number, number, number, number]\n});\n\nexport interface AveragePoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly countIncludePad: boolean;\n}\n\nconst createAveragePoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: AveragePoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const kernelSize = ShapeUtil.size(adjustedAttributes.kernelShape);\n\n      const dataType = 'f32';\n\n      const op1 = 'value += x_val;';\n      let op2 = '';\n      if (adjustedAttributes.countIncludePad) {\n        op2 += `value /= ${dataType}(${kernelSize});`;\n      } else {\n        op2 += `value /= ${dataType}(${kernelSize} - pad);`;\n      }\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper => generatePoolingCode(\n            shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, dataType, '0.0'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const parseAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const countIncludePad = (attributes.count_include_pad as number) === 0 ? false : true;\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode'\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n  }\n\n  return createAttributeWithCacheKey({countIncludePad, ...attr});\n};\n\nexport const averagePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'AveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nconst globalPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  dilations: [],\n  cacheKey: ''\n};\n\nexport const parseGlobalAveragePoolAttributes = (attributes: Record<string, unknown>): AveragePoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalAveragePool = (context: ComputeContext, attributes: AveragePoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalAveragePool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createAveragePoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n\nexport interface MaxPoolAttributes extends PoolCommonAttributes, AttributeWithCacheKey {\n  readonly storageOrder: number;\n  readonly dilations: number[];\n}\n\nconst createMaxPoolProgramInfo =\n    (inputs: readonly TensorView[], metadata: ProgramMetadata, isGlobalOperator: boolean,\n     attributes: MaxPoolAttributes): ProgramInfo => {\n      const [adjustedAttributes, outputShape] =\n          getAdjustedPoolAttributesAndOutputShape(inputs, attributes, isGlobalOperator);\n      const op1 = `\n      value = max(x_val, value);\n    `;\n      const op2 = '';\n      return {\n        ...metadata,\n        outputs: [{dims: outputShape, dataType: inputs[0].dataType, gpuDataType: GpuDataType.default}],\n        getShaderSource: shaderHelper =>\n            generatePoolingCode(shaderHelper, inputs[0].dims, outputShape, adjustedAttributes, op1, op2, 'f32', '-1e5'),\n        dispatchGroup: () => ({x: Math.ceil(ShapeUtil.size(outputShape) / 64 /* workgroup size */)})\n      };\n    };\n\nexport const maxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'MaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, false, attributes)});\n};\n\nexport const parseMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const storageOrder = attributes.storage_order as number;\n  const dilations = attributes.dilations as [number, number];\n\n  const attr = parsePoolCommonAttributes(attributes);\n  // TODO: support attribute 'ceil_mode' and 'storage_order'\n  if (storageOrder !== 0) {\n    throw new Error('column major storage order is not yet supported for MaxPool');\n  }\n  if (attr.ceilMode !== 0) {\n    throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n  }\n\n  return createAttributeWithCacheKey({storageOrder, dilations, ...attr});\n};\n\nexport const parseGlobalMaxPoolAttributes = (attributes: Record<string, unknown>): MaxPoolAttributes => {\n  const format = attributes.format as FormatAttributes['format'];\n  return {format, ...globalPoolAttributes, cacheKey: format};\n};\n\nexport const globalMaxPool = (context: ComputeContext, attributes: MaxPoolAttributes): void => {\n  validateInputs(context.inputs);\n  const metadata = {name: 'GlobalMaxPool', inputTypes: [GpuDataType.default], cacheHint: attributes.cacheKey};\n  context.compute({...metadata, get: () => createMaxPoolProgramInfo(context.inputs, metadata, true, attributes)});\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {DataType} from '../../../wasm-common';\nimport {TensorView} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo} from '../types';\n\nimport {createIndicesHelper, ShaderHelper} from './common';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nexport const transposeProgramMetadata = {\n  name: 'Transpose',\n  inputTypes: [GpuDataType.default]\n};\n\nconst validateInputs = (inputs: readonly TensorView[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].dataType !== DataType.float) {\n    throw new Error('input should be float tensor');\n  }\n};\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] =>\n    (perm && perm.length !== inputShape.length) ? [...(inputShape.keys())].reverse() : perm;\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] =>\n    ShapeUtil.sortBasedOnPerm(inputShape, getAdjustedPerm(inputShape, perm));\n\nconst permFunctionBody = (perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`fn perm(a: ptr<function, array<u32, ${rank}>>, i: ptr<function, array<u32, ${rank}>>) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\t(*a)[${perm[i]}]=(*i)[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nexport const createTransposeProgramInfo = (input: TensorView, permAttr: number[]): ProgramInfo => {\n  const dataType = 'f32';  // TODO: support other data type\n  const inputShape = input.dims;\n  const perm = getAdjustedPerm(inputShape, permAttr);\n  const outputShape = getOutputShape(inputShape, perm);\n  const rank = inputShape.length;\n  const outputSize = ShapeUtil.size(outputShape);\n  // A dims=[${inputs[0].dims.toString()}]\n  // out Dims=[${unpackedOutputShape.toString()}]\n  // based on perm=[${perm.toString()}]\n\n  const outputIndicesHelper = createIndicesHelper('output', outputShape);\n  const inputIndicesHelper = createIndicesHelper('a', inputShape);\n\n  const getShaderSource = (shaderHelper: ShaderHelper) => `\n  @group(0) @binding(0) var<storage, read> a : array<${dataType}>;\n  @group(0) @binding(1) var<storage, read_write> output : array<${dataType}>;\n\n  ${permFunctionBody(perm, rank)}\n  ${outputIndicesHelper.o2iImpl}\n  ${inputIndicesHelper.i2oImpl}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(outputSize)}\n\n    ${outputIndicesHelper.indicesVariableDeclaration('indices')}\n    ${outputIndicesHelper.o2iCall('global_idx', 'indices')}\n    ${inputIndicesHelper.indicesVariableDeclaration('aIndices')}\n    perm(&aIndices, &indices);\n\n    output[global_idx] = a[${inputIndicesHelper.i2oExpression('aIndices')}];\n  }`;\n  return {\n    ...transposeProgramMetadata,\n    outputs: [{dims: outputShape, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n    getShaderSource,\n    dispatchGroup: () => ({x: Math.ceil(outputSize / 64 /* workgroup size */)})\n  };\n};\n\nexport const transpose = (context: ComputeContext, attributes: TransposeAttributes): void => {\n  validateInputs(context.inputs);\n  context.compute({\n    ...transposeProgramMetadata,\n    cacheHint: attributes.cacheKey,\n    get: () => createTransposeProgramInfo(context.inputs[0], attributes.perm)\n  });\n};\n\nexport const parseTransposeAttributes = (attributes: Record<string, unknown>): TransposeAttributes =>\n    createAttributeWithCacheKey({perm: attributes.perm as number[]});\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {TensorView} from '../../tensor';\nimport {MAX_CLIP, MIN_CLIP, ShapeUtil} from '../../util';\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../attribute-with-cache-key';\nimport {ComputeContext, GpuDataType, ProgramInfo, ProgramInfoLoader, ProgramMetadata} from '../types';\n\nimport {ShaderHelper} from './common';\n\ntype BuiltinFunctionName = string;\ntype ElementwiseCustomExpression = (expression: string) => string;\ntype ElementwiseFunctionCall = BuiltinFunctionName|ElementwiseCustomExpression;\n\nconst createElementwiseProgramShader =\n    (shaderHelper: ShaderHelper, datasize: number, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): string => {\n      const vecSize = Math.ceil(datasize / 4);\n\n      let expression = '';\n      if (typeof funcCall === 'string') {\n        expression = `${funcCall}(a)`;\n      } else {\n        expression = funcCall('a');\n      }\n      return `\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\n\n  ${additionalImplementation ?? ''}\n\n  ${shaderHelper.mainStart()}\n    ${shaderHelper.guardAgainstOutOfBoundsWorkgroupSizes(vecSize)}\n\n    let a = inputData[global_idx];\n    outputData[global_idx] = ${expression};\n  }`;\n    };\n\nconst createElementwiseProgramInfo =\n    (metadata: ProgramMetadata, input: TensorView, funcCall: ElementwiseFunctionCall,\n     additionalImplementation?: string): ProgramInfo => ({\n      ...metadata,\n      getShaderSource: shaderHelper =>\n          createElementwiseProgramShader(shaderHelper, ShapeUtil.size(input.dims), funcCall, additionalImplementation),\n      outputs: [{dims: input.dims, dataType: input.dataType, gpuDataType: GpuDataType.default}],\n      dispatchGroup: (inputTensors) =>\n          ({x: Math.ceil(ShapeUtil.size(inputTensors[0].dims) / 64 /* workgroup size */ / 4 /* vec size */)})\n    });\n\nconst createElementwiseProgramInfoLoader =\n    (input: TensorView, name: string, funcCall: ElementwiseFunctionCall, additionalImplementation?: string,\n     cacheKey?: string): ProgramInfoLoader => {\n      const metadata: ProgramMetadata = {name, inputTypes: [GpuDataType.default], cacheHint: cacheKey};\n      return {\n        ...metadata,\n        get: () => createElementwiseProgramInfo(metadata, input, funcCall, additionalImplementation)\n      };\n    };\n\nexport const abs = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Abs', 'abs'));\n};\n\nexport const acos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acos', 'acos'));\n};\n\nexport const acosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Acosh', 'acosh'));\n};\n\nexport const asin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asin', 'asin'));\n};\n\nexport const asinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Asinh', 'asinh'));\n};\n\nexport const atan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atan', 'atan'));\n};\nexport const atanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Atanh', 'atanh'));\n};\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clipV10 = (context: ComputeContext, attributes: ClipAttributes): void => {\n  context.compute(\n      createElementwiseProgramInfoLoader(\n          context.inputs[0], 'Clip', a => `clamp(${a}, clip_min_, clip_max_)`, `\n    const clip_min_: vec4<f32> = vec4(f32(${attributes.min}));\n    const clip_max_: vec4<f32> = vec4(f32(${attributes.max}));\n`,\n          attributes.cacheKey),\n      {inputs: [0]});\n};\nconst generateClipAttributesFromInputs = (inputs: readonly TensorView[]): ClipAttributes => {\n  const min = (inputs.length >= 2) ? inputs[1].getFloat32Array()[0] : MIN_CLIP;\n  const max = (inputs.length >= 3) ? inputs[2].getFloat32Array()[0] : MAX_CLIP;\n  return createAttributeWithCacheKey({min, max});\n};\n\nexport const clip = (context: ComputeContext): void => {\n  const attributes = generateClipAttributesFromInputs(context.inputs);\n  clipV10(context, attributes);\n};\n\nexport const ceil = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Ceil', 'ceil'));\n};\n\nexport const cos = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cos', 'cos'));\n};\n\nexport const cosh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Cosh', 'cosh'));\n};\n\nexport interface AlphaAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const parseAlphaAttributes = (attributes: Record<string, unknown>): AlphaAttributes =>\n    createAttributeWithCacheKey(attributes as {alpha: number});\n\nexport const elu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Elu', a => `elu_vf32(${a})`, `\n  const elu_alpha_: f32 = f32(${attributes.alpha});\n\n  fn elu_f32(a: f32) -> f32 {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,\n      attributes.cacheKey));\n};\n\nexport const erf = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Erf', a => `erf_vf32(${a})`, `\n  const r0: f32 = 0.3275911;\n  const r1: f32 = 0.254829592;\n  const r2: f32 = -0.284496736;\n  const r3: f32 = 1.421413741;\n  const r4: f32 = -1.453152027;\n  const r5: f32 = 1.061405429;\n\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\n    let absv = abs(v);\n    let x = 1.0 / (1.0 + r0 * absv);\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n  }`));\n};\n\nexport const exp = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Exp', 'exp'));\n};\n\nexport const floor = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Floor', 'floor'));\n};\n\nexport const leakyRelu = (context: ComputeContext, attributes: AlphaAttributes): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'LeakyRelu', a => `select(leaky_relu_alpha_ * ${a}, ${a}, ${a} >= vec4<f32>(0.0))`,\n      `const leaky_relu_alpha_: f32 = f32(${attributes.alpha});`, attributes.cacheKey));\n};\n\nexport const neg = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Neg', a => `-${a}`));\n};\n\nexport const reciprocal = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Reciprocal', a => `1.0/${a}`));\n};\n\nexport const relu = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'Relu', a => `select(vec4<f32>(0.0), ${a}, ${a} > vec4<f32>(0.0))`));\n};\n\nexport const sigmoid = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sigmoid', a => `(1.0 / (1.0 + exp(-${a})))`));\n};\n\nexport const sin = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sin', 'sin'));\n};\n\nexport const sinh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sinh', 'sinh'));\n};\n\nexport const sqrt = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Sqrt', 'sqrt'));\n};\n\nexport const tan = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tan', 'tan'));\n};\n\nexport const tanh = (context: ComputeContext): void => {\n  context.compute(createElementwiseProgramInfoLoader(context.inputs[0], 'Tanh', 'tanh'));\n};\n\nexport const thresholdedRelu = (context: ComputeContext, attributes: AlphaAttributes): number => {\n  context.compute(createElementwiseProgramInfoLoader(\n      context.inputs[0], 'ThresholdedRelu', a => `select(vec4<f32>(0.0), ${a}, ${a} > thresholded_relu_alpha_)`,\n      `const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${attributes.alpha});`, attributes.cacheKey));\n  return 0;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGpuBackend} from '../backend-webgpu';\nimport {LOG_DEBUG} from '../log';\n\nimport {createShaderHelper} from './ops/common';\nimport {Artifact, GpuData, ProgramInfo} from './types';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  attributesBound: boolean;\n\n  constructor(private backend: WebGpuBackend) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: GpuData[], outputs: GpuData[], dispatchGroup: [number, number, number]): void {\n    const device = this.backend.device;\n    const computePassEncoder = this.backend.getComputePassEncoder();\n\n    if (this.backend.profilingEnabled) {\n      // profiling write start timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 0);\n    }\n\n    computePassEncoder.setPipeline(buildArtifact.computePipeline);\n    const entries = [];\n    for (const input of inputs) {\n      entries.push({binding: entries.length, resource: {buffer: input.buffer}});\n    }\n    for (const output of outputs) {\n      entries.push({binding: entries.length, resource: {buffer: output.buffer}});\n    }\n    const bindGroup = device.createBindGroup({layout: buildArtifact.computePipeline.getBindGroupLayout(0), entries});\n    computePassEncoder.setBindGroup(0, bindGroup);\n\n    computePassEncoder.dispatchWorkgroups(...dispatchGroup);\n\n    this.backend.pendingDispatchNumber++;\n\n    if (this.backend.profilingEnabled) {\n      // profiling write end timestamp\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (computePassEncoder as any).writeTimestamp(this.backend.profilingQuerySet, 1);\n      // eslint-disable-next-line no-bitwise\n      const queryData = this.backend.gpuDataManager.create(16, GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE);\n      // eslint-disable-next-line no-bitwise\n      const syncData = this.backend.gpuDataManager.create(16, GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST);\n\n      this.backend.endComputePass();\n      this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet, 0, 2, queryData.buffer, 0);\n      this.backend.getCommandEncoder().copyBufferToBuffer(queryData.buffer, 0, syncData.buffer, 0, 16);\n      this.backend.flush();\n\n      const kernelId = this.backend.currentKernelId!;\n      const kernelName = this.backend.kernels.get(kernelId)![0];\n\n      syncData.buffer.mapAsync(GPUMapMode.READ).then(() => {\n        const mappedData = new BigUint64Array(syncData.buffer.getMappedRange());\n        const startTimeU64 = mappedData[0];\n        const endTimeU64 = mappedData[1];\n\n        syncData.buffer.unmap();\n\n        if (typeof this.backend.profilingTimeBase === 'undefined') {\n          this.backend.profilingTimeBase = startTimeU64;\n        }\n\n        const startTime = Number(startTimeU64 - this.backend.profilingTimeBase);\n        const endTime = Number(endTimeU64 - this.backend.profilingTimeBase);\n\n        if (!Number.isSafeInteger(startTime) || !Number.isSafeInteger(endTime)) {\n          throw new RangeError('incorrect timestamp range');\n        }\n\n        this.backend.gpuDataManager.release(queryData.id);\n        this.backend.gpuDataManager.release(syncData.id);\n\n        // eslint-disable-next-line no-console\n        console.log(`[profiling] kernel \"${kernelId}|${kernelName}\" execution time: ${endTime - startTime} ns`);\n      });\n    }\n\n    if (this.backend.pendingDispatchNumber >= 16) {\n      this.backend.flush();\n    }\n  }\n  dispose(): void {\n    // this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, normalizedDispatchGroupSize: [number, number, number]): Artifact {\n    const device = this.backend.device;\n\n    const code = programInfo.getShaderSource(createShaderHelper(normalizedDispatchGroupSize));\n    const shaderModule = device.createShaderModule({code});\n    LOG_DEBUG('verbose', () => `[WebGPU] shader code: ${code}`);\n\n    const computePipeline =\n        device.createComputePipeline({compute: {module: shaderModule, entryPoint: 'main'}, layout: 'auto'});\n\n    return {programInfo, computePipeline};\n  }\n\n  normalizeDispatchGroupSize(dispatchGroup: ReturnType<ProgramInfo['dispatchGroup']>): [number, number, number] {\n    const x = typeof dispatchGroup === 'number' ? dispatchGroup : dispatchGroup.x;\n    const y = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.y || 1);\n    const z = typeof dispatchGroup === 'number' ? 1 : (dispatchGroup.z || 1);\n    const limitPerDimension = this.backend.device.limits.maxComputeWorkgroupsPerDimension;\n    if (x <= limitPerDimension && y <= limitPerDimension && z <= limitPerDimension) {\n      return [x, y, z];\n    }\n    const size = x * y * z;\n    let dispatchAverage = Math.ceil(Math.sqrt(size));\n    if (dispatchAverage > limitPerDimension) {\n      dispatchAverage = Math.ceil(Math.cbrt(size));\n      if (dispatchAverage > limitPerDimension) {\n        throw new Error('Total dispatch size exceeds WebGPU maximum.');\n      }\n      return [dispatchAverage, dispatchAverage, dispatchAverage];\n    } else {\n      return [dispatchAverage, dispatchAverage, 1];\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor, TensorView} from '../tensor';\n\nimport {ShaderHelper} from './ops/common';\n\nexport enum GpuDataType {\n  default = 0,\n  upload = 1,\n  profile = 2\n}\nexport type GpuDataId = number;\n\nexport interface GpuData {\n  type: GpuDataType;\n  id: GpuDataId;\n  buffer: GPUBuffer;\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  dataType: number;\n  gpuDataType: GpuDataType;\n}\n\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n\n  /**\n   * gpu data types for each input\n   */\n  inputTypes: GpuDataType[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for outputs\n   */\n  outputs: TensorInfo[];\n  /**\n   * the shader's processing source code\n   */\n  getShaderSource: (shaderHelper: ShaderHelper) => string;\n  /**\n   * default is \"main\"\n   */\n  // entryPoint: string;\n\n  dispatchGroup: (inputs: readonly TensorView[]) => {\n    x: number;\n    y?: number;\n    z?: number;\n  };\n}\n\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  computePipeline: GPUComputePipeline;\n}\n\nexport interface ComputeContextInputsOutputsMapping {\n  /**\n   * specify the mapping to the program's inputs. the value can be a number or a tensor view.\n   * - if it's a number, it's the index of the kernel's input\n   * - if it's a tensor view, it's an existing tensor view that will be used as the input\n   *\n   * if inputs is not specified, the mapping will be the kernel's inputs in order.\n   */\n  readonly inputs?: ReadonlyArray<TensorView|number>;\n  /**\n   * specify the mapping to the program's outputs. the value must be a number.\n   * - if it's a non-negative number, it's the index of the kernel's output\n   * - if it's -1, it's an output that will be created as a temporary value. this value will be released after\n   * the kernel is executed.\n   * - if it's -2, it's an output that will be created as a persistent value. this value will be released when the\n   * kernel is released.\n   *\n   * if outputs is not specified, the mapping will be the kernel's outputs in order.\n   */\n  readonly outputs?: readonly number[];\n}\n\n/**\n * A ComputeContext instance carries the states that representing the current running of a kernel.\n */\nexport interface ComputeContext {\n  /**\n   * stores the pointer to OpKernelContext\n   */\n  readonly opKernelContext: number;\n\n  /**\n   * a list of inputs, each input is an instance of TensorView\n   */\n  readonly inputs: readonly TensorView[];\n\n  /**\n   * a custom data object that can be used to store any data that is needed by the kernel\n   */\n  readonly customData: {[key: string]: unknown};\n\n  compute(program: ProgramInfoLoader|ProgramInfo, inputsOutputsMapping?: ComputeContextInputsOutputsMapping):\n      TensorView[];\n  output(index: number, dims: readonly number[]): number;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionAllocateCallbacks: Array<PromiseCallbacks<SerializableModeldata>> = [];\nconst createSessionFinalizeCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create_allocate':\n      if (ev.data.err) {\n        createSessionAllocateCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionAllocateCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create_finalize':\n      if (ev.data.err) {\n        createSessionFinalizeCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionFinalizeCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initializeWebAssemblyInstance = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, +(scriptSrc).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initializeRuntime = async(env: Env): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : env};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    await core.initRuntime(env);\n  }\n};\n\nexport const createSessionAllocate = async(model: Uint8Array): Promise<SerializableModeldata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableModeldata>((resolve, reject) => {\n      createSessionAllocateCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create_allocate', in : {model}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSessionAllocate(model);\n  }\n};\n\nexport const createSessionFinalize = async(modeldata: SerializableModeldata, options?: InferenceSession.SessionOptions):\n    Promise<SerializableSessionMetadata> => {\n      if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n        ensureWorker();\n        return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n          createSessionFinalizeCallbacks.push([resolve, reject]);\n          const message: OrtWasmMessage = {type: 'create_finalize', in : {modeldata, options}};\n          proxyWorker!.postMessage(message);\n        });\n      } else {\n        return core.createSessionFinalize(modeldata, options);\n      }\n    };\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {promisify} from 'util';\n\nimport {SerializableModeldata} from './proxy-messages';\nimport {createSession, createSessionAllocate, createSessionFinalize, endProfiling, initializeRuntime, releaseSession, run} from './proxy-wrapper';\n\nlet runtimeInitialized: boolean;\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async createSessionAllocate(path: string): Promise<SerializableModeldata> {\n    // fetch model from url and move to wasm heap. The arraybufffer that held the http\n    // response is freed once we return\n    const response = await fetch(path);\n    const arrayBuffer = await response.arrayBuffer();\n    return createSessionAllocate(new Uint8Array(arrayBuffer));\n  }\n\n  async loadModel(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!runtimeInitialized) {\n      await initializeRuntime(env);\n      runtimeInitialized = true;\n    }\n\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        const model = await promisify(readFile)(pathOrBuffer);\n        [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n      } else {\n        // browser\n        // fetch model and move to wasm heap.\n        const modelData: SerializableModeldata = await this.createSessionAllocate(pathOrBuffer);\n        // create the session\n        [this.sessionId, this.inputNames, this.outputNames] = await createSessionFinalize(modelData, options);\n      }\n    } else {\n      [this.sessionId, this.inputNames, this.outputNames] = await createSession(pathOrBuffer, options);\n    }\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n\n  // if using JSEP with WebGPU, always disable memory pattern\n  if (options.executionProviders &&\n      options.executionProviders.some(ep => (typeof ep === 'string' ? ep : ep.name) === 'webgpu')) {\n    options.enableMemPattern = false;\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'webnn':\n            epName = 'WEBNN';\n            if (typeof ep !== 'string') {\n              const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n              if (webnnOptions?.deviceType) {\n                const keyDataOffset = allocWasmString('deviceType', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.deviceType, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  throw new Error(`Can't set a session config entry: 'deviceType' - ${webnnOptions.deviceType}`);\n                }\n              }\n              if (webnnOptions?.powerPreference) {\n                const keyDataOffset = allocWasmString('powerPreference', allocs);\n                const valueDataOffset = allocWasmString(webnnOptions.powerPreference, allocs);\n                if (getInstance()._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !==\n                    0) {\n                  throw new Error(\n                      `Can't set a session config entry: 'powerPreference' - ${webnnOptions.powerPreference}`);\n                }\n              }\n            }\n            break;\n          case 'webgpu':\n            epName = 'JS';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel ?? 'all');\n    const executionMode = getExecutionMode(sessionOptions.executionMode ?? 'sequential');\n    const logIdDataOffset =\n        typeof sessionOptions.logId === 'string' ? allocWasmString(sessionOptions.logId, allocs) : 0;\n\n    const logSeverityLevel = sessionOptions.logSeverityLevel ?? 2;  // Default to 2 - warning\n    if (!Number.isInteger(logSeverityLevel) || logSeverityLevel < 0 || logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${logSeverityLevel}`);\n    }\n\n    const logVerbosityLevel = sessionOptions.logVerbosityLevel ?? 0;  // Default to 0 - verbose\n    if (!Number.isInteger(logVerbosityLevel) || logVerbosityLevel < 0 || logVerbosityLevel > 4) {\n      throw new Error(`log verbosity level is not valid: ${logVerbosityLevel}`);\n    }\n\n    const optimizedModelFilePathOffset = typeof sessionOptions.optimizedModelFilePath === 'string' ?\n        allocWasmString(sessionOptions.optimizedModelFilePath, allocs) :\n        0;\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena, !!sessionOptions.enableMemPattern, executionMode,\n        !!sessionOptions.enableProfiling, 0, logIdDataOffset, logSeverityLevel, logVerbosityLevel,\n        optimizedModelFilePathOffset);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (sessionOptions.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, sessionOptions.executionProviders, allocs);\n    }\n\n    if (sessionOptions.extra !== undefined) {\n      iterateExtraOptions(sessionOptions.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from 'onnxruntime-common';\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nexport const enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n/**\n * Map string tensor data to enum value\n */\nexport const tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\n/**\n * Map enum value to string tensor data\n */\nexport const tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\n/**\n * get tensor element size in bytes by the given data type\n * @returns size in integer or undefined if the data type is not supported\n */\nexport const getTensorElementSize = (dateType: number): number|\n    undefined => [undefined, 4, 1, 1, 2, 2, 4, 8, undefined, 1, 2, 8, 4, 8, undefined, undefined, undefined][dateType];\n\n/**\n * get typed array constructor by the given tensor type\n */\nexport const tensorTypeToTypedArrayConstructor = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * Map string log level to integer value\n */\nexport const logLevelStringToEnum = (logLevel?: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env, InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {init as initJsep} from './jsep/init';\nimport {SerializableModeldata, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {logLevelStringToEnum, tensorDataTypeEnumToString, tensorDataTypeStringToEnum, tensorTypeToTypedArrayConstructor} from './wasm-common';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nconst initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n * intialize runtime environment.\n * @param env passed in the environment config object.\n */\nexport const initRuntime = async(env: Env): Promise<void> => {\n  // init ORT\n  await initOrt(env.wasm.numThreads!, logLevelStringToEnum(env.logLevel));\n\n  // init JSEP if available\n  await initJsep(getInstance(), env);\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSessionAllocate = (model: Uint8Array): [number, number] => {\n  const wasm = getInstance();\n  const modelDataOffset = wasm._malloc(model.byteLength);\n  wasm.HEAPU8.set(model, modelDataOffset);\n  return [modelDataOffset, model.byteLength];\n};\n\nexport const createSessionFinalize =\n    (modelData: SerializableModeldata, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        sessionHandle = wasm._OrtCreateSession(modelData[0], modelData[1], sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelData[0]);\n        if (sessionOptionsHandle !== 0) {\n          wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        }\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const modelData: SerializableModeldata = createSessionAllocate(model);\n      return createSessionFinalize(modelData, options);\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * perform inference run\n */\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  const inputCount = inputIndices.length;\n  const outputCount = outputIndices.length;\n\n  let runOptionsHandle = 0;\n  let runOptionsAllocs: number[] = [];\n\n  const inputValues: number[] = [];\n  const inputAllocs: number[] = [];\n\n  try {\n    [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n    // create input tensors\n    for (let i = 0; i < inputCount; i++) {\n      const dataType = inputs[i][0];\n      const dims = inputs[i][1];\n      const data = inputs[i][2];\n\n      let dataOffset: number;\n      let dataByteLength: number;\n\n      if (Array.isArray(data)) {\n        // string tensor\n        dataByteLength = 4 * data.length;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        let dataIndex = dataOffset / 4;\n        for (let i = 0; i < data.length; i++) {\n          if (typeof data[i] !== 'string') {\n            throw new TypeError(`tensor data at index ${i} is not a string`);\n          }\n          wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n        }\n      } else {\n        dataByteLength = data.byteLength;\n        dataOffset = wasm._malloc(dataByteLength);\n        inputAllocs.push(dataOffset);\n        wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n      }\n\n      const stack = wasm.stackSave();\n      const dimsOffset = wasm.stackAlloc(4 * dims.length);\n      try {\n        let dimIndex = dimsOffset / 4;\n        dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n        const tensor = wasm._OrtCreateTensor(\n            tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n        if (tensor === 0) {\n          throw new Error('Can\\'t create a tensor');\n        }\n        inputValues.push(tensor);\n      } finally {\n        wasm.stackRestore(stack);\n      }\n    }\n\n    const beforeRunStack = wasm.stackSave();\n    const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n    const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n    const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n    const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n    try {\n      let inputValuesIndex = inputValuesOffset / 4;\n      let inputNamesIndex = inputNamesOffset / 4;\n      let outputValuesIndex = outputValuesOffset / 4;\n      let outputNamesIndex = outputNamesOffset / 4;\n      for (let i = 0; i < inputCount; i++) {\n        wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n        wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n      }\n      for (let i = 0; i < outputCount; i++) {\n        wasm.HEAPU32[outputValuesIndex++] = 0;\n        wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n      }\n\n      // support RunOptions\n      let errorCode = wasm._OrtRun(\n          sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n          outputValuesOffset, runOptionsHandle);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const runPromise = wasm.jsepRunPromise;\n      if (runPromise && typeof runPromise.then !== 'undefined') {\n        errorCode = await runPromise;\n      }\n\n      const output: SerializableTensor[] = [];\n\n      if (errorCode === 0) {\n        for (let i = 0; i < outputCount; i++) {\n          const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n          const beforeGetTensorDataStack = wasm.stackSave();\n          // stack allocate 4 pointer value\n          const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n          let type: Tensor.Type|undefined, dataOffset = 0;\n          try {\n            errorCode = wasm._OrtGetTensorData(\n                tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n            if (errorCode !== 0) {\n              throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n            }\n            let tensorDataIndex = tensorDataOffset / 4;\n            const dataType = wasm.HEAPU32[tensorDataIndex++];\n            dataOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n            const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n            const dims = [];\n            for (let i = 0; i < dimsLength; i++) {\n              dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n            }\n            wasm._OrtFree(dimsOffset);\n\n            const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n            type = tensorDataTypeEnumToString(dataType);\n            if (type === 'string') {\n              const stringData: string[] = [];\n              let dataIndex = dataOffset / 4;\n              for (let i = 0; i < size; i++) {\n                const offset = wasm.HEAPU32[dataIndex++];\n                const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n              }\n              output.push([type, dims, stringData]);\n            } else {\n              const typedArrayConstructor = tensorTypeToTypedArrayConstructor(type);\n              const data = new typedArrayConstructor(size);\n              new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                  .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n              output.push([type, dims, data]);\n            }\n          } finally {\n            wasm.stackRestore(beforeGetTensorDataStack);\n            if (type === 'string' && dataOffset) {\n              wasm._free(dataOffset);\n            }\n            wasm._OrtReleaseTensor(tensor);\n          }\n        }\n      }\n\n      if (errorCode === 0) {\n        return output;\n      } else {\n        throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n      }\n    } finally {\n      wasm.stackRestore(beforeRunStack);\n    }\n  } finally {\n    inputValues.forEach(wasm._OrtReleaseTensor);\n    inputAllocs.forEach(wasm._free);\n\n    wasm._OrtReleaseRunOptions(runOptionsHandle);\n    runOptionsAllocs.forEach(wasm._free);\n  }\n};\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\n\n/* eslint-disable @typescript-eslint/no-require-imports */\nconst ortWasmFactory: EmscriptenModuleFactory<OrtWasmModule> =\n    BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm.js') : require('./binding/ort-wasm-simd.jsep.js');\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> = !BUILD_DEFS.DISABLE_WASM_THREAD ?\n    (BUILD_DEFS.DISABLE_WEBGPU ? require('./binding/ort-wasm-threaded.js') :\n                                 require('./binding/ort-wasm-simd-threaded.jsep.js')) :\n    ortWasmFactory;\n/* eslint-enable @typescript-eslint/no-require-imports */\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPaths = flags.wasmPaths;\n  const wasmPrefixOverride = typeof wasmPaths === 'string' ? wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof wasmPaths === 'object' ? wasmPaths[wasmFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName.endsWith('.wasm')) {\n          if (wasmPathOverride) {\n            return wasmPathOverride;\n          }\n\n          const prefix = wasmPrefixOverride ?? scriptDirectory;\n\n          if (!BUILD_DEFS.DISABLE_WEBGPU) {\n            if (wasmFileName === 'ort-wasm-simd.wasm') {\n              return prefix + 'ort-wasm-simd.jsep.wasm';\n            } else if (wasmFileName === 'ort-wasm-simd-threaded.wasm') {\n              return prefix + 'ort-wasm-simd-threaded.jsep.wasm';\n            }\n          }\n\n          return prefix + wasmFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.16.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var e={838:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.WebGpuBackend=void 0;const r=n(955),a=n(771),o=n(510),i=n(305);t.WebGpuBackend=class{constructor(){this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.pendingDispatchNumber=0,this.profilingEnabled=!1}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error(\\\"currentKernelCustomData(): currentKernelId is null. (should not happen)\\\");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e){if(!navigator.gpu)throw new Error(\\\"WebGpuBackend: WebGPU is not available.\\\");const t=await navigator.gpu.requestAdapter();if(!t)throw new Error(\\\"WebGpuBackend: Failed to get GPU adapter.\\\");const n={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize}};t.features.has(\\\"timestamp-query-inside-passes\\\")&&\\\"default\\\"===e.webgpu.profilingMode&&(this.profilingEnabled=!0,n.requiredFeatures=[\\\"timestamp-query-inside-passes\\\"]),this.device=await t.requestDevice(n),this.gpuDataManager=(0,a.createGpuDataManager)(this),this.programManager=new i.ProgramManager(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,(0,r.configureLogger)(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},this.profilingEnabled&&(this.profilingQuerySet=this.device.createQuerySet({type:\\\"timestamp\\\",count:2}))}dispose(){}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){return this.computePassEncoder||(this.computePassEncoder=this.getCommandEncoder().beginComputePass()),this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){this.endComputePass(),this.device.queue.submit([this.getCommandEncoder().finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0}run(e,t,n,a,o){if(t.length!==e.inputTypes.length)throw new Error(`Input size must be equal to ${e.inputTypes.length}.`);const i=[];for(let e=0;e<t.length;++e){const n=this.gpuDataManager.get(t[e].data);if(!n)throw new Error(`no GPU data for input: ${t[e].data}`);i[e]=n}const s=((e,t,n)=>{const r=t.map((e=>`${e.join(\\\",\\\")}`)).join(\\\"_\\\"),a=n.join(\\\"_\\\");let o=e.name;return e.cacheHint&&(o+=\\\"[\\\"+e.cacheHint+\\\"]\\\"),o+=\\\":\\\"+r+\\\";\\\"+a,o})(e,t.map((e=>e.dims)),i.map((e=>e.type)));let u=this.programManager.getArtifact(s);const l=u?u.programInfo:\\\"function\\\"==typeof e.get?e.get():e,c=0===n.length?l.outputs.map(((e,t)=>t)):n;if(c.length!==l.outputs.length)throw new Error(`Output size ${c.length} must be equal to ${l.outputs.length}.`);const p=[],d=[];for(let e=0;e<l.outputs.length;++e){if(!Number.isInteger(c[e])||c[e]<-2||c[e]>=l.outputs.length)throw new Error(`Invalid output index: ${c[e]}`);const t=-1===c[e],n=-2===c[e],r=t||n?o(l.outputs[e].dataType,l.outputs[e].dims):a(c[e],l.outputs[e].dataType,l.outputs[e].dims),i=this.gpuDataManager.get(r.data);if(!i)throw new Error(`no GPU data for output: ${r.data}`);if(t&&this.temporaryData.push(i),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(i)}p.push(r),d.push(i)}const f=this.programManager.normalizeDispatchGroupSize(l.dispatchGroup(t));return u||(u=this.programManager.build(l,f),this.programManager.setArtifact(s,u)),(0,r.LOG_DEBUG)(\\\"info\\\",(()=>`[ProgramManager] run \\\"${l.name}\\\" (key=${s}) with ${f[0]}x${f[1]}x${f[2]}`)),this.programManager.run(u,i,d,f),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){const n=await this.gpuDataManager.download(e),r=t();r.set(new Uint8Array(n,0,r.byteLength))}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n){const r=o.WEBGPU_OP_RESOLVE_RULES.get(e);if(!r)throw new Error(`kernel not implemented: ${e}`);this.kernels.set(t,[e,r[0],[r[1],n]])}releaseKernel(e){const t=this.kernelPersistentData.get(e);if(t){for(const e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t){const n=this.kernels.get(e);if(!n)throw new Error(`kernel not created: ${e}`);const[a,o,i]=n;if(null!==this.currentKernelId)throw new Error(`kernel \\\"${a}\\\" is not allowed to be called recursively`);this.currentKernelId=e,i[0]&&(i[1]=i[0](i[1]),i[0]=void 0),(0,r.LOG_DEBUG)(\\\"info\\\",(()=>`[WebGPU] Start to run kernel \\\"${a}\\\"...`)),this.temporaryData=[];try{return o(t,i[1]),0}catch(e){return(0,r.LOG_DEBUG)(\\\"warning\\\",`[WebGPU] Kernel \\\"${a}\\\" failed. Error: ${e}`),1}finally{for(const e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}}},675:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.init=void 0;const r=n(917),a=n(838),o=n(955),i=n(952);class s{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){return new Float32Array(this.module.HEAP8.buffer,this.data,i.ShapeUtil.size(this.dims))}reshape(e){if(i.ShapeUtil.size(e)!==i.ShapeUtil.size(this.dims))throw new Error(\\\"Invalid new shape\\\");return new s(this.module,this.dataType,this.data,e)}}class u{get customData(){return this.backend.currentKernelCustomData}constructor(e,t,n){this.module=e,this.backend=t;const r=e.HEAPU32;let a=n>>2;this.opKernelContext=r[a++];const o=r[a++],i=[];for(let t=0;t<o;t++){const t=r[a++],n=r[a++],o=r[a++],u=[];for(let e=0;e<o;e++)u.push(r[a++]);i.push(new s(e,t,n,u))}this.inputs=i}compute(e,t){var n,a,o;const u=null!==(a=null===(n=null==t?void 0:t.inputs)||void 0===n?void 0:n.map((e=>\\\"number\\\"==typeof e?this.inputs[e]:e)))&&void 0!==a?a:this.inputs,l=null!==(o=null==t?void 0:t.outputs)&&void 0!==o?o:[];return this.backend.run(e,u,l,((e,t,n)=>new s(this.module,t,this.output(e,n),n)),((e,t)=>{const n=(0,r.getTensorElementSize)(e);if(!n)throw new Error(`Unsupported data type: ${e}`);const a=n*i.ShapeUtil.size(t);return new s(this.module,e,this.backend.gpuDataManager.create(a).id,t)}))}output(e,t){const n=this.module.stackSave();try{const n=this.module.stackAlloc(4*(1+t.length));let r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}finally{this.module.stackRestore(n)}}}t.init=async(e,t)=>{const n=e.jsepInit;if(n&&navigator.gpu){if(!t.wasm.simd)throw new Error(\\\"Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using WebGPU EP\\\");const r=new a.WebGpuBackend;await r.initialize(t),n({backend:r},(e=>r.alloc(e)),(e=>r.free(e)),((t,n,a,i=!1)=>{if(i)(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${t}, dst=${n}, size=${a}`)),r.memcpy(t,n);else{(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${t}, gpuDataId=${n}, size=${a}`));const i=e.HEAPU8.subarray(t,t+a);r.upload(n,i)}}),(async(t,n,a)=>{(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${t}, dataOffset=${n}, size=${a}`)),await r.download(t,(()=>e.HEAPU8.subarray(n,n+a)))}),((e,t,n)=>r.createKernel(e,t,n)),(e=>r.releaseKernel(e)),((t,n)=>{(0,o.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] jsepRun: kernel=${t}, contextDataOffset=${n}`));const a=new u(e,r,n);return r.computeKernel(t,a)}))}}},955:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.LOG_DEBUG=t.LOG=t.configureLogger=void 0;const r=n(917),a=[\\\"V\\\",\\\"I\\\",\\\"W\\\",\\\"E\\\",\\\"F\\\"];let o,i;t.configureLogger=(e,t)=>{o=e,i=t},t.LOG=(e,t)=>{const n=(0,r.logLevelStringToEnum)(e);var i,s;n>=(0,r.logLevelStringToEnum)(o)&&(i=n,s=\\\"function\\\"==typeof t?t():t,console.log(`[${a[i]},${(new Date).toISOString()}]${s}`))},t.LOG_DEBUG=(...e)=>{i&&(0,t.LOG)(...e)}},952:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.MAX_CLIP=t.MIN_CLIP=t.GemmUtil=t.PoolConvUtil=t.ShapeUtil=t.BroadcastUtil=t.MatMulUtil=void 0;class n{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}}t.MatMulUtil=n;class r{static calcShape(e,t,r=!1){const a=e.length,o=t.length;if(0===a)return t;if(0===o)return e;const i=Math.max(e.length,t.length),s=new Array(i);if(r){if(a<2||o<2)return;const r=n.calcMatMulShape([e[a-2],e[a-1]],[t[o-2],t[o-1]]);if(void 0===r)return;[s[i-2],s[i-1]]=r}for(let n=r?3:1;n<=i;n++){const r=a-n<0?1:e[a-n],u=o-n<0?1:t[o-n];if(r!==u&&r>1&&u>1)return;s[i-n]=Math.max(r,u)}return s}static isValidBroadcast(e,t){const n=e.length,r=t.length;if(n>r)return!1;for(let a=1;a<=n;a++)if(1!==e[n-a]&&e[n-a]!==t[r-a])return!1;return!0}}t.BroadcastUtil=r;class a{static size(e){return a.getSizeFromDimensionRange(e,0,e.length)}static sizeFromDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${e.length} dimensions.`);return a.getSizeFromDimensionRange(e,t,e.length)}static sizeToDimension(e,t){if(t<0||t>e.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${e.length} dimensions.`);return a.getSizeFromDimensionRange(e,0,t)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let a=t;a<n;a++){if(e[a]<=0)throw new Error(\\\"cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.\\\");r*=e[a]}return r}static computeStrides(e){const t=e.length;if(0===t)return[];if(1===t)return[1];const n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error(\\\"unsupported axis for this operation.\\\");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,null!=t?t:e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){const n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}}t.ShapeUtil=a;class o{static adjustPoolAttributes(e,t,n,r,a,o){if(!e&&n.length!==t.length-2)throw new Error(\\\"length of specified kernel shapes should be 2 less than length of input dimensions\\\");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error(\\\"strides should be greater than or equal to 1\\\")}else r.push(1);for(let e=0;e<n.length;e++)if(e<a.length){if(a[e]<0)throw new Error(\\\"dilations should be greater than or equal to 1\\\")}else a.push(1);for(let e=0;e<2*n.length;e++)if(e<o.length){if(o[e]<0)throw new Error(\\\"pad should be greater than or equal to 1\\\")}else o.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error(\\\"kernel shapes need to be greater than 0\\\");if(o[e]>=n[e]||o[e+n.length]>=n[e])throw new Error(\\\"pads should be smaller than kernel\\\")}}static adjustPadsBasedOnAutoPad(e,t,n,r,a,i,s){if(s){if(a.length!==2*(e.length-2))throw new Error(\\\"length of pads should be twice the length of data dimensions\\\");if(t.length!==e.length-2)throw new Error(\\\"length of strides should be the length of data dimensions\\\");if(r.length!==e.length-2)throw new Error(\\\"length of kernel shapes should be the length of data dimensions\\\");for(let u=0;u<e.length-2;u++)o.adjustPadAndReturnShape(e[u+(i?1:2)],t[u],n[u],r[u],a,u,u+e.length-2,s)}}static computePoolOutputShape(e,t,n,r,a,i,s){if(t.length<=0)throw new Error(\\\"input shape must be of size greater than 0\\\");const u=[t[0],t[1]];return o.computeShapeHelper(e,t,u,n,r,a,i,s),u}static computeConvOutputShape(e,t,n,r,a,i,s){if(e.length<=0||t.length<=0)throw new Error(\\\"invalid input tensor dims or invalid filter tensor dims\\\");const u=[e[0],t[0]];return o.computeShapeHelper(!1,e,u,n,r,a,i,s),u}static computeShapeHelper(e,t,n,r,a,i,s,u){if(e)for(let e=0;e<t.length-2;e++)n.push(1);else for(let e=0;e<t.length-2;e++)n.push(o.adjustPadAndReturnShape(t[e+2],r[e],a[e],i[e],s,e,e+t.length-2,u))}static adjustPadAndReturnShape(e,t,n,r,a,o,i,s){const u=n*(r-1)+1;if(!s||\\\"NOTSET\\\"===s)return Math.floor((e+a[o]+a[i]-u)/t+1);switch(s){case\\\"VALID\\\":return a[o]=0,a[i]=0,Math.floor((e-u)/t+1);case\\\"SAME_LOWER\\\":case\\\"SAME_UPPER\\\":if(1!==n)throw new Error(\\\"Dilation not supported for SAME_UPPER or SAME_LOWER\\\");{const n=((e+t-1)/t-1)*t+r-e;return a[o]=\\\"SAME_LOWER\\\"===s?Math.floor((n+1)/2):Math.floor(n/2),a[i]=n-a[o],Math.floor((e+n-r)/t+1)}default:throw new Error(\\\"Unsupported AutoPad type\\\")}}}t.PoolConvUtil=o,t.GemmUtil=class{static getShapeOfGemmResult(e,t,n,a,o){if(2!==e.length||2!==n.length)throw new Error(\\\"shape need to be of size 2\\\");let i,s,u;t?(i=e[1],s=e[0]):(i=e[0],s=e[1]);let l=-1;if(a?(u=n[0],l=1):(u=n[1],l=0),n[l]!==s)throw new Error(\\\"dimension mismatch\\\");if(i<=0||u<=0||s<=0)throw new Error(\\\"invalid shape specified\\\");if(o&&!r.isValidBroadcast(o,[i,u]))throw new Error(\\\"gemm: invalid bias shape for broadcast\\\");return[i,u,s]}},t.MIN_CLIP=-34028234663852886e22,t.MAX_CLIP=34028234663852886e22},387:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createAttributeWithCacheKey=void 0;class n{constructor(e){Object.assign(this,e)}get cacheKey(){return this._cacheKey||(this._cacheKey=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(\\\";\\\")),this._cacheKey}}t.createAttributeWithCacheKey=e=>new n(e)},771:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createGpuDataManager=void 0;const r=n(955),a=n(163),o=e=>16*Math.ceil(e/16);let i=0;class s{constructor(e){this.backend=e,this.storageCache=new Map,this.downloadCache=new Map,this.buffersForUploadingPending=[],this.buffersPending=[]}upload(e,t){const n=t.buffer,a=t.byteOffset,i=t.byteLength,s=o(i),u=this.storageCache.get(e);if(!u)throw new Error(\\\"gpu data for uploading does not exist\\\");if(u.originalSize!==i)throw new Error(`inconsistent data size. gpu data size=${u.originalSize}, data size=${i}`);const l=this.backend.device.createBuffer({mappedAtCreation:!0,size:s,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),c=l.getMappedRange();new Uint8Array(c).set(new Uint8Array(n,a,i)),l.unmap();const p=this.backend.getCommandEncoder();this.backend.endComputePass(),p.copyBufferToBuffer(l,0,u.gpuData.buffer,0,s),(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(l)}memcpy(e,t){const n=this.storageCache.get(e);if(!n)throw new Error(\\\"source gpu data for memcpy does not exist\\\");const r=this.storageCache.get(t);if(!r)throw new Error(\\\"destination gpu data for memcpy does not exist\\\");if(n.originalSize!==r.originalSize)throw new Error(\\\"inconsistent source and destination gpu data size\\\");const a=o(n.originalSize);this.backend.getCommandEncoder().copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,a)}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){const n=o(e),s=this.backend.device.createBuffer({size:n,usage:t}),u={id:i++,type:a.GpuDataType.default,buffer:s};return this.storageCache.set(u.id,{gpuData:u,originalSize:e}),(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${u.id}`)),u}get(e){var t;return null===(t=this.storageCache.get(e))||void 0===t?void 0:t.gpuData}release(e){const t=this.storageCache.get(e);if(!t)throw new Error(\\\"releasing data does not exist\\\");return(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),this.downloadCache.get(e)&&this.downloadCache.delete(e),t.originalSize}async download(e){const t=this.downloadCache.get(e);if(t)return t.data;const n=this.storageCache.get(e);if(!n)throw new Error(\\\"data does not exist\\\");const r=this.backend.getCommandEncoder();this.backend.endComputePass();const a=o(n.originalSize),i=this.backend.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});r.copyBufferToBuffer(n.gpuData.buffer,0,i,0,a),this.backend.flush();const s=new Promise((e=>{i.mapAsync(GPUMapMode.READ).then((()=>{const t=i.getMappedRange().slice(0);i.destroy(),e(t)}))}));return this.downloadCache.set(e,{data:s}),s}refreshPendingBuffers(){for(const e of this.buffersForUploadingPending)e.destroy();for(const e of this.buffersPending)e.destroy()}}t.createGpuDataManager=(...e)=>new s(...e)},510:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!(\\\"get\\\"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.WEBGPU_OP_RESOLVE_RULES=void 0;const i=o(n(504)),s=n(770),u=n(271),l=n(522),c=o(n(262)),p=n(625),d=o(n(302));t.WEBGPU_OP_RESOLVE_RULES=new Map([[\\\"Abs\\\",[d.abs]],[\\\"Acos\\\",[d.acos]],[\\\"Acosh\\\",[d.acosh]],[\\\"Add\\\",[i.add]],[\\\"Asin\\\",[d.asin]],[\\\"Asinh\\\",[d.asinh]],[\\\"Atan\\\",[d.atan]],[\\\"Atanh\\\",[d.atanh]],[\\\"AveragePool\\\",[c.averagePool,c.parseAveragePoolAttributes]],[\\\"Ceil\\\",[d.ceil]],[\\\"ClipV10\\\",[d.clipV10]],[\\\"Clip\\\",[d.clip]],[\\\"Conv\\\",[s.conv,s.parseConvAttributes]],[\\\"Cos\\\",[d.cos]],[\\\"Cosh\\\",[d.cosh]],[\\\"Div\\\",[i.div]],[\\\"Elu\\\",[d.elu,d.parseAlphaAttributes]],[\\\"Erf\\\",[d.erf]],[\\\"Exp\\\",[d.exp]],[\\\"Floor\\\",[d.floor]],[\\\"Gemm\\\",[u.gemm,u.parseGemmAttributes]],[\\\"GlobalAveragePool\\\",[c.globalAveragePool,c.parseGlobalAveragePoolAttributes]],[\\\"GlobalMaxPool\\\",[c.globalMaxPool,c.parseGlobalMaxPoolAttributes]],[\\\"LeakyRelu\\\",[d.leakyRelu,d.parseAlphaAttributes]],[\\\"MatMul\\\",[l.matMul]],[\\\"MaxPool\\\",[c.maxPool,c.parseMaxPoolAttributes]],[\\\"Mul\\\",[i.mul]],[\\\"Neg\\\",[d.neg]],[\\\"Pow\\\",[i.pow]],[\\\"Reciprocal\\\",[d.reciprocal]],[\\\"Relu\\\",[d.relu]],[\\\"Sigmoid\\\",[d.sigmoid]],[\\\"Sin\\\",[d.sin]],[\\\"Sinh\\\",[d.sinh]],[\\\"Sqrt\\\",[d.sqrt]],[\\\"Sub\\\",[i.sub]],[\\\"Tan\\\",[d.tan]],[\\\"Tanh\\\",[d.tanh]],[\\\"ThresholdedRelu\\\",[d.thresholdedRelu,d.parseAlphaAttributes]],[\\\"Transpose\\\",[p.transpose,p.parseTransposeAttributes]]])},427:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.biasActivationSnippet=t.activationFnSnippet=t.typeSnippet=void 0,t.typeSnippet=e=>{switch(e){case 1:return\\\"f32\\\";case 2:return\\\"vec2<f32>\\\";case 3:return\\\"vec3<f32>\\\";case 4:return\\\"vec4<f32>\\\";default:throw new Error(`${e}-component is not supported.`)}},t.activationFnSnippet=(e,t=!1,n=!1,r=3)=>\\\"\\\",t.biasActivationSnippet=(e,t)=>`\\\\n      ${e?\\\"value = value + getBiasByOutputCoords(coords);\\\":\\\"\\\"}\\\\n      ${t?\\\"value = activation(value, coords);\\\":\\\"\\\"}\\\\n      `},456:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createConv2DMatMulProgramInfo=void 0;const r=n(955),a=n(952),o=n(163),i=n(427),s=n(85),u=n(158);t.createConv2DMatMulProgramInfo=(e,t,n,l,c,p,d,f,h)=>{const g=\\\"NHWC\\\"===n.format,m=g?e[0].dims[3]:e[0].dims[1],b=l[0],v=g?l[2]:l[3],y=g?l[1]:l[2],w=g?l[3]:l[1],_=((m%4==0||m%3==0)&&g||v%4==0&&!g)&&w%4==0,$=g?w:v*y,S=g?v*y:w,O=_?[8,8,1]:[$<=4?4:16,$>4&&S<=4?4:16,1],C=_?[4,4,1]:[$<=4?1:2,$>4&&S<=4?1:2,1],A=[Math.ceil($/O[0]/C[0]),Math.ceil(S/O[1]/C[1]),Math.ceil(b/O[2]/C[1])];(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[conv2d_mm_webgpu] dispatch = ${A}`));const E=_?g&&m%4!=0?3:4:C[0],P=O[1]*C[1],T=O[0]*C[0],M=Math.max(O[0]*E,O[1]),x=c%P==0,R=p%T==0,I=d%M==0,k=_?[E,4,4]:[1,1,1],D=[`@group(0) @binding(0) var<storage, read> x: array<${_&&4===E?\\\"vec4<f32>\\\":\\\"f32\\\"}>;`,`@group(0) @binding(1) var<storage, read> w: array<${_?\\\"vec4<f32>\\\":\\\"f32\\\"}>;`];let U=`\\\\n      fn setOutputAtIndex(flatIndex : i32, value : ${_?\\\"vec4<f32>\\\":\\\"f32\\\"}) {\\\\n        result[flatIndex] = ${_?\\\"vec4<f32>\\\":\\\"f32\\\"}(value);\\\\n      }\\\\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${_?\\\"vec4<f32>\\\":\\\"f32\\\"}) {\\\\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\\\\n        setOutputAtIndex(flatIndex ${_?\\\"/ 4\\\":\\\"\\\"}, value);\\\\n      }`;return f&&(D.push(`@group(0) @binding(2) var<storage, read> bias: array<${_?\\\"vec4<f32>\\\":\\\"f32\\\"}>;`),U+=`\\\\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${_?\\\"vec4<f32>\\\":\\\"f32\\\"} {\\\\n          return bias[coords.${g?\\\"w\\\":\\\"y\\\"}${_?\\\"/ 4\\\":\\\"\\\"}];\\\\n        }`),Object.assign(Object.assign({},t),{outputs:[{dims:l,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:()=>({x:A[0],y:A[1],z:A[2]}),getShaderSource:()=>`\\\\n        ${s.utilFunctions}\\\\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\\\\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\\\\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\\\\n        ${D.join(\\\"\\\")}\\\\n        @group(0) @binding(${D.length}) var<storage, read_write> result: array<${_?\\\"vec4<f32>\\\":\\\"f32\\\"}>;\\\\n        //@group(0) @binding(${D.length+1}) var<uniform> uniforms: Uniforms;\\\\n\\\\n        const xShape : vec4<i32> = vec4<i32>(${e[0].dims.join(\\\",\\\")});\\\\n        const wShape : vec4<i32> = vec4<i32>(${e[1].dims.join(\\\",\\\")});\\\\n        const outShape : vec4<i32> = vec4<i32>(${l.join(\\\",\\\")});\\\\n        const outShapeStrides : vec3<i32> = vec3<i32>(${a.ShapeUtil.computeStrides(l).slice(0,3).join(\\\",\\\")});\\\\n        const filterDims : vec2<i32> = vec2<i32>(${n.kernelShape[0]}, ${n.kernelShape[1]});\\\\n        const pad : vec2<i32> = vec2<i32>(${n.pads[0]}, ${n.pads[1]});\\\\n        const stride : vec2<i32> = vec2<i32>(${n.strides[0]}, ${n.strides[1]});\\\\n        const dilation : vec2<i32> = vec2<i32>(${n.dilations[0]}, ${n.dilations[1]});\\\\n        const dimAOuter : i32 = ${c};\\\\n        const dimBOuter : i32 = ${p};\\\\n        const dimInner : i32 = ${d};\\\\n        ${U}\\\\n        ${((e,t,n,r,a=!1,o,s=!1,u=4,l=4,c=4)=>{const p=e?\\\"\\\\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\\\\n    \\\":\\\"\\\\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\\\\n    \\\",d=e?\\\"\\\\n    let coords = vec4<i32>(\\\\n      batch,\\\\n      row / outWidth,\\\\n      row % outWidth,\\\\n      col);\\\\n    \\\":\\\"\\\\n    let coords = vec4<i32>(\\\\n      batch,\\\\n      row,\\\\n      col / outWidth,\\\\n      col % outWidth);\\\\n    \\\",f=e?\\\"xShape[1]\\\":\\\"xShape[2]\\\",h=e?\\\"xShape[2]\\\":\\\"xShape[3]\\\",g=e?\\\"row\\\":\\\"col\\\",m=e?\\\"col\\\":\\\"row\\\",b=`\\\\n    let inChannels = wShape[2];\\\\n    let outWidth = ${e?\\\"outShape[2]\\\":\\\"outShape[3]\\\"};\\\\n    let outRow = ${g} / outWidth;\\\\n    let outCol = ${g} % outWidth;\\\\n\\\\n    let WRow = ${m} / (filterDims[1] * inChannels);\\\\n    let WCol = ${m} / inChannels % filterDims[1];\\\\n    let xRow = outRow * stride[0] + dilation[0] * WRow - pad[0];\\\\n    let xCol = outCol * stride[1] + dilation[1] * WCol - pad[1];\\\\n    let xCh = ${m} % inChannels;\\\\n    var resData = ${(0,i.typeSnippet)(u)}(0.0);\\\\n    // The bounds checking is always needed since we use it to pad zero for\\\\n    // the 'same' padding type.\\\\n    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${h}) {\\\\n      ${p}\\\\n      let xIndex = getIndexFromCoords4D(coord, xShape);\\\\n      ${(e=>{switch(e){case 1:return\\\"resData = x[xIndex];\\\";case 3:return\\\"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);\\\";case 4:return\\\"resData = x[xIndex / 4];\\\";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(u)}\\\\n    }\\\\n    return resData;`,v=e?t&&r?`\\\\n    let col = colIn * ${u};\\\\n    ${b}`:`\\\\n    let col = colIn * ${u};\\\\n    if (row < dimAOuter && col < dimInner) {\\\\n      ${b}\\\\n    }\\\\n    return ${(0,i.typeSnippet)(u)}(0.0);`:r&&n?`\\\\n    let col = colIn * ${u};\\\\n    ${b}`:`\\\\n    let col = colIn * ${u};\\\\n    if (row < dimInner && col < dimBOuter) {\\\\n      ${b}\\\\n    }\\\\n    return ${(0,i.typeSnippet)(u)}(0.0);`,y=`${(e=>{switch(e){case 1:return\\\"return w[row * wShape[3] + colIn];\\\";case 4:return\\\"return w[row * wShape[3] / 4 + colIn];\\\";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,w=(0,i.typeSnippet)(c),_=e?(0,i.typeSnippet)(u):(0,i.typeSnippet)(l),$=e?(0,i.typeSnippet)(l):(0,i.typeSnippet)(u);return`\\\\n    ${(0,i.activationFnSnippet)(o,s,4===c,4)}\\\\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${_} {\\\\n      ${e?v:y}\\\\n    }\\\\n\\\\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${$} {\\\\n      ${e?y:v}\\\\n    }\\\\n\\\\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\\\\n      let col = colIn * ${c};\\\\n      if (row < dimAOuter && col < dimBOuter)\\\\n      {\\\\n      var value = valueIn;\\\\n      let outWidth = ${e?\\\"outShape[2]\\\":\\\"outShape[3]\\\"};\\\\n      ${d}\\\\n      ${(0,i.biasActivationSnippet)(a,o)}\\\\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\\\\n      }\\\\n    }`})(g,x,R,I,f,void 0,!1,k[0],k[1],k[2])}\\\\n            ${_?(0,u.makeMatMulPackedVec4Source)(C,O,!g,M):(0,u.makeMatMulPackedSource)(C,O,!g,M,!1,void 0,h)}`})}},85:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.utilFunctions=void 0,t.utilFunctions=\\\"\\\\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\\\\n  return dot(coords, vec4<i32>(\\\\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\\\\n}\\\\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\\\\n  return dot(coords, vec4<i32>(\\\\n    outShapeStrides.x, outShapeStrides.y, outShapeStrides.z, 1));\\\\n}\\\\n\\\"},158:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.makeMatMulPackedSource=t.makeMatMulPackedVec4Source=void 0,t.makeMatMulPackedVec4Source=(e,t,n=!1,r=32,a=!1,o=32,i=!1)=>{const s=t[1]*e[1],u=t[0]*e[0],l=n?s:r,c=n?r:s,p=l/t[0],d=r/t[1];if((!n||4!==p||4!==e[1])&&(n||3!==p&&4!==p)||l%t[0]!=0||r%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${n} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\\\\n      Otherwise, innerElementSize ${p} must be 3 or 4.\\\\n  tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\\\\nvar<workgroup> mm_Asub : array<array<vec${p}<f32>, ${l/p}>, ${c}>;\\\\nvar<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${r}>;\\\\n\\\\nconst rowPerThread = ${e[1]};\\\\nconst colPerThread = ${e[0]};\\\\nconst innerElementSize = ${p};\\\\nconst tileInner = ${r};\\\\n\\\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\\\n  let localRow = i32(localId.y);\\\\n  let tileRow = ${i?\\\"0\\\":\\\"localRow * rowPerThread\\\"};\\\\n  let tileCol = i32(localId.x);\\\\n\\\\n  let globalRow = ${i?\\\"0\\\":\\\"i32(globalId.y) * rowPerThread\\\"};\\\\n  let globalCol = i32(globalId.x);\\\\n  let batch = ${a?\\\"0\\\":\\\"i32(globalId.z)\\\"};\\\\n  let globalRowStart = i32(workgroupId.y) * ${s};\\\\n\\\\n  let numTiles = ${a?`${Math.ceil(o/r)}`:\\\"(dimInner - 1) / tileInner + 1\\\"};\\\\n  var kStart = ${a?`i32(globalId.z) * ${o}`:\\\"0\\\"};\\\\n\\\\n  var acc: array<vec4<f32>, rowPerThread>;\\\\n\\\\n  // Loop over shared dimension.\\\\n  let tileRowB = localRow * ${d};\\\\n  for (var t = 0; t < numTiles; t = t + 1) {\\\\n      // Load one tile of A into local memory.\\\\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n          let inputRow = tileRow + innerRow;\\\\n          let inputCol = tileCol;\\\\n          ${f=n,f?\\\"\\\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n          kStart + inputRow,\\\\n          globalRowStart / innerElementSize + inputCol);\\\\n        \\\":\\\"\\\\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n          globalRow + innerRow,\\\\n          kStart / innerElementSize + inputCol);\\\\n        \\\"}\\\\n      }\\\\n\\\\n      // Load one tile of B into local memory.\\\\n      for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {\\\\n          let inputRow = tileRowB + innerRow;\\\\n          let inputCol = tileCol;\\\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol);\\\\n      }\\\\n      kStart = kStart + tileInner;\\\\n      workgroupBarrier();\\\\n\\\\n      // Compute acc values for a single thread.\\\\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\\\\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\\\\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\\\\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\\\\n          ${3===p?\\\"\\\":\\\"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];\\\"}\\\\n\\\\n          ${((e,t)=>e?`\\\\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\\\\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\\\\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\\\\n        ${3===t?\\\"\\\":\\\"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];\\\"}\\\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\\\n          acc[i] = BCached0 * ACached0[i] + acc[i];\\\\n          acc[i] = BCached1 * ACached1[i] + acc[i];\\\\n          acc[i] = BCached2 * ACached2[i] + acc[i];\\\\n          ${3===t?\\\"\\\":\\\"acc[i] = BCached3 * ACached3[i] + acc[i];\\\"}\\\\n        }`:`\\\\n        for (var i = 0; i < rowPerThread; i = i + 1) {\\\\n          let ACached = mm_Asub[tileRow + i][k];\\\\n          acc[i] = BCached0 * ACached.x + acc[i];\\\\n          acc[i] = BCached1 * ACached.y + acc[i];\\\\n          acc[i] = BCached2 * ACached.z + acc[i];\\\\n          ${3===t?\\\"\\\":\\\"acc[i] = BCached3 * ACached.w + acc[i];\\\"}\\\\n        }`)(n,p)}\\\\n      }\\\\n\\\\n      workgroupBarrier();\\\\n  }\\\\n\\\\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\\\\n  }\\\\n}`;var f};const n=e=>e?\\\"\\\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n              kStart + inputRow,\\\\n              globalRowStart + inputCol);\\\\n            \\\":\\\"\\\\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\\\\n              globalRowStart + inputRow,\\\\n              kStart + inputCol);\\\\n            \\\";t.makeMatMulPackedSource=(e,t,r=!1,a=32,o=!1,i=32,s=!1)=>{const u=e[1]*t[1],l=e[0]*t[0],c=r?u:a,p=r?a:u;if(p%t[1]!=0||c%t[0]!=0||a%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);const d=p/t[1],f=c/t[0],h=a/t[1],g=s?`\\\\n    let localRow = i32(localId.y);\\\\n    let localCol = i32(localId.x);\\\\n    let globalRowStart = i32(workgroupId.y) * ${u};\\\\n    let globalColStart = i32(workgroupId.x) * ${l};\\\\n\\\\n    // Loop over shared dimension.\\\\n    for (var t = 0; t < numTiles; t = t + 1) {\\\\n      // Load one tile of A into local memory.\\\\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\\\\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\\\\n          ${n(r)}\\\\n        }\\\\n      }\\\\n      // Load one tile of B into local memory.\\\\n      for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\\\\n            for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {\\\\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\\\n            kStart + inputRow,\\\\n            globalColStart + inputCol);\\\\n        }\\\\n      }\\\\n      kStart = kStart + tileInner;\\\\n      workgroupBarrier();\\\\n\\\\n      // Compute acc values for a single thread.\\\\n      var BCached : array<f32, colPerThread>;\\\\n      for (var k = 0; k < tileInner; k = k + 1) {\\\\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\\\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\\\\n        }\\\\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n          let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\\\\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\\\\n                ACached * BCached[innerCol];\\\\n          }\\\\n        }\\\\n      }\\\\n      workgroupBarrier();\\\\n    }\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\\\\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\\\\n      }\\\\n    }\\\\n    `:`\\\\nlet tileRow = i32(localId.y) * rowPerThread;\\\\nlet tileCol = i32(localId.x) * colPerThread;\\\\n\\\\nlet globalRow = i32(globalId.y) * rowPerThread;\\\\nlet globalCol = i32(globalId.x) * colPerThread;\\\\nlet globalRowStart = i32(workgroupId.y) * ${u};\\\\n\\\\nlet tileRowA = i32(localId.y) * ${d};\\\\nlet tileColA = i32(localId.x) * ${f};\\\\nlet tileRowB = i32(localId.y) * ${h};\\\\n// Loop over shared dimension.\\\\nfor (var t = 0; t < numTiles; t = t + 1) {\\\\n  // Load one tile of A into local memory.\\\\n  for (var innerRow = 0; innerRow < ${d}; innerRow = innerRow + 1) {\\\\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\\\\n      let inputRow = tileRowA + innerRow;\\\\n      let inputCol = tileColA + innerCol;\\\\n      ${n(r)}\\\\n    }\\\\n  }\\\\n\\\\n  // Load one tile of B into local memory.\\\\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\\\\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n      let inputRow = tileRowB + innerRow;\\\\n      let inputCol = tileCol + innerCol;\\\\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\\\\n        kStart + inputRow,\\\\n        globalCol + innerCol);\\\\n    }\\\\n  }\\\\n  kStart = kStart + tileInner;\\\\n  workgroupBarrier();\\\\n\\\\n  // Compute acc values for a single thread.\\\\n  var BCached : array<f32, colPerThread>;\\\\n  for (var k = 0; k < tileInner; k = k + 1) {\\\\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\\\\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\\\\n    }\\\\n\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      ${(e=>e?\\\"let ACached = mm_Asub[k][tileRow + innerRow];\\\":\\\"let ACached = mm_Asub[tileRow + innerRow][k];\\\")(r)}\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\\\\n      }\\\\n    }\\\\n  }\\\\n\\\\n  workgroupBarrier();\\\\n}\\\\n\\\\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\\\\n        acc[innerRow][innerCol]);\\\\n  }\\\\n}\\\\n`;return`\\\\n  var<workgroup> mm_Asub : array<array<f32, ${c}>, ${p}>;\\\\n  var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${a}>;\\\\n  const rowPerThread = ${e[1]};\\\\n  const colPerThread = ${e[0]};\\\\n  const tileInner = ${a};\\\\n\\\\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\\\\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\\\\n        @builtin(global_invocation_id) globalId : vec3<u32>,\\\\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\\\\n    let batch = ${o?\\\"0\\\":\\\"i32(globalId.z)\\\"};\\\\n    let numTiles = ${o?`${Math.ceil(i/a)}`:\\\"(dimInner - 1) / tileInner + 1\\\"};\\\\n    var kStart = ${o?`i32(globalId.z) * ${i}`:\\\"0\\\"};\\\\n\\\\n    var acc : array<array<f32, colPerThread>, rowPerThread>;\\\\n\\\\n    // Without this initialization strange values show up in acc.\\\\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\\\\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\\\\n        acc[innerRow][innerCol] = 0.0;\\\\n      }\\\\n    }\\\\n    ${g}\\\\n  }\\\\n`}},504:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.sub=t.pow=t.mul=t.div=t.add=void 0;const r=n(952),a=n(163),o=n(75),i=(e,t,n,i,s)=>{const u={name:t,inputTypes:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:s};return Object.assign(Object.assign({},u),{get:()=>((e,t,n,i,s,u=t.dataType)=>{var l,c;const p=!r.ShapeUtil.areEqual(t.dims,n.dims);let d=t.dims,f=r.ShapeUtil.size(t.dims),h=!1;if(p){const e=r.BroadcastUtil.calcShape(t.dims,n.dims,!1);if(!e)throw new Error(\\\"Can't perform binary op on the given tensors\\\");d=e,f=r.ShapeUtil.size(d);let a=1;for(let e=0;e<d.length;e++){const r=null!==(l=t.dims[t.dims.length-e])&&void 0!==l?l:1;if(r!==(null!==(c=n.dims[n.dims.length-e])&&void 0!==c?c:1))break;a*=r}a%4==0&&(h=!0)}else h=!0;return Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,a,i,s,u,l,c=\\\"f32\\\",p=\\\"f32\\\",d=\\\"f32\\\")=>{const f=r.ShapeUtil.size(a),h=Math.ceil(f/4);let g,m;\\\"string\\\"==typeof u?g=m=(e,t)=>`${u}((${e}),(${t}))`:\\\"function\\\"==typeof u?g=m=u:(g=u.scalar,m=u.vector);let b=\\\"\\\";const v=(0,o.createIndicesHelper)(\\\"output\\\",a);if(s){const e=e=>{const t=r.ShapeUtil.computeStrides(e),n=[];for(let r=e.length-1;r>=0;r--){const o=0===a.length?\\\"0u\\\":1===a.length?\\\"(*outputIndices)\\\":`(*outputIndices)[${r+a.length-e.length}]`;n.push(`${t[r]}u * (${o} % ${e[r]}u)`)}return n.length>0?n.join(\\\"+\\\"):\\\"0u\\\"};b=`\\\\n  ${v.o2iImpl}\\\\n\\\\n  fn calcOffsetA(outputIndices: ptr<function, ${v.iType}>) -> u32 {\\\\n    return ${e(t)};\\\\n  }\\\\n\\\\n  fn calcOffsetB(outputIndices: ptr<function, ${v.iType}>) -> u32 {\\\\n    return ${e(n)};\\\\n  }\\\\n  `}let y;if(i)y=s?`\\\\n      ${v.indicesVariableDeclaration(\\\"outputIndices\\\")}\\\\n      ${v.o2iCall(\\\"global_idx * 4u\\\",\\\"outputIndices\\\")}\\\\n      let offsetA = calcOffsetA(&outputIndices);\\\\n      let offsetB = calcOffsetB(&outputIndices);\\\\n      outputData[global_idx] = ${m(\\\"aData[offsetA / 4u]\\\",\\\"bData[offsetB / 4u]\\\")};`:`outputData[global_idx] = ${m(\\\"aData[global_idx]\\\",\\\"bData[global_idx]\\\")};`;else{if(!s)throw new Error(\\\"no necessary to use scalar implementation for element-wise binary op implementation.\\\");const e=e=>{const t=`aData[indexA${e}][componentA${e}]`,n=`bData[indexB${e}][componentB${e}]`;return`\\\\n      ${v.o2iCall(`global_idx * 4u + ${e}u`,\\\"outputIndices\\\")}\\\\n      let offsetA${e} = calcOffsetA(&outputIndices);\\\\n      let offsetB${e} = calcOffsetB(&outputIndices);\\\\n      let indexA${e} = offsetA${e} / 4u;\\\\n      let indexB${e} = offsetB${e} / 4u;\\\\n      let componentA${e} = offsetA${e} % 4u;\\\\n      let componentB${e} = offsetB${e} % 4u;\\\\n      outputData[global_idx][${e}] = ${g(t,n)};`};y=`\\\\n      ${v.indicesVariableDeclaration(\\\"outputIndices\\\")}\\\\n      ${e(0)}\\\\n      ${e(1)}\\\\n      ${e(2)}\\\\n      ${e(3)}`}return`\\\\n  @group(0) @binding(0) var<storage, read> aData : array<vec4<${c}>>;\\\\n  @group(0) @binding(1) var<storage, read> bData : array<vec4<${p}>>;\\\\n  @group(0) @binding(2) var<storage, read_write> outputData : array<vec4<${d}>>;\\\\n\\\\n  ${null!=l?l:\\\"\\\"}\\\\n  ${b}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(h)}\\\\n    ${y}\\\\n  }`})(e,t.dims,n.dims,d,h,p,i,s),outputs:[{dims:d,dataType:u,gpuDataType:a.GpuDataType.default}],dispatchGroup:()=>({x:Math.ceil(f/64/(h?4:1))})})})(u,e[0],e[1],n,i)})};t.add=e=>{e.compute(i(e.inputs,\\\"Add\\\",((e,t)=>`${e}+${t}`)))},t.div=e=>{e.compute(i(e.inputs,\\\"Div\\\",((e,t)=>`${e}/${t}`)))},t.mul=e=>{e.compute(i(e.inputs,\\\"Mul\\\",((e,t)=>`${e}*${t}`)))},t.pow=e=>{e.compute(i(e.inputs,\\\"Pow\\\",{scalar:(e,t)=>`pow_f32(${e},${t})`,vector:(e,t)=>`pow_vf32(${e},${t})`},\\\"\\\\n    fn pow_f32(a : f32, b : f32) -> f32 {\\\\n      if (b == 0.0) {\\\\n        return 1.0;\\\\n      } else if (a < 0.0 && b != floor(b)) {\\\\n        return pow(a, b); // NaN\\\\n      }\\\\n      return select(sign(a), 1.0, round(abs(b) % 2.0) != 1.0) * pow(abs(a), b);\\\\n    }\\\\n    fn pow_vf32(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\\\\n      // TODO: implement vectorized pow\\\\n      return vec4<f32>(pow_f32(a.x, b.x), pow_f32(a.y, b.y), pow_f32(a.z, b.z), pow_f32(a.w, b.w));\\\\n    }\\\\n      \\\"))},t.sub=e=>{e.compute(i(e.inputs,\\\"Sub\\\",((e,t)=>`${e}-${t}`)))}},75:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createShaderHelper=t.createIndicesHelper=t.WORKGROUP_SIZE=void 0;const r=n(952);t.WORKGROUP_SIZE=64,t.createIndicesHelper=(e,t)=>{const n=t.length<2?\\\"u32\\\":`array<u32, ${t.length}>`,a=r.ShapeUtil.computeStrides(t);let o=\\\"\\\";for(let e=0;e<t.length-1;e++)o+=`\\\\n    let dim${e} = current / ${a[e]}u;\\\\n    let rest${e} = current % ${a[e]}u;\\\\n    (*indices)[${e}] = dim${e};\\\\n    current = rest${e};\\\\n    `;o+=`(*indices)[${t.length-1}] = current;`;const i=t.length<2?\\\"\\\":`\\\\n  fn ih_o2i_${e}(offset: u32, indices: ptr<function, ${n}>) {\\\\n    var current = offset;\\\\n    ${o}\\\\n  }`,s=[];if(0===t.length)s.push(\\\"0u\\\");else if(t.length<2)s.push(\\\"(*indices)\\\");else for(let e=t.length-1;e>=0;e--)s.push(`${a[e]}u * ((*indices)[${e}])`);return{o2iImpl:i,o2iCall:(n,r)=>t.length<2?`${r}=${n};`:`ih_o2i_${e}(${n}, &${r});`,i2oImpl:t.length<2?\\\"\\\":`\\\\n  fn ih_i2o_${e}(indices: ptr<function, ${n}>) -> u32 {\\\\n    return ${s.join(\\\"+\\\")};\\\\n  }`,i2oExpression:(n,r)=>t.length<2?`(${r?\\\"*\\\":\\\"\\\"}${n})`:`ih_i2o_${e}(${r?\\\"\\\":\\\"&\\\"}${n})`,indicesVariableDeclaration:(e,t)=>`var ${e}:${n}${t?`=${n}(${t.join(\\\",\\\")})`:\\\"\\\"};`,iType:n}};class a{constructor(e){this.normalizedDispatchGroup=e}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${\\\"number\\\"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=t.WORKGROUP_SIZE){const n=\\\"number\\\"==typeof e?e:e[0],r=\\\"number\\\"==typeof e?1:e[1],a=\\\"number\\\"==typeof e?1:e[2],o=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${n}, ${r}, ${a})\\\\n  fn main(${o?\\\"@builtin(global_invocation_id) global_id : vec3<u32>\\\":\\\"@builtin(local_invocation_index) local_index : u32,\\\\n    @builtin(workgroup_id) workgroup_id : vec3<u32>\\\"}) {\\\\n    ${o?\\\"let global_idx = global_id.x;\\\":`let global_idx = (workgroup_id.z * ${this.normalizedDispatchGroup[0]*this.normalizedDispatchGroup[1]}u +\\\\n          workgroup_id.y * ${this.normalizedDispatchGroup[0]}u + workgroup_id.x) * ${n*r*a}u + local_index;`}\\\\n  `}}t.createShaderHelper=e=>new a(e)},192:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createGroupedConvProgramInfoLoader=void 0;const r=n(952),a=n(163),o=n(75),i=n(770),s=n(997);t.createGroupedConvProgramInfoLoader=(e,t,n)=>{const u=(l=e.length>2,c=t.cacheKey,{name:\\\"GroupedConv\\\",inputTypes:l?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:c});var l,c;return Object.assign(Object.assign({},u),{get:()=>((e,t,n,u)=>{const l=e.length>2,c=l?\\\"value += b[output_channel];\\\":\\\"\\\",p=e[0].dims,d=e[1].dims,f=d[0]/n.group,h=\\\"f32\\\",{activationFunction:g,applyActivation:m}=(0,s.getActicationSnippet)(n),b=[`@group(0) @binding(0) var<storage, read> x : array<${h}>;`,`@group(0) @binding(1) var<storage, read> w : array<${h}>;`];l&&b.push(`@group(0) @binding(2) var<storage, read> b : array<${h}>;`);const v=\\\"NHWC\\\"===n.format,y=(0,i.calculateOutputShape)(p,d,n.dilations,n.pads,n.strides,v),w=r.ShapeUtil.size(y),_=(0,o.createIndicesHelper)(\\\"output\\\",y),$=(0,o.createIndicesHelper)(\\\"x\\\",p),S=(0,o.createIndicesHelper)(\\\"w\\\",d);return Object.assign(Object.assign({},t),{outputs:[{dims:u?u(y):y,dataType:e[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\\\n  const strides: vec2<u32> = vec2(${n.strides[0]}u, ${n.strides[1]}u);\\\\n  const pads: vec2<u32> = vec2(${n.pads[0]}u, ${n.pads[1]}u);\\\\n\\\\n  ${b.join(\\\"\\\\n\\\")}\\\\n  @group(0) @binding(${b.length}) var<storage, read_write> output : array<${h}>;\\\\n\\\\n  ${g}\\\\n  ${_.o2iImpl}\\\\n  ${$.i2oImpl}\\\\n  ${S.i2oImpl}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(w)}\\\\n\\\\n    ${_.indicesVariableDeclaration(\\\"outputIndices\\\")}\\\\n    ${_.o2iCall(\\\"global_idx\\\",\\\"outputIndices\\\")}\\\\n    let batch: u32 = outputIndices[0];\\\\n    let output_channel: u32 = outputIndices[${v?3:1}];\\\\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${v?1:2}], outputIndices[${v?2:3}]) * strides - pads;\\\\n    let group_id: u32 = output_channel / ${f}u;\\\\n\\\\n    var value: ${h} = ${h}(0);\\\\n    for (var wInChannel: u32 = 0u; wInChannel < ${d[1]}u; wInChannel++) {\\\\n      let input_channel = group_id * ${d[1]}u + wInChannel;\\\\n      for (var wHeight: u32 = 0u; wHeight < ${d[2]}u; wHeight++) {\\\\n        let xHeight = xRCCorner.x + wHeight * ${n.dilations[0]}u;\\\\n\\\\n        if (xHeight < 0u || xHeight >= ${p[v?1:2]}u) {\\\\n          continue;\\\\n        }\\\\n\\\\n        for (var wWidth: u32 = 0u; wWidth < ${d[3]}u; wWidth++) {\\\\n          let xWidth = xRCCorner.y + wWidth * ${n.dilations[1]}u;\\\\n          if (xWidth < 0u || xWidth >= ${p[v?2:3]}u) {\\\\n            continue;\\\\n          }\\\\n\\\\n          ${$.indicesVariableDeclaration(\\\"xIndices\\\",v?[\\\"batch\\\",\\\"xHeight\\\",\\\"xWidth\\\",\\\"input_channel\\\"]:[\\\"batch\\\",\\\"input_channel\\\",\\\"xHeight\\\",\\\"xWidth\\\"])}\\\\n          let xVal = x[${$.i2oExpression(\\\"xIndices\\\")}];\\\\n          ${S.indicesVariableDeclaration(\\\"wIndices\\\",[\\\"output_channel\\\",\\\"wInChannel\\\",\\\"wHeight\\\",\\\"wWidth\\\"])}\\\\n          let wVal = w[${S.i2oExpression(\\\"wIndices\\\")}];\\\\n          value += xVal*wVal;\\\\n        }\\\\n      }\\\\n    }\\\\n    ${c}\\\\n    ${m}\\\\n    output[global_idx] = value;\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(w/64)})})})(e,u,t,n)})}},770:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.conv=t.parseConvAttributes=t.calculateOutputShape=void 0;const r=n(952),a=n(387),o=n(192),i=n(822),s=n(997),u=n(625);t.calculateOutputShape=(e,t,n,r,a,o)=>{const i=e[0],s=e.slice(o?1:2,o?3:4),u=s.length,l=t[0],c=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),p=s.map(((e,t)=>e+r[t]+r[t+u])).map(((e,t)=>Math.floor((e-c[t]+a[t])/a[t])));return p.splice(0,0,i),p.splice(o?3:1,0,l),p};const l=(0,a.createAttributeWithCacheKey)({perm:[2,3,1,0]}),c=(e,t)=>{const n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);const a=e.pads.slice();r.PoolConvUtil.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,a,\\\"NHWC\\\"===e.format,e.autoPad);const o=Object.assign({},e);return Object.assign(o,{kernelShape:n,pads:a,cacheKey:e.cacheKey}),o};t.parseConvAttributes=e=>{const t=(0,s.parseInternalActivationAttributes)(e),n=e.format,r=[\\\"NOTSET\\\",\\\"VALID\\\",\\\"SAME_UPPER\\\",\\\"SAME_LOWER\\\"][e.auto_pad],o=e.dilations,i=e.group,u=e.kernel_shape,l=e.pads,c=e.strides,p=e.w_is_const();return(0,a.createAttributeWithCacheKey)(Object.assign({autoPad:r,format:n,dilations:o,group:i,kernelShape:u,pads:l,strides:c,wIsConst:p},t))},t.conv=(e,n)=>{((e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error(\\\"Conv requires 2 or 3 inputs\\\");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error(\\\"currently only support conv 1D and 2D\\\");if(e[0].dims.length!==e[1].dims.length)throw new Error(\\\"filter does not have same dimension as input\\\");if(e[0].dims[\\\"NHWC\\\"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error(\\\"FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\\\");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error(\\\"invalid bias\\\");const n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error(\\\"invalid kernel shape\\\");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error(\\\"Conv input(X,W) should be float tensor\\\");if(3===e.length&&1!==e[2].dataType)throw new Error(\\\"Conv input(bias) should be float tensor\\\")})(e.inputs,n),3===e.inputs[0].dims.length?((e,t)=>{const n=\\\"NHWC\\\"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);const a=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),s=[1].concat(t.dilations),u=[1].concat(t.kernelShape),l=c(Object.assign(Object.assign({},t),{pads:a,strides:i,dilations:s,kernelShape:u}),r);e.compute((0,o.createGroupedConvProgramInfoLoader)(r,l,(e=>n?[e[0],e[2],e[3]]:[])))})(e,n):((e,n,r)=>{var a;const s=c(r,n),p=3===n.length,d=\\\"NHWC\\\"===r.format,f=n[0].dims[d?1:2],h=n[0].dims[d?2:3],g=n[0].dims[d?3:1],m=n[1].dims[2],b=n[1].dims[3],v=(0,t.calculateOutputShape)(n[0].dims,n[1].dims,r.dilations,s.pads,r.strides,d),y=v[d?1:2],w=v[d?2:3],_=v[d?3:1];if(d&&m===f&&b===h&&\\\"VALID\\\"===r.autoPad||1===m&&1===b&&1===r.dilations[0]&&1===r.dilations[1]&&1===r.strides[0]&&1===r.strides[1]&&(\\\"SAME_UPPER\\\"===r.autoPad||\\\"SAME_LOWER\\\"===r.autoPad||\\\"VALID\\\"===r.autoPad))return void e.compute((0,o.createGroupedConvProgramInfoLoader)(n,s));if(!d||1!==r.group)return void e.compute((0,o.createGroupedConvProgramInfoLoader)(n,s));const $=d?y*w:_,S=d?_:y*w,O=m*b*g,C=null!==(a=e.customData.wT)&&void 0!==a?a:e.compute(Object.assign(Object.assign({},u.transposeProgramMetadata),{cacheHint:l.cacheKey,get:()=>(0,u.createTransposeProgramInfo)(n[1],l.perm)}),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.customData.wT&&(e.customData.wT=C);const A=[n[0],C];p&&(d||1!==n[2].dims.length?A.push(n[2]):A.push(n[2].reshape([n[2].dims[0],1,1]))),e.compute((0,i.createConv2DMatMulProgramInfoLoader)(A,s,v,$,S,O,p,!0),{inputs:A})})(e,e.inputs,n)}},822:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.createConv2DMatMulProgramInfoLoader=void 0;const r=n(163),a=n(456);t.createConv2DMatMulProgramInfoLoader=(e,t,n,o,i,s,u,l)=>{const c=((e,t)=>({name:\\\"Conv2DMatMul\\\",inputTypes:e?[r.GpuDataType.default,r.GpuDataType.default,r.GpuDataType.default]:[r.GpuDataType.default,r.GpuDataType.default],cacheHint:t}))(u,t.cacheKey);return Object.assign(Object.assign({},c),{get:()=>(0,a.createConv2DMatMulProgramInfo)(e,c,t,n,o,i,s,u,l)})}},997:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.parseInternalActivationAttributes=t.getActicationSnippet=void 0;const r=n(952);t.getActicationSnippet=e=>{switch(e.activation){case\\\"Relu\\\":return{activationFunction:\\\"\\\",applyActivation:\\\"value = max(value, 0.0);\\\"};case\\\"Sigmoid\\\":return{activationFunction:\\\"\\\",applyActivation:\\\"value = (1.0 / (1.0 + exp(-value)));\\\"};case\\\"Clip\\\":return{activationFunction:`const clip_min_=f32(${e.clipMin});const clip_max_=f32(${e.clipMax});`,applyActivation:\\\"value = clamp(value, clip_min_, clip_max_);\\\"};default:return{activationFunction:\\\"\\\",applyActivation:\\\"\\\"}}},t.parseInternalActivationAttributes=e=>{const t=(null==e?void 0:e.activation)||\\\"\\\";if(\\\"Clip\\\"===t){const[n,a]=(null==e?void 0:e.activation_params)||[r.MIN_CLIP,r.MAX_CLIP];return{activation:t,clipMax:a,clipMin:n,activationCacheKey:`${t}:${n},${a}`}}return{activation:t,activationCacheKey:t}}},271:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.parseGemmAttributes=t.gemm=void 0;const r=n(952),a=n(387),o=n(163);t.gemm=(e,t)=>{(e=>{if(!e)throw new Error(\\\"Input is missing\\\");if(e.length<2||e.length>3)throw new Error(\\\"Invaid input number.\\\");if(3===e.length&&e[2].dims.length>2)throw new Error(\\\"Invalid input shape of C\\\");if(1!==e[0].dataType||1!==e[1].dataType||3===e.length&&1!==e[2].dataType)throw new Error(\\\"Invalid input type.\\\");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error(\\\"Input types are mismatched\\\")})(e.inputs),e.compute(((e,t)=>{const n={name:\\\"Gemm\\\",inputTypes:3===e.length?[o.GpuDataType.default,o.GpuDataType.default,o.GpuDataType.default]:[o.GpuDataType.default,o.GpuDataType.default],cacheHint:t.cacheKey};return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const a=t[0].dims.slice(),i=t[1].dims.slice(),[s,u,l]=r.GemmUtil.getShapeOfGemmResult(a,n.transA,i,n.transB,3===t.length?t[2].dims:void 0),c=[s,u];if(!c)throw new Error(\\\"Can't use gemm on the given tensors\\\");const p=r.ShapeUtil.size(c);let d=\\\"\\\";n.transA&&n.transB?d=\\\"value += a[k * M + m] * b[n * K + k];\\\":n.transA&&!n.transB?d=\\\"value += a[k * M + m] * b[k * N + n];\\\":!n.transA&&n.transB?d=\\\"value += a[m * K + k] * b[n * K + k];\\\":n.transA||n.transB||(d=\\\"value += a[m * K + k] * b[k * N + n];\\\");const f=\\\"f32\\\",h=1===n.alpha?\\\"\\\":\\\"value *= alpha;\\\",g=3===t.length?`value += beta * c[${((e,t,n)=>{if(0===n.length)return\\\"0u\\\";const r=1===n.length&&1!==e||2===n.length&&n[0]!==e,a=n[n.length-1]!==t;let o=\\\"0u\\\";return r||(o+=`+ m * ${n[n.length-1]}u`),a||(o+=\\\"+n\\\"),o})(s,u,t[2].dims)}];`:\\\"\\\",m=[`@group(0) @binding(0) var<storage, read> a : array<${f}>;`,`@group(0) @binding(1) var<storage, read> b : array<${f}>;`];return 3===t.length&&m.push(`@group(0) @binding(2) var<storage, read> c : array<${f}>;`),Object.assign(Object.assign({},e),{outputs:[{dims:c,dataType:t[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\\\\n  const M: u32 = ${s}u;\\\\n  const N: u32 = ${u}u;\\\\n  const K: u32 = ${l}u;\\\\n  const alpha = ${f}(${n.alpha});\\\\n  const beta = ${f}(${n.beta});\\\\n\\\\n  ${m.join(\\\"\\\\n\\\")}\\\\n  @group(0) @binding(${t.length}) var<storage, read_write> output : array<${f}>;\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\\\\n\\\\n    let m = global_id.x / N;\\\\n    let n = global_id.x % N;\\\\n\\\\n    var value = ${f}(0);\\\\n    for (var k: u32 = 0u; k<${l}u; k++) {\\\\n      ${d}\\\\n    }\\\\n\\\\n    ${h}\\\\n    ${g}\\\\n    output[global_id.x] = value;\\\\n\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})})(n,e,t)})})(e.inputs,t))},t.parseGemmAttributes=e=>(0,a.createAttributeWithCacheKey)(e)},522:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.matMul=t.createMatmulProgramInfoLoader=void 0;const r=n(952),a=n(163),o=n(997);t.createMatmulProgramInfoLoader=(e,t)=>{const n=(i=e.length>2,s=t.activationCacheKey,{name:\\\"MatMul\\\",inputTypes:i?[a.GpuDataType.default,a.GpuDataType.default,a.GpuDataType.default]:[a.GpuDataType.default,a.GpuDataType.default],cacheHint:s});var i,s;return Object.assign(Object.assign({},n),{get:()=>((e,t,n)=>{const i=t[0].dims,s=t[1].dims,u=r.BroadcastUtil.calcShape(i,s,!0);if(!u)throw new Error(\\\"Can't use matmul on the given tensors\\\");const l=r.ShapeUtil.size(u),c=\\\"f32\\\",{activationFunction:p,applyActivation:d}=(0,o.getActicationSnippet)(n),f=u[u.length-2],h=i[i.length-1],g=u[u.length-1];return Object.assign(Object.assign({},e),{outputs:[{dims:u,dataType:t[0].dataType,gpuDataType:a.GpuDataType.default}],getShaderSource:e=>`\\\\n  const M: u32 = ${f}u;\\\\n  const N: u32 = ${g}u;\\\\n  const K: u32 = ${h}u;\\\\n\\\\n  @group(0) @binding(0) var<storage, read> a : array<${c}>;\\\\n  @group(0) @binding(1) var<storage, read> b : array<${c}>;\\\\n  @group(0) @binding(2) var<storage, read_write> output : array<${c}>;\\\\n\\\\n  ${p}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(l)}\\\\n\\\\n    let stack = global_idx / (M * N);\\\\n    let mn = global_idx % (M * N);\\\\n    let n = global_idx % N;\\\\n    let m = mn / N;\\\\n\\\\n    let offsetA = stack * (M * K);\\\\n    let offsetB = stack * (K * N);\\\\n\\\\n    var value = ${c}(0);\\\\n    for (var k: u32 = 0u; k<${h}u; k++) {\\\\n      value += a[offsetA + m * K + k] * b[offsetB + k * N + n];\\\\n    }\\\\n    ${d}\\\\n    output[global_idx] = value;\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(l/64)})})})(n,e,t)})},t.matMul=e=>{(e=>{if(!e||2!==e.length)throw new Error(\\\"MatMul requires 2 inputs.\\\");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error(\\\"shared dimension does not match.\\\");if(1!==e[0].dataType||1!==e[1].dataType)throw new Error(\\\"inputs should be float type\\\")})(e.inputs),e.compute((0,t.createMatmulProgramInfoLoader)(e.inputs,{activation:\\\"\\\",activationCacheKey:\\\"\\\"}))}},262:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.globalMaxPool=t.parseGlobalMaxPoolAttributes=t.parseMaxPoolAttributes=t.maxPool=t.globalAveragePool=t.parseGlobalAveragePoolAttributes=t.averagePool=t.parseAveragePoolAttributes=void 0;const r=n(952),a=n(387),o=n(163),i=n(75),s=e=>{if(!e||1!==e.length)throw new Error(\\\"Pool ops requires 1 input.\\\");if(4!==e[0].dims.length)throw new Error(\\\"Pool ops supports 2-D inputs only for now.\\\");if(1!==e[0].dataType)throw new Error(\\\"Invalid input type.\\\")},u=(e,t,n)=>{const a=\\\"NHWC\\\"===t.format,o=a?[e[0].dims[0],e[0].dims[3],e[0].dims[1],e[0].dims[2]]:e[0].dims.slice(),i=Object.hasOwnProperty.call(t,\\\"dilations\\\"),s=t.kernelShape.slice(),u=t.strides.slice(),l=i?t.dilations.slice():[],c=t.pads.slice();r.PoolConvUtil.adjustPoolAttributes(n,o,s,u,l,c);const p=r.PoolConvUtil.computePoolOutputShape(n,o,u,l,s,c,t.autoPad),d=Object.assign({},t);return i?Object.assign(d,{kernelShape:s,strides:u,pads:c,dilations:l,cacheKey:t.cacheKey}):Object.assign(d,{kernelShape:s,strides:u,pads:c,cacheKey:t.cacheKey}),[d,a?[p[0],p[2],p[3],p[1]]:p]},l=(e,t,n,a,o,s,u,l)=>{const c=\\\"NHWC\\\"===a.format,p=t.length,d=r.ShapeUtil.size(n),f=(0,i.createIndicesHelper)(\\\"output\\\",n),h=(0,i.createIndicesHelper)(\\\"x\\\",t);if(a.kernelShape.length<=2){const n=a.kernelShape[a.kernelShape.length-1],r=a.strides[a.strides.length-1],i=a.pads[a.pads.length/2-1],g=p-(c?2:1);let m=\\\"\\\",b=\\\"\\\",v=\\\"\\\";if(m=i+a.pads[a.pads.length-1]!==0?`\\\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\\\n                xIndices[${g}] = indices[${g}] * ${r} - ${i} + i;\\\\n                if (xIndices[${g}] < 0 || xIndices[${g}] >= ${t[g]}) {\\\\n                  pad++;\\\\n                  continue;\\\\n                }\\\\n                let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n                ${o}\\\\n              }`:`\\\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\\\n                xIndices[${g}] = indices[${g}] * ${r} - ${i} + i;\\\\n                let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n                ${o}\\\\n              }`,2===a.kernelShape.length){const e=a.kernelShape[a.kernelShape.length-2],r=a.strides[a.strides.length-2],o=a.pads[a.pads.length/2-2],i=a.pads[a.pads.length-2],s=p-(c?3:2),u=t[s];b=o+i!==0?`\\\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\\\n                  xIndices[${s}] = indices[${s}] * ${r} - ${o} + j;\\\\n                  if (xIndices[${s}] < 0 || xIndices[${s}] >= ${u}) {\\\\n                    pad+= ${n};\\\\n                    continue;\\\\n                  }\\\\n              `:`\\\\n                for (var j: u32 = 0u; j < ${e}u; j++) {\\\\n                  xIndices[${s}] = indices[${s}] * ${r} - ${o} + j;\\\\n                `,v=\\\"\\\\n              }\\\\n            \\\"}return`\\\\n            @group(0) @binding(0) var<storage, read> x : array<${u}>;\\\\n            @group(0) @binding(1) var<storage, read_write> output : array<${u}>;\\\\n\\\\n            ${f.o2iImpl}\\\\n            ${h.i2oImpl}\\\\n\\\\n            ${e.mainStart()}\\\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\\\\n\\\\n              ${f.indicesVariableDeclaration(\\\"indices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"indices\\\")}\\\\n              ${f.indicesVariableDeclaration(\\\"xIndices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"xIndices\\\")}\\\\n\\\\n              var value: ${u} = ${u}(${l});\\\\n              var pad = 0;\\\\n              ${b}\\\\n              ${m}\\\\n              ${v}\\\\n              ${s}\\\\n\\\\n              output[global_idx] = value;\\\\n            }`}{if(c)throw new Error(\\\"Pooling with kernelShape.length > 2 is not supported for NHWC format.\\\");const n=r.ShapeUtil.size(a.kernelShape),i=r.ShapeUtil.computeStrides(a.kernelShape),g=i.length,m=a.pads.length;let b=\\\"\\\";return b=a.pads.reduce(((e,t)=>e+t))?`\\\\n                if (xIndices[j] >= inputDims[j]) {\\\\n                  pad++;\\\\n                  isPad = true;\\\\n                  break;\\\\n                }\\\\n              }\\\\n              if (!isPad) {\\\\n                let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n                ${o}\\\\n              }`:`\\\\n              }\\\\n              let x_val = x[${h.i2oExpression(\\\"xIndices\\\")}];\\\\n              ${o}\\\\n            `,`\\\\n            @group(0) @binding(0) var<storage, read> x : array<${u}>;\\\\n            @group(0) @binding(1) var<storage, read_write> output : array<${u}>;\\\\n\\\\n            ${f.o2iImpl}\\\\n            ${h.i2oImpl}\\\\n\\\\n            const pads = array<u32, ${m}>(${a.pads.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n            const inputDims = array<u32, ${p}>(${t.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n            const kernelStrides = array<u32, ${g}>(${i.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n            const strides = array<u32, ${g}>(${a.strides.map((e=>`${e}u`)).join(\\\",\\\")});\\\\n\\\\n            ${e.mainStart()}\\\\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes(d)}\\\\n\\\\n              ${f.indicesVariableDeclaration(\\\"indices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"indices\\\")}\\\\n              ${f.indicesVariableDeclaration(\\\"xIndices\\\")}\\\\n              ${f.o2iCall(\\\"global_idx\\\",\\\"xIndices\\\")}\\\\n\\\\n              var offsets: array<u32, ${g}>;\\\\n\\\\n              var value = ${u}(${l});\\\\n              var pad = 0;\\\\n              var isPad = false;\\\\n\\\\n              for (var i: u32 = 0u; i < ${n}u; i++) {\\\\n                var offset = i;\\\\n                for (var j = 0u; j < ${g-1}u; j++) {\\\\n                  offsets[j] = offset / kernelStrides[j];\\\\n                  offset -= offsets[j] * kernelStrides[j];\\\\n                }\\\\n                offsets[${g-1}] = offset;\\\\n\\\\n                isPad = false;\\\\n                for (var j = ${p-g}u; j < ${p}u; j++) {\\\\n                  xIndices[j] = indices[j] * strides[j - ${p-g}u]\\\\n                    + offsets[j - ${p-g}u] - pads[j - 2u];\\\\n                  ${b}\\\\n              }\\\\n              ${s}\\\\n\\\\n              output[global_idx] = value;\\\\n            }`}},c=e=>({format:e.format,autoPad:[\\\"NOTSET\\\",\\\"VALID\\\",\\\"SAME_UPPER\\\",\\\"SAME_LOWER\\\"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),p=(e,t,n,a)=>{const[i,s]=u(e,a,n),c=r.ShapeUtil.size(i.kernelShape),p=\\\"f32\\\";let d=\\\"\\\";return i.countIncludePad?d+=`value /= ${p}(${c});`:d+=`value /= ${p}(${c} - pad);`,Object.assign(Object.assign({},t),{outputs:[{dims:s,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:t=>l(t,e[0].dims,s,i,\\\"value += x_val;\\\",d,p,\\\"0.0\\\"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(s)/64)})})};t.parseAveragePoolAttributes=e=>{const t=0!==e.count_include_pad,n=c(e);if(0!==n.ceilMode)throw new Error(\\\"using ceil() in shape computation is not yet supported for AveragePool\\\");return(0,a.createAttributeWithCacheKey)(Object.assign({countIncludePad:t},n))},t.averagePool=(e,t)=>{s(e.inputs);const n={name:\\\"AveragePool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>p(e.inputs,n,!1,t)}))};const d={autoPad:\\\"\\\",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[],cacheKey:\\\"\\\"};t.parseGlobalAveragePoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},d),{cacheKey:t})},t.globalAveragePool=(e,t)=>{s(e.inputs);const n={name:\\\"GlobalAveragePool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>p(e.inputs,n,!0,t)}))};const f=(e,t,n,a)=>{const[i,s]=u(e,a,n);return Object.assign(Object.assign({},t),{outputs:[{dims:s,dataType:e[0].dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:t=>l(t,e[0].dims,s,i,\\\"\\\\n      value = max(x_val, value);\\\\n    \\\",\\\"\\\",\\\"f32\\\",\\\"-1e5\\\"),dispatchGroup:()=>({x:Math.ceil(r.ShapeUtil.size(s)/64)})})};t.maxPool=(e,t)=>{s(e.inputs);const n={name:\\\"MaxPool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs,n,!1,t)}))},t.parseMaxPoolAttributes=e=>{const t=e.storage_order,n=e.dilations,r=c(e);if(0!==t)throw new Error(\\\"column major storage order is not yet supported for MaxPool\\\");if(0!==r.ceilMode)throw new Error(\\\"using ceil() in shape computation is not yet supported for MaxPool\\\");return(0,a.createAttributeWithCacheKey)(Object.assign({storageOrder:t,dilations:n},r))},t.parseGlobalMaxPoolAttributes=e=>{const t=e.format;return Object.assign(Object.assign({format:t},d),{cacheKey:t})},t.globalMaxPool=(e,t)=>{s(e.inputs);const n={name:\\\"GlobalMaxPool\\\",inputTypes:[o.GpuDataType.default],cacheHint:t.cacheKey};e.compute(Object.assign(Object.assign({},n),{get:()=>f(e.inputs,n,!0,t)}))}},625:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.parseTransposeAttributes=t.transpose=t.createTransposeProgramInfo=t.transposeProgramMetadata=void 0;const r=n(952),a=n(387),o=n(163),i=n(75);t.transposeProgramMetadata={name:\\\"Transpose\\\",inputTypes:[o.GpuDataType.default]};const s=(e,t)=>t&&t.length!==e.length?[...e.keys()].reverse():t;t.createTransposeProgramInfo=(e,n)=>{const a=e.dims,u=s(a,n),l=((e,t)=>r.ShapeUtil.sortBasedOnPerm(e,s(e,t)))(a,u),c=a.length,p=r.ShapeUtil.size(l),d=(0,i.createIndicesHelper)(\\\"output\\\",l),f=(0,i.createIndicesHelper)(\\\"a\\\",a);return Object.assign(Object.assign({},t.transposeProgramMetadata),{outputs:[{dims:l,dataType:e.dataType,gpuDataType:o.GpuDataType.default}],getShaderSource:e=>`\\\\n  @group(0) @binding(0) var<storage, read> a : array<f32>;\\\\n  @group(0) @binding(1) var<storage, read_write> output : array<f32>;\\\\n\\\\n  ${((e,t)=>{const n=[];n.push(`fn perm(a: ptr<function, array<u32, ${t}>>, i: ptr<function, array<u32, ${t}>>) {`);for(let r=0;r<t;++r)n.push(`\\\\t(*a)[${e[r]}]=(*i)[${r}];`);return n.push(\\\"\\\\t}\\\"),n.join(\\\"\\\\n\\\")})(u,c)}\\\\n  ${d.o2iImpl}\\\\n  ${f.i2oImpl}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(p)}\\\\n\\\\n    ${d.indicesVariableDeclaration(\\\"indices\\\")}\\\\n    ${d.o2iCall(\\\"global_idx\\\",\\\"indices\\\")}\\\\n    ${f.indicesVariableDeclaration(\\\"aIndices\\\")}\\\\n    perm(&aIndices, &indices);\\\\n\\\\n    output[global_idx] = a[${f.i2oExpression(\\\"aIndices\\\")}];\\\\n  }`,dispatchGroup:()=>({x:Math.ceil(p/64)})})},t.transpose=(e,n)=>{(e=>{if(!e||1!==e.length)throw new Error(\\\"Transpose requires 1 input.\\\");if(1!==e[0].dataType)throw new Error(\\\"input should be float tensor\\\")})(e.inputs),e.compute(Object.assign(Object.assign({},t.transposeProgramMetadata),{cacheHint:n.cacheKey,get:()=>(0,t.createTransposeProgramInfo)(e.inputs[0],n.perm)}))},t.parseTransposeAttributes=e=>(0,a.createAttributeWithCacheKey)({perm:e.perm})},302:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.thresholdedRelu=t.tanh=t.tan=t.sqrt=t.sinh=t.sin=t.sigmoid=t.relu=t.reciprocal=t.neg=t.leakyRelu=t.floor=t.exp=t.erf=t.elu=t.parseAlphaAttributes=t.cosh=t.cos=t.ceil=t.clip=t.clipV10=t.atanh=t.atan=t.asinh=t.asin=t.acosh=t.acos=t.abs=void 0;const r=n(952),a=n(387),o=n(163),i=(e,t,n,a,i)=>{const s={name:t,inputTypes:[o.GpuDataType.default],cacheHint:i};return Object.assign(Object.assign({},s),{get:()=>((e,t,n,a)=>Object.assign(Object.assign({},e),{getShaderSource:e=>((e,t,n,r)=>{const a=Math.ceil(t/4);let o=\\\"\\\";return o=\\\"string\\\"==typeof n?`${n}(a)`:n(\\\"a\\\"),`\\\\n  @group(0) @binding(0) var<storage, read> inputData : array<vec4<f32>>;\\\\n  @group(0) @binding(1) var<storage, read_write> outputData : array<vec4<f32>>;\\\\n\\\\n  ${null!=r?r:\\\"\\\"}\\\\n\\\\n  ${e.mainStart()}\\\\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(a)}\\\\n\\\\n    let a = inputData[global_idx];\\\\n    outputData[global_idx] = ${o};\\\\n  }`})(e,r.ShapeUtil.size(t.dims),n,a),outputs:[{dims:t.dims,dataType:t.dataType,gpuDataType:o.GpuDataType.default}],dispatchGroup:e=>({x:Math.ceil(r.ShapeUtil.size(e[0].dims)/64/4)})}))(s,e,n,a)})};t.abs=e=>{e.compute(i(e.inputs[0],\\\"Abs\\\",\\\"abs\\\"))},t.acos=e=>{e.compute(i(e.inputs[0],\\\"Acos\\\",\\\"acos\\\"))},t.acosh=e=>{e.compute(i(e.inputs[0],\\\"Acosh\\\",\\\"acosh\\\"))},t.asin=e=>{e.compute(i(e.inputs[0],\\\"Asin\\\",\\\"asin\\\"))},t.asinh=e=>{e.compute(i(e.inputs[0],\\\"Asinh\\\",\\\"asinh\\\"))},t.atan=e=>{e.compute(i(e.inputs[0],\\\"Atan\\\",\\\"atan\\\"))},t.atanh=e=>{e.compute(i(e.inputs[0],\\\"Atanh\\\",\\\"atanh\\\"))},t.clipV10=(e,t)=>{e.compute(i(e.inputs[0],\\\"Clip\\\",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\\\\n    const clip_min_: vec4<f32> = vec4(f32(${t.min}));\\\\n    const clip_max_: vec4<f32> = vec4(f32(${t.max}));\\\\n`,t.cacheKey),{inputs:[0]})},t.clip=e=>{const n=(e=>{const t=e.length>=2?e[1].getFloat32Array()[0]:r.MIN_CLIP,n=e.length>=3?e[2].getFloat32Array()[0]:r.MAX_CLIP;return(0,a.createAttributeWithCacheKey)({min:t,max:n})})(e.inputs);(0,t.clipV10)(e,n)},t.ceil=e=>{e.compute(i(e.inputs[0],\\\"Ceil\\\",\\\"ceil\\\"))},t.cos=e=>{e.compute(i(e.inputs[0],\\\"Cos\\\",\\\"cos\\\"))},t.cosh=e=>{e.compute(i(e.inputs[0],\\\"Cosh\\\",\\\"cosh\\\"))},t.parseAlphaAttributes=e=>(0,a.createAttributeWithCacheKey)(e),t.elu=(e,t)=>{e.compute(i(e.inputs[0],\\\"Elu\\\",(e=>`elu_vf32(${e})`),`\\\\n  const elu_alpha_: f32 = f32(${t.alpha});\\\\n\\\\n  fn elu_f32(a: f32) -> f32 {\\\\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\\\\n  }\\\\n\\\\n  fn elu_vf32(v: vec4<f32>) -> vec4<f32> {\\\\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\\\\n  }`,t.cacheKey))},t.erf=e=>{e.compute(i(e.inputs[0],\\\"Erf\\\",(e=>`erf_vf32(${e})`),\\\"\\\\n  const r0: f32 = 0.3275911;\\\\n  const r1: f32 = 0.254829592;\\\\n  const r2: f32 = -0.284496736;\\\\n  const r3: f32 = 1.421413741;\\\\n  const r4: f32 = -1.453152027;\\\\n  const r5: f32 = 1.061405429;\\\\n\\\\n  fn erf_vf32(v: vec4<f32>) -> vec4<f32> {\\\\n    let absv = abs(v);\\\\n    let x = 1.0 / (1.0 + r0 * absv);\\\\n    return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\\\\n  }\\\"))},t.exp=e=>{e.compute(i(e.inputs[0],\\\"Exp\\\",\\\"exp\\\"))},t.floor=e=>{e.compute(i(e.inputs[0],\\\"Floor\\\",\\\"floor\\\"))},t.leakyRelu=(e,t)=>{e.compute(i(e.inputs[0],\\\"LeakyRelu\\\",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<f32>(0.0))`),`const leaky_relu_alpha_: f32 = f32(${t.alpha});`,t.cacheKey))},t.neg=e=>{e.compute(i(e.inputs[0],\\\"Neg\\\",(e=>`-${e}`)))},t.reciprocal=e=>{e.compute(i(e.inputs[0],\\\"Reciprocal\\\",(e=>`1.0/${e}`)))},t.relu=e=>{e.compute(i(e.inputs[0],\\\"Relu\\\",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > vec4<f32>(0.0))`)))},t.sigmoid=e=>{e.compute(i(e.inputs[0],\\\"Sigmoid\\\",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},t.sin=e=>{e.compute(i(e.inputs[0],\\\"Sin\\\",\\\"sin\\\"))},t.sinh=e=>{e.compute(i(e.inputs[0],\\\"Sinh\\\",\\\"sinh\\\"))},t.sqrt=e=>{e.compute(i(e.inputs[0],\\\"Sqrt\\\",\\\"sqrt\\\"))},t.tan=e=>{e.compute(i(e.inputs[0],\\\"Tan\\\",\\\"tan\\\"))},t.tanh=e=>{e.compute(i(e.inputs[0],\\\"Tanh\\\",\\\"tanh\\\"))},t.thresholdedRelu=(e,t)=>(e.compute(i(e.inputs[0],\\\"ThresholdedRelu\\\",(e=>`select(vec4<f32>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_: vec4<f32> = vec4<f32>(${t.alpha});`,t.cacheKey)),0)},305:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.ProgramManager=void 0;const r=n(955),a=n(75);t.ProgramManager=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r){const a=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.profilingEnabled&&o.writeTimestamp(this.backend.profilingQuerySet,0),o.setPipeline(e.computePipeline);const i=[];for(const e of t)i.push({binding:i.length,resource:{buffer:e.buffer}});for(const e of n)i.push({binding:i.length,resource:{buffer:e.buffer}});const s=a.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:i});if(o.setBindGroup(0,s),o.dispatchWorkgroups(...r),this.backend.pendingDispatchNumber++,this.backend.profilingEnabled){o.writeTimestamp(this.backend.profilingQuerySet,1);const e=this.backend.gpuDataManager.create(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),t=this.backend.gpuDataManager.create(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.backend.endComputePass(),this.backend.getCommandEncoder().resolveQuerySet(this.backend.profilingQuerySet,0,2,e.buffer,0),this.backend.getCommandEncoder().copyBufferToBuffer(e.buffer,0,t.buffer,0,16),this.backend.flush();const n=this.backend.currentKernelId,r=this.backend.kernels.get(n)[0];t.buffer.mapAsync(GPUMapMode.READ).then((()=>{const a=new BigUint64Array(t.buffer.getMappedRange()),o=a[0],i=a[1];t.buffer.unmap(),void 0===this.backend.profilingTimeBase&&(this.backend.profilingTimeBase=o);const s=Number(o-this.backend.profilingTimeBase),u=Number(i-this.backend.profilingTimeBase);if(!Number.isSafeInteger(s)||!Number.isSafeInteger(u))throw new RangeError(\\\"incorrect timestamp range\\\");this.backend.gpuDataManager.release(e.id),this.backend.gpuDataManager.release(t.id),console.log(`[profiling] kernel \\\"${n}|${r}\\\" execution time: ${u-s} ns`)}))}this.backend.pendingDispatchNumber>=16&&this.backend.flush()}dispose(){}build(e,t){const n=this.backend.device,o=e.getShaderSource((0,a.createShaderHelper)(t)),i=n.createShaderModule({code:o});return(0,r.LOG_DEBUG)(\\\"verbose\\\",(()=>`[WebGPU] shader code: ${o}`)),{programInfo:e,computePipeline:n.createComputePipeline({compute:{module:i,entryPoint:\\\"main\\\"},layout:\\\"auto\\\"})}}normalizeDispatchGroupSize(e){const t=\\\"number\\\"==typeof e?e:e.x,n=\\\"number\\\"==typeof e?1:e.y||1,r=\\\"number\\\"==typeof e?1:e.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=a&&n<=a&&r<=a)return[t,n,r];const o=t*n*r;let i=Math.ceil(Math.sqrt(o));if(i>a){if(i=Math.ceil(Math.cbrt(o)),i>a)throw new Error(\\\"Total dispatch size exceeds WebGPU maximum.\\\");return[i,i,i]}return[i,i,1]}}},163:(e,t)=>{\\\"use strict\\\";var n;Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.GpuDataType=void 0,(n=t.GpuDataType||(t.GpuDataType={}))[n.default=0]=\\\"default\\\",n[n.upload=1]=\\\"upload\\\",n[n.profile=2]=\\\"profile\\\"},899:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=(e,n,r,a)=>{if(\\\"object\\\"==typeof e&&null!==e){if(r.has(e))throw new Error(\\\"Circular reference in options\\\");r.add(e)}Object.entries(e).forEach((([e,o])=>{const i=n?n+e:e;if(\\\"object\\\"==typeof o)(0,t.iterateExtraOptions)(o,i+\\\".\\\",r,a);else if(\\\"string\\\"==typeof o||\\\"number\\\"==typeof o)a(i,o.toString());else{if(\\\"boolean\\\"!=typeof o)throw new Error(\\\"Can't handle extra config type: \\\"+typeof o);a(i,o?\\\"1\\\":\\\"0\\\")}}))}},918:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;const r=n(899),a=n(444),o=n(263);t.setRunOptions=e=>{const t=(0,o.getInstance)();let n=0;const i=[],s=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))s.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))s.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(s.terminate=!1);let o=0;if(void 0!==(null==e?void 0:e.tag)&&(o=(0,a.allocWasmString)(e.tag,i)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,o),0===n)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&(0,r.iterateExtraOptions)(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const o=(0,a.allocWasmString)(e,i),s=(0,a.allocWasmString)(r,i);if(0!==t._OrtAddRunConfigEntry(n,o,s))throw new Error(`Can't set a run config entry: ${e} - ${r}`)})),[n,i]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),i.forEach(t._free),e}}},622:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;const r=n(899),a=n(444),o=n(263);t.setSessionOptions=e=>{var t,n,i,s;const u=(0,o.getInstance)();let l=0;const c=[],p=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\"),e.executionProviders&&e.executionProviders.some((e=>\\\"webgpu\\\"===(\\\"string\\\"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)})(p);try{const e=(e=>{switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(null!==(t=p.graphOptimizationLevel)&&void 0!==t?t:\\\"all\\\"),d=(e=>{switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(null!==(n=p.executionMode)&&void 0!==n?n:\\\"sequential\\\"),f=\\\"string\\\"==typeof p.logId?(0,a.allocWasmString)(p.logId,c):0,h=null!==(i=p.logSeverityLevel)&&void 0!==i?i:2;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log serverity level is not valid: ${h}`);const g=null!==(s=p.logVerbosityLevel)&&void 0!==s?s:0;if(!Number.isInteger(g)||g<0||g>4)throw new Error(`log verbosity level is not valid: ${g}`);const m=\\\"string\\\"==typeof p.optimizedModelFilePath?(0,a.allocWasmString)(p.optimizedModelFilePath,c):0;if(l=u._OrtCreateSessionOptions(e,!!p.enableCpuMemArena,!!p.enableMemPattern,d,!!p.enableProfiling,0,f,h,g,m),0===l)throw new Error(\\\"Can't create session options\\\");return p.executionProviders&&((e,t,n)=>{for(const r of t){let t=\\\"string\\\"==typeof r?r:r.name;switch(t){case\\\"xnnpack\\\":t=\\\"XNNPACK\\\";break;case\\\"webnn\\\":if(t=\\\"WEBNN\\\",\\\"string\\\"!=typeof r){const t=r;if(null==t?void 0:t.deviceType){const r=(0,a.allocWasmString)(\\\"deviceType\\\",n),i=(0,a.allocWasmString)(t.deviceType,n);if(0!==(0,o.getInstance)()._OrtAddSessionConfigEntry(e,r,i))throw new Error(`Can't set a session config entry: 'deviceType' - ${t.deviceType}`)}if(null==t?void 0:t.powerPreference){const r=(0,a.allocWasmString)(\\\"powerPreference\\\",n),i=(0,a.allocWasmString)(t.powerPreference,n);if(0!==(0,o.getInstance)()._OrtAddSessionConfigEntry(e,r,i))throw new Error(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}`)}}break;case\\\"webgpu\\\":t=\\\"JS\\\";break;case\\\"wasm\\\":case\\\"cpu\\\":continue;default:throw new Error(`not supported EP: ${t}`)}const i=(0,a.allocWasmString)(t,n);if(0!==(0,o.getInstance)()._OrtAppendExecutionProvider(e,i))throw new Error(`Can't append execution provider: ${t}`)}})(l,p.executionProviders,c),void 0!==p.extra&&(0,r.iterateExtraOptions)(p.extra,\\\"\\\",new WeakSet,((e,t)=>{const n=(0,a.allocWasmString)(e,c),r=(0,a.allocWasmString)(t,c);if(0!==u._OrtAddSessionConfigEntry(l,n,r))throw new Error(`Can't set a session config entry: ${e} - ${t}`)})),[l,c]}catch(e){throw 0!==l&&u._OrtReleaseSessionOptions(l),c.forEach(u._free),e}}},444:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;const r=n(263);t.allocWasmString=(e,t)=>{const n=(0,r.getInstance)(),a=n.lengthBytesUTF8(e)+1,o=n._malloc(a);return n.stringToUTF8(e,o,a),t.push(o),o}},917:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.logLevelStringToEnum=t.tensorTypeToTypedArrayConstructor=t.getTensorElementSize=t.tensorDataTypeEnumToString=t.tensorDataTypeStringToEnum=void 0,t.tensorDataTypeStringToEnum=e=>{switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${e}`)}},t.tensorDataTypeEnumToString=e=>{switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int64\\\";case 13:return\\\"uint64\\\";default:throw new Error(`unsupported data type: ${e}`)}},t.getTensorElementSize=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],t.tensorTypeToTypedArrayConstructor=e=>{switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":case\\\"bool\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},t.logLevelStringToEnum=e=>{switch(e){case\\\"verbose\\\":return 0;case\\\"info\\\":return 1;case\\\"warning\\\":return 2;case\\\"error\\\":return 3;case\\\"fatal\\\":return 4;default:throw new Error(`unsupported logging level: ${e}`)}}},259:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.createSessionFinalize=t.createSessionAllocate=t.initRuntime=void 0;const r=n(675),a=n(918),o=n(622),i=n(444),s=n(917),u=n(263);t.initRuntime=async e=>{await(async(e,t)=>{const n=(0,u.getInstance)()._OrtInit(e,t);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)})(e.wasm.numThreads,(0,s.logLevelStringToEnum)(e.logLevel)),await(0,r.init)((0,u.getInstance)(),e)};const l=new Map;t.createSessionAllocate=e=>{const t=(0,u.getInstance)(),n=t._malloc(e.byteLength);return t.HEAPU8.set(e,n),[n,e.byteLength]},t.createSessionFinalize=(e,t)=>{const n=(0,u.getInstance)();let r=0,a=0,i=[];try{if([a,i]=(0,o.setSessionOptions)(t),r=n._OrtCreateSession(e[0],e[1],a),0===r)throw new Error(\\\"Can't create a session\\\")}finally{n._free(e[0]),0!==a&&n._OrtReleaseSessionOptions(a),i.forEach(n._free)}const s=n._OrtGetInputCount(r),c=n._OrtGetOutputCount(r),p=[],d=[],f=[],h=[];for(let e=0;e<s;e++){const t=n._OrtGetInputName(r,e);if(0===t)throw new Error(\\\"Can't get an input name\\\");d.push(t),p.push(n.UTF8ToString(t))}for(let e=0;e<c;e++){const t=n._OrtGetOutputName(r,e);if(0===t)throw new Error(\\\"Can't get an output name\\\");h.push(t),f.push(n.UTF8ToString(t))}return l.set(r,[r,d,h]),[r,p,f]},t.createSession=(e,n)=>{const r=(0,t.createSessionAllocate)(e);return(0,t.createSessionFinalize)(r,n)},t.releaseSession=e=>{const t=(0,u.getInstance)(),n=l.get(e);if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=n[1],o=n[2];a.forEach(t._OrtFree),o.forEach(t._OrtFree),t._OrtReleaseSession(r),l.delete(e)},t.run=async(e,t,n,r,o)=>{const c=(0,u.getInstance)(),p=l.get(e);if(!p)throw new Error(\\\"invalid session id\\\");const d=p[0],f=p[1],h=p[2],g=t.length,m=r.length;let b=0,v=[];const y=[],w=[];try{[b,v]=(0,a.setRunOptions)(o);for(let e=0;e<g;e++){const t=n[e][0],r=n[e][1],a=n[e][2];let o,u;if(Array.isArray(a)){u=4*a.length,o=c._malloc(u),w.push(o);let e=o/4;for(let t=0;t<a.length;t++){if(\\\"string\\\"!=typeof a[t])throw new TypeError(`tensor data at index ${t} is not a string`);c.HEAPU32[e++]=(0,i.allocWasmString)(a[t],w)}}else u=a.byteLength,o=c._malloc(u),w.push(o),c.HEAPU8.set(new Uint8Array(a.buffer,a.byteOffset,u),o);const l=c.stackSave(),p=c.stackAlloc(4*r.length);try{let e=p/4;r.forEach((t=>c.HEAP32[e++]=t));const n=c._OrtCreateTensor((0,s.tensorDataTypeStringToEnum)(t),o,u,p,r.length);if(0===n)throw new Error(\\\"Can't create a tensor\\\");y.push(n)}finally{c.stackRestore(l)}}const e=c.stackSave(),u=c.stackAlloc(4*g),l=c.stackAlloc(4*g),p=c.stackAlloc(4*m),_=c.stackAlloc(4*m);try{let e=u/4,n=l/4,a=p/4,o=_/4;for(let r=0;r<g;r++)c.HEAPU32[e++]=y[r],c.HEAPU32[n++]=f[t[r]];for(let e=0;e<m;e++)c.HEAPU32[a++]=0,c.HEAPU32[o++]=h[r[e]];let i=c._OrtRun(d,l,u,g,_,m,p,b);const v=c.jsepRunPromise;v&&void 0!==v.then&&(i=await v);const w=[];if(0===i)for(let e=0;e<m;e++){const t=c.HEAPU32[p/4+e],n=c.stackSave(),r=c.stackAlloc(16);let a,o=0;try{if(i=c._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==i)throw new Error(`Can't access output tensor data. error code = ${i}`);let e=r/4;const n=c.HEAPU32[e++];o=c.HEAPU32[e++];const u=c.HEAPU32[e++],l=c.HEAPU32[e++],p=[];for(let e=0;e<l;e++)p.push(c.HEAPU32[u/4+e]);c._OrtFree(u);const d=0===p.length?1:p.reduce(((e,t)=>e*t));if(a=(0,s.tensorDataTypeEnumToString)(n),\\\"string\\\"===a){const e=[];let t=o/4;for(let n=0;n<d;n++){const r=c.HEAPU32[t++],a=n===d-1?void 0:c.HEAPU32[t]-r;e.push(c.UTF8ToString(r,a))}w.push([a,p,e])}else{const e=new((0,s.tensorTypeToTypedArrayConstructor)(a))(d);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(c.HEAPU8.subarray(o,o+e.byteLength)),w.push([a,p,e])}}finally{c.stackRestore(n),\\\"string\\\"===a&&o&&c._free(o),c._OrtReleaseTensor(t)}}if(0===i)return w;throw new Error(`failed to call OrtRun(). error code = ${i}.`)}finally{c.stackRestore(e)}}finally{y.forEach(c._OrtReleaseTensor),w.forEach(c._free),c._OrtReleaseRunOptions(b),v.forEach(c._free)}},t.endProfiling=e=>{const t=(0,u.getInstance)(),n=l.get(e);if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],a=t._OrtEndProfiling(r);if(0===a)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(a)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},263:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var a=Object.getOwnPropertyDescriptor(t,n);a&&!(\\\"get\\\"in a?!t.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,a)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const i=o(n(449)),s=n(932),u=n(474);let l,c=!1,p=!1,d=!1;t.initializeWebAssembly=async e=>{if(c)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(d)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const t=e.initTimeout,r=e.numThreads,a=e.simd,o=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),f=a&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch(e){return!1}})(),h=e.wasmPaths,g=\\\"string\\\"==typeof h?h:void 0,m=((e,t)=>t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\")(f,o),b=\\\"object\\\"==typeof h?h[m]:void 0;let v=!1;const y=[];if(t>0&&y.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),y.push(new Promise(((e,t)=>{const r=o?u:s,a={locateFile:(e,t)=>o&&e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(154)],{type:\\\"text/javascript\\\"})):e.endsWith(\\\".wasm\\\")?b||(null!=g?g:t)+m:t+e};if(o)if(\\\"undefined\\\"==typeof Blob)a.mainScriptUrlOrBlob=i.join(__dirname,\\\"ort-wasm-threaded.js\\\");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${r.toString()}})();`;a.mainScriptUrlOrBlob=new Blob([e],{type:\\\"text/javascript\\\"})}r(a).then((t=>{p=!1,c=!0,l=t,e()}),(e=>{p=!1,d=!0,t(e)}))}))),await Promise.race(y),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},t.getInstance=()=>{if(c&&l)return l;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=()=>{var e;!c||p||d||(p=!0,null===(e=l.PThread)||void 0===e||e.terminateAllThreads(),l=void 0,p=!1,c=!1,d=!0)}},474:(e,t,n)=>{var _scriptDir,r=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\\\"undefined\\\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function t(){return M.buffer!=I.buffer&&B(),I}function r(){return M.buffer!=I.buffer&&B(),k}function a(){return M.buffer!=I.buffer&&B(),D}function o(){return M.buffer!=I.buffer&&B(),U}function i(){return M.buffer!=I.buffer&&B(),G}var s,u,l;s||(s=void 0!==e?e:{}),s.ready=new Promise(((e,t)=>{u=e,l=t}));var c,p,d,f=Object.assign({},s),h=\\\"./this.program\\\",g=(e,t)=>{throw t},m=\\\"object\\\"==typeof window,b=\\\"function\\\"==typeof importScripts,v=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,y=s.ENVIRONMENT_IS_PTHREAD||!1,w=\\\"\\\";function _(e){return s.locateFile?s.locateFile(e,w):w+e}if(v){var $=n(384),S=n(908);let t;w=b?S.dirname(w)+\\\"/\\\":__dirname+\\\"/\\\",c=(e,t)=>(e=e.startsWith(\\\"file://\\\")?new URL(e):S.normalize(e),$.readFileSync(e,t?void 0:\\\"utf8\\\")),d=e=>((e=c(e,!0)).buffer||(e=new Uint8Array(e)),e),p=(e,t,n,r=!0)=>{e=e.startsWith(\\\"file://\\\")?new URL(e):S.normalize(e),$.readFile(e,r?void 0:\\\"utf8\\\",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!s.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),g=(e,t)=>{throw process.exitCode=e,t},s.inspect=()=>\\\"[Emscripten Module object]\\\";try{t=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=t.Worker}else(m||b)&&(b?w=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(w=document.currentScript.src),_scriptDir&&(w=_scriptDir),w=0!==w.indexOf(\\\"blob:\\\")?w.substr(0,w.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",v||(c=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},b&&(d=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),p=(e,t,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&\\\"undefined\\\"==typeof performance&&(global.performance=n(953).performance);var O=console.log.bind(console),C=console.warn.bind(console);v&&(O=(...e)=>$.writeSync(1,e.join(\\\" \\\")+\\\"\\\\n\\\"),C=(...e)=>$.writeSync(2,e.join(\\\" \\\")+\\\"\\\\n\\\"));var A,E=s.print||O,P=s.printErr||C;Object.assign(s,f),f=null,s.thisProgram&&(h=s.thisProgram),s.quit&&(g=s.quit),s.wasmBinary&&(A=s.wasmBinary);var T=s.noExitRuntime||!0;\\\"object\\\"!=typeof WebAssembly&&Q(\\\"no native wasm support detected\\\");var M,x,R,I,k,D,U,G,j=!1;function B(){var e=M.buffer;s.HEAP8=I=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=D=new Int32Array(e),s.HEAPU8=k=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=U=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=G=new Float64Array(e)}var W=s.INITIAL_MEMORY||16777216;if(5242880<=W||Q(\\\"INITIAL_MEMORY should be larger than STACK_SIZE, was \\\"+W+\\\"! (STACK_SIZE=5242880)\\\"),y)M=s.wasmMemory;else if(s.wasmMemory)M=s.wasmMemory;else if(!((M=new WebAssembly.Memory({initial:W/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw P(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),v&&P(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\\\"),Error(\\\"bad memory\\\");B(),W=M.buffer.byteLength;var z,L=[],F=[],H=[],N=0;function K(){return T||0<N}function Y(){var e=s.preRun.shift();L.unshift(e)}var V,q=0,X=null,J=null;function Q(e){throw s.onAbort&&s.onAbort(e),P(e=\\\"Aborted(\\\"+e+\\\")\\\"),j=!0,R=1,e=new WebAssembly.RuntimeError(e+\\\". Build with -sASSERTIONS for more info.\\\"),l(e),e}function Z(e){return e.startsWith(\\\"data:application/octet-stream;base64,\\\")}function ee(e){try{if(e==V&&A)return new Uint8Array(A);if(d)return d(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){Q(e)}}function te(e,t,n){return function(e){if(!A&&(m||b)){if(\\\"function\\\"==typeof fetch&&!e.startsWith(\\\"file://\\\"))return fetch(e,{credentials:\\\"same-origin\\\"}).then((t=>{if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+e+\\\"'\\\";return t.arrayBuffer()})).catch((()=>ee(e)));if(p)return new Promise(((t,n)=>{p(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>ee(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{P(\\\"failed to asynchronously prepare wasm: \\\"+e),Q(e)}))}function ne(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function re(e){e.terminate(),e.onmessage=()=>{}}function ae(e){(e=de.Ga[e])||Q(),de.gb(e)}function oe(e){var t=de.ab();if(!t)return 6;de.Ja.push(t),de.Ga[e.Ia]=t,t.Ia=e.Ia;var n={cmd:\\\"run\\\",start_routine:e.hb,arg:e.Za,pthread_ptr:e.Ia};return v&&t.unref(),t.postMessage(n,e.nb),0}Z(V=\\\"ort-wasm-threaded.wasm\\\")||(V=_(V));var ie=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function se(e,t,n){var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&ie)return ie.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function ue(e,t){return(e>>>=0)?se(r(),e,t):\\\"\\\"}function le(e){if(y)return Ne(1,1,e);R=e,K()||(de.ib(),s.onExit&&s.onExit(e),j=!0),g(e,new ne(e))}function ce(e){if(R=e,y)throw he(e),\\\"unwind\\\";le(e)}function pe(e){e instanceof ne||\\\"unwind\\\"==e||g(1,e)}var de={Ma:[],Ja:[],Ua:[],Ga:{},Qa:function(){y&&de.bb()},qb:function(){},bb:function(){de.receiveObjectTransfer=de.fb,de.threadInitTLS=de.Ta,de.setExitStatus=de.Sa,T=!1},Sa:function(e){R=e},sb:[\\\"$terminateWorker\\\"],ib:function(){for(var e of de.Ja)re(e);for(e of de.Ma)re(e);de.Ma=[],de.Ja=[],de.Ga=[]},gb:function(e){var t=e.Ia;delete de.Ga[t],de.Ma.push(e),de.Ja.splice(de.Ja.indexOf(e),1),e.Ia=0,dt(t)},fb:function(){},Ta:function(){de.Ua.forEach((e=>e()))},eb:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(e.Ia&&(de.$a=e.Ia),n.targetThread&&n.targetThread!=ut()){var a=de.Ga[n.rb];a?a.postMessage(n,n.transferList):P('Internal error! Worker sent a message \\\"'+r+'\\\" to target pthread '+n.targetThread+\\\", but that thread no longer exists!\\\")}else\\\"checkMailbox\\\"===r?De():\\\"spawnThread\\\"===r?oe(n):\\\"cleanupThread\\\"===r?ae(n.thread):\\\"killThread\\\"===r?(n=n.thread,r=de.Ga[n],delete de.Ga[n],re(r),dt(n),de.Ja.splice(de.Ja.indexOf(r),1),r.Ia=0):\\\"cancelThread\\\"===r?de.Ga[n.thread].postMessage({cmd:\\\"cancel\\\"}):\\\"loaded\\\"===r?(e.loaded=!0,t(e)):\\\"print\\\"===r?E(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"printErr\\\"===r?P(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"alert\\\"===r?alert(\\\"Thread \\\"+n.threadId+\\\": \\\"+n.text):\\\"setimmediate\\\"===n.target?e.postMessage(n):\\\"callHandler\\\"===r?s[n.handler](...n.args):r&&P(\\\"worker sent an unknown command \\\"+r);de.$a=void 0},e.onerror=e=>{throw P(\\\"worker sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message),e},v&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})));var n,r=[];for(n of[\\\"onExit\\\",\\\"onAbort\\\",\\\"print\\\",\\\"printErr\\\"])s.hasOwnProperty(n)&&r.push(n);e.postMessage({cmd:\\\"load\\\",handlers:r,urlOrBlob:s.mainScriptUrlOrBlob||_scriptDir,wasmMemory:M,wasmModule:x})})),cb:function(e){e()},Ya:function(){var e=_(\\\"ort-wasm-threaded.worker.js\\\");e=new Worker(e),de.Ma.push(e)},ab:function(){return 0==de.Ma.length&&(de.Ya(),de.eb(de.Ma[0])),de.Ma.pop()}};function fe(e){for(;0<e.length;)e.shift()(s)}function he(e){if(y)return Ne(2,0,e);ce(e)}function ge(e){this.Pa=e-24,this.Xa=function(e){o()[this.Pa+4>>2>>>0]=e},this.Wa=function(e){o()[this.Pa+8>>2>>>0]=e},this.Qa=function(e,t){this.Va(),this.Xa(e),this.Wa(t)},this.Va=function(){o()[this.Pa+16>>2>>>0]=0}}function me(e,t,n,r){return y?Ne(3,1,e,t,n,r):be(e,t,n,r)}function be(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return P(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;var a=[];return y&&0===a.length?me(e,t,n,r):(e={hb:n,Ia:e,Za:r,nb:a},y?(e.pb=\\\"spawnThread\\\",postMessage(e,a),0):oe(e))}function ve(e,t,n){return y?Ne(4,1,e,t,n):0}function ye(e,t){if(y)return Ne(5,1,e,t)}function we(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t}function _e(e,t,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-a}function $e(e,t,n){return _e(e,r(),t,n)}function Se(e,t){if(y)return Ne(6,1,e,t)}function Oe(e,t,n){if(y)return Ne(7,1,e,t,n)}function Ce(e,t,n){return y?Ne(8,1,e,t,n):0}function Ae(e,t){if(y)return Ne(9,1,e,t)}function Ee(e,t,n){if(y)return Ne(10,1,e,t,n)}function Pe(e,t,n,r){if(y)return Ne(11,1,e,t,n,r)}function Te(e,t,n,r){if(y)return Ne(12,1,e,t,n,r)}function Me(e,t,n,r){if(y)return Ne(13,1,e,t,n,r)}function xe(e){if(y)return Ne(14,1,e)}function Re(e,t){if(y)return Ne(15,1,e,t)}function Ie(e,t,n){if(y)return Ne(16,1,e,t,n)}function ke(e){\\\"function\\\"==typeof Atomics.ob&&(Atomics.ob(a(),e>>2,e).value.then(De),e+=128,Atomics.store(a(),e>>2,1))}function De(){var e=ut();e&&(ke(e),function(e){if(!j)try{if(gt(),!K())try{y?ht(R):ce(R)}catch(e){pe(e)}}catch(e){pe(e)}}())}function Ue(e){return o()[e>>>2]+4294967296*a()[e+4>>>2]}function Ge(e){return 0==e%4&&(0!=e%100||0==e%400)}s.PThread=de,s.establishStackSpace=function(){var e=ut(),t=a()[e+52>>2>>>0];mt(t,t-(e=a()[e+56>>2>>>0])),vt(t)},s.invokeEntryPoint=function(e,t){e=z.get(e)(t),K()?de.Sa(e):ht(e)},s.__emscripten_thread_mailbox_await=ke,s.checkMailbox=De;var je,Be=[0,31,60,91,121,152,182,213,244,274,305,335],We=[0,31,59,90,120,151,181,212,243,273,304,334];function ze(e){return(Ge(e.getFullYear())?Be:We)[e.getMonth()]+e.getDate()-1}function Le(e,t,n,r,a,o,i){return y?Ne(17,1,e,t,n,r,a,o,i):-52}function Fe(e,t,n,r,a,o){if(y)return Ne(18,1,e,t,n,r,a,o)}function He(e){var t=we(e)+1,n=lt(t);return n&&$e(e,n,t),n}function Ne(e,t){var n=arguments.length-2,r=arguments;return function(e){var t=bt();return e=e(),vt(t),e}((()=>{for(var a=yt(8*n),o=a>>3,s=0;s<n;s++){var u=r[2+s];i()[o+s>>>0]=u}return pt(e,n,a,t)}))}je=v?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Ke,Ye=[],Ve={};function qe(){if(!Ke){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:h||\\\"./this.program\\\"};for(e in Ve)void 0===Ve[e]?delete t[e]:t[e]=Ve[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);Ke=n}return Ke}function Xe(e,n){if(y)return Ne(19,1,e,n);var r=0;return qe().forEach((function(a,i){var s=n+r;for(i=o()[e+4*i>>2>>>0]=s,s=0;s<a.length;++s)t()[i++>>0>>>0]=a.charCodeAt(s);t()[i>>0>>>0]=0,r+=a.length+1})),0}function Je(e,t){if(y)return Ne(20,1,e,t);var n=qe();o()[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),o()[t>>2>>>0]=r,0}function Qe(e){return y?Ne(21,1,e):52}function Ze(e,t,n,r){return y?Ne(22,1,e,t,n,r):52}function et(e,t,n,r,a){return y?Ne(23,1,e,t,n,r,a):70}var tt=[null,[],[]];function nt(e,t,n,a){if(y)return Ne(24,1,e,t,n,a);for(var i=0,s=0;s<n;s++){var u=o()[t>>2>>>0],l=o()[t+4>>2>>>0];t+=8;for(var c=0;c<l;c++){var p=r()[u+c>>>0],d=tt[e];0===p||10===p?((1===e?E:P)(se(d,0)),d.length=0):d.push(p)}i+=l}return o()[a>>2>>>0]=i,0}var rt=[31,29,31,30,31,30,31,31,30,31,30,31],at=[31,28,31,30,31,30,31,31,30,31,30,31];function ot(e,n,r,o){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function s(e,t){return i(e,t,\\\"0\\\")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function l(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var t=e.Ka;for(e=new Date(new Date(e.La+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Ge(e.getFullYear())?rt:at)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=l(new Date(e.getFullYear(),0,4)),n=l(n),0>=u(t,e)?0>=u(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var p=a()[o+40>>2>>>0];for(var d in o={lb:a()[o>>2>>>0],kb:a()[o+4>>2>>>0],Na:a()[o+8>>2>>>0],Ra:a()[o+12>>2>>>0],Oa:a()[o+16>>2>>>0],La:a()[o+20>>2>>>0],Ha:a()[o+24>>2>>>0],Ka:a()[o+28>>2>>>0],tb:a()[o+32>>2>>>0],jb:a()[o+36>>2>>>0],mb:p?ue(p):\\\"\\\"},r=ue(r),p={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),p[d]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),h=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in p={\\\"%a\\\":function(e){return f[e.Ha].substring(0,3)},\\\"%A\\\":function(e){return f[e.Ha]},\\\"%b\\\":function(e){return h[e.Oa].substring(0,3)},\\\"%B\\\":function(e){return h[e.Oa]},\\\"%C\\\":function(e){return s((e.La+1900)/100|0,2)},\\\"%d\\\":function(e){return s(e.Ra,2)},\\\"%e\\\":function(e){return i(e.Ra,2,\\\" \\\")},\\\"%g\\\":function(e){return c(e).toString().substring(2)},\\\"%G\\\":function(e){return c(e)},\\\"%H\\\":function(e){return s(e.Na,2)},\\\"%I\\\":function(e){return 0==(e=e.Na)?e=12:12<e&&(e-=12),s(e,2)},\\\"%j\\\":function(e){for(var t=0,n=0;n<=e.Oa-1;t+=(Ge(e.La+1900)?rt:at)[n++]);return s(e.Ra+t,3)},\\\"%m\\\":function(e){return s(e.Oa+1,2)},\\\"%M\\\":function(e){return s(e.kb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.Na&&12>e.Na?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return s(e.lb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.Ha||7},\\\"%U\\\":function(e){return s(Math.floor((e.Ka+7-e.Ha)/7),2)},\\\"%V\\\":function(e){var t=Math.floor((e.Ka+7-(e.Ha+6)%7)/7);if(2>=(e.Ha+371-e.Ka-2)%7&&t++,t)53==t&&(4==(n=(e.Ha+371-e.Ka)%7)||3==n&&Ge(e.La)||(t=1));else{t=52;var n=(e.Ha+7-e.Ka-1)%7;(4==n||5==n&&Ge(e.La%400-1))&&t++}return s(t,2)},\\\"%w\\\":function(e){return e.Ha},\\\"%W\\\":function(e){return s(Math.floor((e.Ka+7-(e.Ha+6)%7)/7),2)},\\\"%y\\\":function(e){return(e.La+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.La+1900},\\\"%z\\\":function(e){var t=0<=(e=e.jb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.mb},\\\"%%\\\":function(){return\\\"%\\\"}},r=r.replace(/%%/g,\\\"\\\\0\\\\0\\\"),p)r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),p[d](o)));return d=function(e){var t=Array(we(e)+1);return _e(e,t,0,t.length),t}(r=r.replace(/\\\\0\\\\0/g,\\\"%\\\")),d.length>n?0:(function(e,n){t().set(e,n>>>0)}(d,e),d.length-1)}de.Qa();var it=[null,le,he,me,ve,ye,Se,Oe,Ce,Ae,Ee,Pe,Te,Me,xe,Re,Ie,Le,Fe,Xe,Je,Qe,Ze,et,nt],st={b:function(e,t,n){throw new ge(e).Qa(t,n),e},n:function(){Q(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},Q:function(e){ct(e,!b,1,!m),de.Ta()},i:function(e){y?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ae(e)},D:be,f:ve,W:ye,z:Se,B:Oe,q:Ce,U:Ae,L:Ee,T:Pe,k:Te,A:Me,x:xe,V:Re,y:Ie,E:function(){return 131072},m:function(){return!0},t:function(e,t){e==t?setTimeout((()=>De())):y?postMessage({targetThread:e,cmd:\\\"checkMailbox\\\"}):(e=de.Ga[e])&&e.postMessage({cmd:\\\"checkMailbox\\\"})},N:function(){return-1},P:ke,l:function(e){v&&de.Ga[e].ref()},I:function(e,t){e=new Date(1e3*Ue(e)),a()[t>>2>>>0]=e.getUTCSeconds(),a()[t+4>>2>>>0]=e.getUTCMinutes(),a()[t+8>>2>>>0]=e.getUTCHours(),a()[t+12>>2>>>0]=e.getUTCDate(),a()[t+16>>2>>>0]=e.getUTCMonth(),a()[t+20>>2>>>0]=e.getUTCFullYear()-1900,a()[t+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[t+28>>2>>>0]=e},J:function(e,t){e=new Date(1e3*Ue(e)),a()[t>>2>>>0]=e.getSeconds(),a()[t+4>>2>>>0]=e.getMinutes(),a()[t+8>>2>>>0]=e.getHours(),a()[t+12>>2>>>0]=e.getDate(),a()[t+16>>2>>>0]=e.getMonth(),a()[t+20>>2>>>0]=e.getFullYear()-1900,a()[t+24>>2>>>0]=e.getDay();var n=0|ze(e);a()[t+28>>2>>>0]=n,a()[t+36>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),a()[t+32>>2>>>0]=e},K:function(e){var t=new Date(a()[e+20>>2>>>0]+1900,a()[e+16>>2>>>0],a()[e+12>>2>>>0],a()[e+8>>2>>>0],a()[e+4>>2>>>0],a()[e>>2>>>0],0),n=a()[e+32>>2>>>0],r=t.getTimezoneOffset(),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(i,o);return 0>n?a()[e+32>>2>>>0]=Number(o!=i&&s==r):0<n!=(s==r)&&(o=Math.max(i,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),a()[e+24>>2>>>0]=t.getDay(),n=0|ze(t),a()[e+28>>2>>>0]=n,a()[e>>2>>>0]=t.getSeconds(),a()[e+4>>2>>>0]=t.getMinutes(),a()[e+8>>2>>>0]=t.getHours(),a()[e+12>>2>>>0]=t.getDate(),a()[e+16>>2>>>0]=t.getMonth(),a()[e+20>>2>>>0]=t.getYear(),t.getTime()/1e3|0},G:Le,H:Fe,s:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}var i=(new Date).getFullYear(),s=new Date(i,0,1),u=new Date(i,6,1);i=s.getTimezoneOffset();var l=u.getTimezoneOffset(),c=Math.max(i,l);o()[e>>2>>>0]=60*c,a()[t>>2>>>0]=Number(i!=l),e=r(s),t=r(u),e=He(e),t=He(t),l<i?(o()[n>>2>>>0]=e,o()[n+4>>2>>>0]=t):(o()[n>>2>>>0]=t,o()[n+4>>2>>>0]=e)},d:function(){Q(\\\"\\\")},O:function(){Q(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},j:function(){},g:function(){return Date.now()},X:function(){throw N+=1,\\\"unwind\\\"},u:function(){return 4294901760},c:je,v:function(){return v?n(993).cpus().length:navigator.hardwareConcurrency},M:function(e,t,n){Ye.length=t,n>>=3;for(var r=0;r<t;r++)Ye[r]=i()[n+r>>>0];return it[e].apply(null,Ye)},r:function(e){var t=r().length;if((e>>>=0)<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var a=t*(1+.2/n);a=Math.min(a,e+100663296);var o=Math,i=o.min;a=Math.max(e,a),a+=(65536-a%65536)%65536;e:{var s=M.buffer;try{M.grow(i.call(o,4294901760,a)-s.byteLength+65535>>>16),B();var u=1;break e}catch(e){}u=void 0}if(u)return!0}return!1},R:Xe,S:Je,C:ce,e:Qe,h:Ze,o:et,w:nt,a:M||s.wasmMemory,F:ot,p:function(e,t,n,r){return ot(e,t,n,r)}};!function(){function e(e,t){return e=e.exports,s.asm=e,de.Ua.push(s.asm.ua),z=s.asm.va,F.unshift(s.asm.Y),x=t,de.cb((()=>{if(q--,s.monitorRunDependencies&&s.monitorRunDependencies(q),0==q&&(null!==X&&(clearInterval(X),X=null),J)){var e=J;J=null,e()}})),e}var t={a:st};if(q++,s.monitorRunDependencies&&s.monitorRunDependencies(q),s.instantiateWasm)try{return s.instantiateWasm(t,e)}catch(e){P(\\\"Module.instantiateWasm callback failed with error: \\\"+e),l(e)}(function(e,t){var n=V;return A||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Z(n)||n.startsWith(\\\"file://\\\")||v||\\\"function\\\"!=typeof fetch?te(n,e,t):fetch(n,{credentials:\\\"same-origin\\\"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return P(\\\"wasm streaming compile failed: \\\"+r),P(\\\"falling back to ArrayBuffer instantiation\\\"),te(n,e,t)}))))})(t,(function(t){e(t.instance,t.module)})).catch(l)}(),s._OrtInit=function(){return(s._OrtInit=s.asm.Z).apply(null,arguments)},s._OrtCreateSessionOptions=function(){return(s._OrtCreateSessionOptions=s.asm._).apply(null,arguments)},s._OrtAppendExecutionProvider=function(){return(s._OrtAppendExecutionProvider=s.asm.$).apply(null,arguments)},s._OrtAddSessionConfigEntry=function(){return(s._OrtAddSessionConfigEntry=s.asm.aa).apply(null,arguments)},s._OrtReleaseSessionOptions=function(){return(s._OrtReleaseSessionOptions=s.asm.ba).apply(null,arguments)},s._OrtCreateSession=function(){return(s._OrtCreateSession=s.asm.ca).apply(null,arguments)},s._OrtReleaseSession=function(){return(s._OrtReleaseSession=s.asm.da).apply(null,arguments)},s._OrtGetInputCount=function(){return(s._OrtGetInputCount=s.asm.ea).apply(null,arguments)},s._OrtGetOutputCount=function(){return(s._OrtGetOutputCount=s.asm.fa).apply(null,arguments)},s._OrtGetInputName=function(){return(s._OrtGetInputName=s.asm.ga).apply(null,arguments)},s._OrtGetOutputName=function(){return(s._OrtGetOutputName=s.asm.ha).apply(null,arguments)},s._OrtFree=function(){return(s._OrtFree=s.asm.ia).apply(null,arguments)},s._OrtCreateTensor=function(){return(s._OrtCreateTensor=s.asm.ja).apply(null,arguments)},s._OrtGetTensorData=function(){return(s._OrtGetTensorData=s.asm.ka).apply(null,arguments)},s._OrtReleaseTensor=function(){return(s._OrtReleaseTensor=s.asm.la).apply(null,arguments)},s._OrtCreateRunOptions=function(){return(s._OrtCreateRunOptions=s.asm.ma).apply(null,arguments)},s._OrtAddRunConfigEntry=function(){return(s._OrtAddRunConfigEntry=s.asm.na).apply(null,arguments)},s._OrtReleaseRunOptions=function(){return(s._OrtReleaseRunOptions=s.asm.oa).apply(null,arguments)},s._OrtRun=function(){return(s._OrtRun=s.asm.pa).apply(null,arguments)},s._OrtEndProfiling=function(){return(s._OrtEndProfiling=s.asm.qa).apply(null,arguments)};var ut=s._pthread_self=function(){return(ut=s._pthread_self=s.asm.ra).apply(null,arguments)},lt=s._malloc=function(){return(lt=s._malloc=s.asm.sa).apply(null,arguments)};s._free=function(){return(s._free=s.asm.ta).apply(null,arguments)},s.__emscripten_tls_init=function(){return(s.__emscripten_tls_init=s.asm.ua).apply(null,arguments)};var ct=s.__emscripten_thread_init=function(){return(ct=s.__emscripten_thread_init=s.asm.wa).apply(null,arguments)};function pt(){return(pt=s.asm.ya).apply(null,arguments)}function dt(){return(dt=s.asm.za).apply(null,arguments)}s.__emscripten_thread_crashed=function(){return(s.__emscripten_thread_crashed=s.asm.xa).apply(null,arguments)};var ft,ht=s.__emscripten_thread_exit=function(){return(ht=s.__emscripten_thread_exit=s.asm.Aa).apply(null,arguments)},gt=s.__emscripten_check_mailbox=function(){return(gt=s.__emscripten_check_mailbox=s.asm.Ba).apply(null,arguments)};function mt(){return(mt=s.asm.Ca).apply(null,arguments)}function bt(){return(bt=s.asm.Da).apply(null,arguments)}function vt(){return(vt=s.asm.Ea).apply(null,arguments)}function yt(){return(yt=s.asm.Fa).apply(null,arguments)}function wt(){function e(){if(!ft&&(ft=!0,s.calledRun=!0,!j)&&(y||fe(F),u(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!y)){if(s.postRun)for(\\\"function\\\"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;){var e=s.postRun.shift();H.unshift(e)}fe(H)}}if(!(0<q))if(y)u(s),y||fe(F),startWorker(s);else{if(s.preRun)for(\\\"function\\\"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)Y();fe(L),0<q||(s.setStatus?(s.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){s.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(s.keepRuntimeAlive=K,s.wasmMemory=M,s.stackAlloc=yt,s.stackSave=bt,s.stackRestore=vt,s.UTF8ToString=ue,s.stringToUTF8=$e,s.lengthBytesUTF8=we,s.ExitStatus=ne,s.PThread=de,J=function e(){ft||wt(),ft||(J=e)},s.preInit)for(\\\"function\\\"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return wt(),e.ready});e.exports=r},932:(e,t,n)=>{var _scriptDir,r=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\\\"undefined\\\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){var t,r,a;t||(t=void 0!==e?e:{}),t.ready=new Promise(((e,t)=>{r=e,a=t}));var o,i,s,u=Object.assign({},t),l=\\\"./this.program\\\",c=\\\"object\\\"==typeof window,p=\\\"function\\\"==typeof importScripts,d=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,f=\\\"\\\";if(d){var h=n(384),g=n(908);f=p?g.dirname(f)+\\\"/\\\":__dirname+\\\"/\\\",o=(e,t)=>(e=e.startsWith(\\\"file://\\\")?new URL(e):g.normalize(e),h.readFileSync(e,t?void 0:\\\"utf8\\\")),s=e=>((e=o(e,!0)).buffer||(e=new Uint8Array(e)),e),i=(e,t,n,r=!0)=>{e=e.startsWith(\\\"file://\\\")?new URL(e):g.normalize(e),h.readFile(e,r?void 0:\\\"utf8\\\",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!t.thisProgram&&1<process.argv.length&&(l=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),t.inspect=()=>\\\"[Emscripten Module object]\\\"}else(c||p)&&(p?f=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(f=document.currentScript.src),_scriptDir&&(f=_scriptDir),f=0!==f.indexOf(\\\"blob:\\\")?f.substr(0,f.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",o=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},p&&(s=e=>{var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),i=(e,t,n)=>{var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var m,b=t.print||console.log.bind(console),v=t.printErr||console.warn.bind(console);Object.assign(t,u),u=null,t.thisProgram&&(l=t.thisProgram),t.wasmBinary&&(m=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&k(\\\"no native wasm support detected\\\");var y,w,_,$,S,O=!1;function C(){var e=y.buffer;t.HEAP8=w=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=$=new Int32Array(e),t.HEAPU8=_=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=S=new Uint32Array(e),t.HEAPF32=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var A=[],E=[],P=[];function T(){var e=t.preRun.shift();A.unshift(e)}var M,x=0,R=null,I=null;function k(e){throw t.onAbort&&t.onAbort(e),v(e=\\\"Aborted(\\\"+e+\\\")\\\"),O=!0,e=new WebAssembly.RuntimeError(e+\\\". Build with -sASSERTIONS for more info.\\\"),a(e),e}function D(e){return e.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(!D(M=\\\"ort-wasm.wasm\\\")){var U=M;M=t.locateFile?t.locateFile(U,f):f+U}function G(e){try{if(e==M&&m)return new Uint8Array(m);if(s)return s(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){k(e)}}function j(e,t,n){return function(e){if(!m&&(c||p)){if(\\\"function\\\"==typeof fetch&&!e.startsWith(\\\"file://\\\"))return fetch(e,{credentials:\\\"same-origin\\\"}).then((t=>{if(!t.ok)throw\\\"failed to load wasm binary file at '\\\"+e+\\\"'\\\";return t.arrayBuffer()})).catch((()=>G(e)));if(i)return new Promise(((t,n)=>{i(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>G(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then((e=>e)).then(n,(e=>{v(\\\"failed to asynchronously prepare wasm: \\\"+e),k(e)}))}function B(e){for(;0<e.length;)e.shift()(t)}function W(e){this.pa=e-24,this.ua=function(e){S[this.pa+4>>2>>>0]=e},this.ta=function(e){S[this.pa+8>>2>>>0]=e},this.ra=function(e,t){this.sa(),this.ua(e),this.ta(t)},this.sa=function(){S[this.pa+16>>2>>>0]=0}}var z=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function L(e,t,n){var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&z)return z.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var a=e[t++];if(128&a){var o=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function F(e,t){return(e>>>=0)?L(_,e,t):\\\"\\\"}function H(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t}function N(e,t,n,r){if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-a}function K(e,t,n){return N(e,_,t,n)}function Y(e){return 0==e%4&&(0!=e%100||0==e%400)}var V=[0,31,60,91,121,152,182,213,244,274,305,335],q=[0,31,59,90,120,151,181,212,243,273,304,334];function X(e){return(Y(e.getFullYear())?V:q)[e.getMonth()]+e.getDate()-1}function J(e){var t=H(e)+1,n=se(t);return n&&K(e,n,t),n}var Q={};function Z(){if(!ee){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:l||\\\"./this.program\\\"};for(e in Q)void 0===Q[e]?delete t[e]:t[e]=Q[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);ee=n}return ee}var ee,te=[null,[],[]],ne=[31,29,31,30,31,30,31,31,30,31,30,31],re=[31,28,31,30,31,30,31,31,30,31,30,31];function ae(e,t,n,r){function a(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function o(e,t){return a(e,t,\\\"0\\\")}function i(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.la;for(e=new Date(new Date(e.ma+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Y(e.getFullYear())?ne:re)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=s(new Date(e.getFullYear(),0,4)),n=s(n),0>=i(t,e)?0>=i(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=$[r+40>>2>>>0];for(var c in r={xa:$[r>>2>>>0],wa:$[r+4>>2>>>0],na:$[r+8>>2>>>0],qa:$[r+12>>2>>>0],oa:$[r+16>>2>>>0],ma:$[r+20>>2>>>0],ha:$[r+24>>2>>>0],la:$[r+28>>2>>>0],za:$[r+32>>2>>>0],va:$[r+36>>2>>>0],ya:l?F(l):\\\"\\\"},n=F(n),l={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(c,\\\"g\\\"),l[c]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(c in l={\\\"%a\\\":function(e){return p[e.ha].substring(0,3)},\\\"%A\\\":function(e){return p[e.ha]},\\\"%b\\\":function(e){return d[e.oa].substring(0,3)},\\\"%B\\\":function(e){return d[e.oa]},\\\"%C\\\":function(e){return o((e.ma+1900)/100|0,2)},\\\"%d\\\":function(e){return o(e.qa,2)},\\\"%e\\\":function(e){return a(e.qa,2,\\\" \\\")},\\\"%g\\\":function(e){return u(e).toString().substring(2)},\\\"%G\\\":function(e){return u(e)},\\\"%H\\\":function(e){return o(e.na,2)},\\\"%I\\\":function(e){return 0==(e=e.na)?e=12:12<e&&(e-=12),o(e,2)},\\\"%j\\\":function(e){for(var t=0,n=0;n<=e.oa-1;t+=(Y(e.ma+1900)?ne:re)[n++]);return o(e.qa+t,3)},\\\"%m\\\":function(e){return o(e.oa+1,2)},\\\"%M\\\":function(e){return o(e.wa,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.na&&12>e.na?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return o(e.xa,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.ha||7},\\\"%U\\\":function(e){return o(Math.floor((e.la+7-e.ha)/7),2)},\\\"%V\\\":function(e){var t=Math.floor((e.la+7-(e.ha+6)%7)/7);if(2>=(e.ha+371-e.la-2)%7&&t++,t)53==t&&(4==(n=(e.ha+371-e.la)%7)||3==n&&Y(e.ma)||(t=1));else{t=52;var n=(e.ha+7-e.la-1)%7;(4==n||5==n&&Y(e.ma%400-1))&&t++}return o(t,2)},\\\"%w\\\":function(e){return e.ha},\\\"%W\\\":function(e){return o(Math.floor((e.la+7-(e.ha+6)%7)/7),2)},\\\"%y\\\":function(e){return(e.ma+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.ma+1900},\\\"%z\\\":function(e){var t=0<=(e=e.va);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.ya},\\\"%%\\\":function(){return\\\"%\\\"}},n=n.replace(/%%/g,\\\"\\\\0\\\\0\\\"),l)n.includes(c)&&(n=n.replace(new RegExp(c,\\\"g\\\"),l[c](r)));return c=function(e){var t=Array(H(e)+1);return N(e,t,0,t.length),t}(n=n.replace(/\\\\0\\\\0/g,\\\"%\\\")),c.length>t?0:(w.set(c,e>>>0),c.length-1)}var oe={a:function(e,t,n){throw new W(e).ra(t,n),e},j:function(){k(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},d:function(){return 0},K:function(){},u:function(){},w:function(){},m:function(){return 0},I:function(){},E:function(){},H:function(){},h:function(){},v:function(){},s:function(){},J:function(){},t:function(){},i:function(){return!0},B:function(e,t){e=new Date(1e3*(S[e>>>2]+4294967296*$[e+4>>>2])),$[t>>2>>>0]=e.getUTCSeconds(),$[t+4>>2>>>0]=e.getUTCMinutes(),$[t+8>>2>>>0]=e.getUTCHours(),$[t+12>>2>>>0]=e.getUTCDate(),$[t+16>>2>>>0]=e.getUTCMonth(),$[t+20>>2>>>0]=e.getUTCFullYear()-1900,$[t+24>>2>>>0]=e.getUTCDay(),$[t+28>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},C:function(e,t){e=new Date(1e3*(S[e>>>2]+4294967296*$[e+4>>>2])),$[t>>2>>>0]=e.getSeconds(),$[t+4>>2>>>0]=e.getMinutes(),$[t+8>>2>>>0]=e.getHours(),$[t+12>>2>>>0]=e.getDate(),$[t+16>>2>>>0]=e.getMonth(),$[t+20>>2>>>0]=e.getFullYear()-1900,$[t+24>>2>>>0]=e.getDay(),$[t+28>>2>>>0]=0|X(e),$[t+36>>2>>>0]=-60*e.getTimezoneOffset();var n=new Date(e.getFullYear(),6,1).getTimezoneOffset(),r=new Date(e.getFullYear(),0,1).getTimezoneOffset();$[t+32>>2>>>0]=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n))},D:function(e){var t=new Date($[e+20>>2>>>0]+1900,$[e+16>>2>>>0],$[e+12>>2>>>0],$[e+8>>2>>>0],$[e+4>>2>>>0],$[e>>2>>>0],0),n=$[e+32>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),i=Math.min(o,a);return 0>n?$[e+32>>2>>>0]=Number(a!=o&&i==r):0<n!=(i==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?i:a)-r))),$[e+24>>2>>>0]=t.getDay(),$[e+28>>2>>>0]=0|X(t),$[e>>2>>>0]=t.getSeconds(),$[e+4>>2>>>0]=t.getMinutes(),$[e+8>>2>>>0]=t.getHours(),$[e+12>>2>>>0]=t.getDate(),$[e+16>>2>>>0]=t.getMonth(),$[e+20>>2>>>0]=t.getYear(),t.getTime()/1e3|0},y:function(){return-52},z:function(){},o:function(e,t,n){function r(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}var a=(new Date).getFullYear(),o=new Date(a,0,1),i=new Date(a,6,1);a=o.getTimezoneOffset();var s=i.getTimezoneOffset();S[e>>2>>>0]=60*Math.max(a,s),$[t>>2>>>0]=Number(a!=s),e=r(o),t=r(i),e=J(e),t=J(t),s<a?(S[n>>2>>>0]=e,S[n+4>>2>>>0]=t):(S[n>>2>>>0]=t,S[n+4>>2>>>0]=e)},c:function(){k(\\\"\\\")},A:function(){k(\\\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\\\")},f:function(){return Date.now()},p:function(){return 4294901760},b:d?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.now(),x:function(e,t,n){_.copyWithin(e>>>0,t>>>0,t+n>>>0)},n:function(e){var t=_.length;if(4294901760<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var a=Math,o=a.min;r=Math.max(e,r),r+=(65536-r%65536)%65536;e:{var i=y.buffer;try{y.grow(o.call(a,4294901760,r)-i.byteLength+65535>>>16),C();var s=1;break e}catch(e){}s=void 0}if(s)return!0}return!1},F:function(e,t){var n=0;return Z().forEach((function(r,a){var o=t+n;for(a=S[e+4*a>>2>>>0]=o,o=0;o<r.length;++o)w[a++>>0>>>0]=r.charCodeAt(o);w[a>>0>>>0]=0,n+=r.length+1})),0},G:function(e,t){var n=Z();S[e>>2>>>0]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),S[t>>2>>>0]=r,0},e:function(){return 52},g:function(){return 52},k:function(){return 70},q:function(e,t,n,r){for(var a=0,o=0;o<n;o++){var i=S[t>>2>>>0],s=S[t+4>>2>>>0];t+=8;for(var u=0;u<s;u++){var l=_[i+u>>>0],c=te[e];0===l||10===l?((1===e?b:v)(L(c,0)),c.length=0):c.push(l)}a+=s}return S[r>>2>>>0]=a,0},r:ae,l:function(e,t,n,r){return ae(e,t,n,r)}};!function(){function e(e){if(e=e.exports,t.asm=e,y=t.asm.L,C(),E.unshift(t.asm.M),x--,t.monitorRunDependencies&&t.monitorRunDependencies(x),0==x&&(null!==R&&(clearInterval(R),R=null),I)){var n=I;I=null,n()}return e}var n={a:oe};if(x++,t.monitorRunDependencies&&t.monitorRunDependencies(x),t.instantiateWasm)try{return t.instantiateWasm(n,e)}catch(e){v(\\\"Module.instantiateWasm callback failed with error: \\\"+e),a(e)}(function(e,t){var n=M;return m||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||D(n)||n.startsWith(\\\"file://\\\")||d||\\\"function\\\"!=typeof fetch?j(n,e,t):fetch(n,{credentials:\\\"same-origin\\\"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return v(\\\"wasm streaming compile failed: \\\"+r),v(\\\"falling back to ArrayBuffer instantiation\\\"),j(n,e,t)}))))})(n,(function(t){e(t.instance)})).catch(a)}(),t._OrtInit=function(){return(t._OrtInit=t.asm.N).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.O).apply(null,arguments)},t._OrtAppendExecutionProvider=function(){return(t._OrtAppendExecutionProvider=t.asm.P).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Q).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.R).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.S).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.T).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.U).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.V).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.W).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.X).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Y).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Z).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm._).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.$).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.aa).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.ba).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.ca).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.da).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.ea).apply(null,arguments)};var ie,se=t._malloc=function(){return(se=t._malloc=t.asm.fa).apply(null,arguments)};function ue(){return(ue=t.asm.ia).apply(null,arguments)}function le(){return(le=t.asm.ja).apply(null,arguments)}function ce(){return(ce=t.asm.ka).apply(null,arguments)}function pe(){function e(){if(!ie&&(ie=!0,t.calledRun=!0,!O)){if(B(E),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();P.unshift(e)}B(P)}}if(!(0<x)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)T();B(A),0<x||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t._free=function(){return(t._free=t.asm.ga).apply(null,arguments)},t.stackAlloc=ce,t.stackSave=ue,t.stackRestore=le,t.UTF8ToString=F,t.stringToUTF8=K,t.lengthBytesUTF8=H,I=function e(){ie||pe(),ie||(I=e)},t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return pe(),e.ready});e.exports=r},154:e=>{\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={},a=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node;if(a){var r=require(\\\"worker_threads\\\"),t=r.parentPort;t.on(\\\"message\\\",(e=>onmessage({data:e})));var s=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:r.Worker,importScripts:function(e){(0,eval)(s.readFileSync(e,\\\"utf8\\\")+\\\"//# sourceURL=\\\"+e)},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var o=!1,n=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");a?s.writeSync(2,e+\\\"\\\\\\\\n\\\"):console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=(a,r)=>{var t=e.wasmModule;return e.wasmModule=null,r(new WebAssembly.Instance(t,a))},self.onunhandledrejection=e=>{throw e.reason??e},self.onmessage=function a(r){try{if(\\\"load\\\"===r.data.cmd){let s=[];self.onmessage=e=>s.push(e),self.startWorker=r=>{e=r,postMessage({cmd:\\\"loaded\\\"});for(let e of s)a(e);self.onmessage=a},e.wasmModule=r.data.wasmModule;for(const a of r.data.handlers)e[a]=function(){postMessage({cmd:\\\"callHandler\\\",handler:a,args:[...arguments]})};if(e.wasmMemory=r.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof r.data.urlOrBlob)importScripts(r.data.urlOrBlob);else{var t=URL.createObjectURL(r.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e)}else if(\\\"run\\\"===r.data.cmd){e.__emscripten_thread_init(r.data.pthread_ptr,0,0,1),e.__emscripten_thread_mailbox_await(r.data.pthread_ptr),e.establishStackSpace(),e.PThread.receiveObjectTransfer(r.data),e.PThread.threadInitTLS(),o||(o=!0);try{e.invokeEntryPoint(r.data.start_routine,r.data.arg)}catch(e){if(\\\"unwind\\\"!=e)throw e}}else\\\"cancel\\\"===r.data.cmd?e._pthread_self()&&e.__emscripten_thread_exit(-1):\\\"setimmediate\\\"===r.data.target||(\\\"checkMailbox\\\"===r.data.cmd?o&&e.checkMailbox():r.data.cmd&&(n(\\\"worker.js received unknown command \\\"+r.data.cmd),n(r.data)))}catch(a){throw e.__emscripten_thread_crashed&&e.__emscripten_thread_crashed(),a}};\\\\n'},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,n),o.exports}(()=>{\\\"use strict\\\";const e=n(259),t=n(263);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":try{(0,t.initializeWebAssembly)(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(e=>postMessage({type:\\\"init-wasm\\\",err:e})))}catch(e){postMessage({type:\\\"init-wasm\\\",err:e})}break;case\\\"init-ort\\\":try{(0,e.initRuntime)(n.data.in).then((()=>postMessage({type:\\\"init-ort\\\"})),(e=>postMessage({type:\\\"init-ort\\\",err:e}))),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create_allocate\\\":try{const{model:t}=n.data.in,r=(0,e.createSessionAllocate)(t);postMessage({type:\\\"create_allocate\\\",out:r})}catch(e){postMessage({type:\\\"create_allocate\\\",err:e})}break;case\\\"create_finalize\\\":try{const{modeldata:t,options:r}=n.data.in,a=(0,e.createSessionFinalize)(t,r);postMessage({type:\\\"create_finalize\\\",out:a})}catch(e){postMessage({type:\\\"create_finalize\\\",err:e})}break;case\\\"create\\\":try{const{model:t,options:r}=n.data.in,a=(0,e.createSession)(t,r);postMessage({type:\\\"create\\\",out:a})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{const t=n.data.in;(0,e.releaseSession)(t),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{const{sessionId:t,inputIndices:r,inputs:a,outputIndices:o,options:i}=n.data.in;(0,e.run)(t,r,a,o,i).then((t=>{postMessage({type:\\\"run\\\",out:t},(0,e.extractTransferableBuffers)(t))}),(e=>{postMessage({type:\\\"run\\\",err:e})}))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{const t=n.data.in;(0,e.endProfiling)(t),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e={}){function n(){return D.buffer!=C.buffer&&P(),C}function t(){return D.buffer!=C.buffer&&P(),k}function r(){return D.buffer!=C.buffer&&P(),F}function a(){return D.buffer!=C.buffer&&P(),H}function o(){return D.buffer!=C.buffer&&P(),Y}var i,u,s;i||(i=void 0!==e?e:{}),i.ready=new Promise(((e,n)=>{u=e,s=n}));var f,c,l,p=Object.assign({},i),m=\"./this.program\",d=(e,n)=>{throw n},h=\"object\"==typeof window,g=\"function\"==typeof importScripts,y=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,b=i.ENVIRONMENT_IS_PTHREAD||!1,v=\"\";function w(e){return i.locateFile?i.locateFile(e,v):v+e}if(y){var _=require(\"fs\"),O=require(\"path\");let e;v=g?O.dirname(v)+\"/\":__dirname+\"/\",f=(e,n)=>(e=e.startsWith(\"file://\")?new URL(e):O.normalize(e),_.readFileSync(e,n?void 0:\"utf8\")),l=e=>((e=f(e,!0)).buffer||(e=new Uint8Array(e)),e),c=(e,n,t,r=!0)=>{e=e.startsWith(\"file://\")?new URL(e):O.normalize(e),_.readFile(e,r?void 0:\"utf8\",((e,a)=>{e?t(e):n(r?a.buffer:a)}))},!i.thisProgram&&1<process.argv.length&&(m=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),d=(e,n)=>{throw process.exitCode=e,n},i.inspect=()=>\"[Emscripten Module object]\";try{e=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(h||g)&&(g?v=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(v=document.currentScript.src),_scriptDir&&(v=_scriptDir),v=0!==v.indexOf(\"blob:\")?v.substr(0,v.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",y||(f=e=>{var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.send(null),n.responseText},g&&(l=e=>{var n=new XMLHttpRequest;return n.open(\"GET\",e,!1),n.responseType=\"arraybuffer\",n.send(null),new Uint8Array(n.response)}),c=(e,n,t)=>{var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?n(r.response):t()},r.onerror=t,r.send(null)}));y&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var T=console.log.bind(console),M=console.warn.bind(console);y&&(T=(...e)=>_.writeSync(1,e.join(\" \")+\"\\n\"),M=(...e)=>_.writeSync(2,e.join(\" \")+\"\\n\"));var S,A=i.print||T,R=i.printErr||M;Object.assign(i,p),p=null,i.thisProgram&&(m=i.thisProgram),i.quit&&(d=i.quit),i.wasmBinary&&(S=i.wasmBinary);var E=i.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&Z(\"no native wasm support detected\");var D,I,x,C,k,F,H,Y,U=!1;function P(){var e=D.buffer;i.HEAP8=C=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=F=new Int32Array(e),i.HEAPU8=k=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=H=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=Y=new Float64Array(e)}var W=i.INITIAL_MEMORY||16777216;if(5242880<=W||Z(\"INITIAL_MEMORY should be larger than STACK_SIZE, was \"+W+\"! (STACK_SIZE=5242880)\"),b)D=i.wasmMemory;else if(i.wasmMemory)D=i.wasmMemory;else if(!((D=new WebAssembly.Memory({initial:W/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw R(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),y&&R(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)\"),Error(\"bad memory\");P(),W=D.buffer.byteLength;var G,L=[],j=[],N=[],z=0;function B(){return E||0<z}function q(){var e=i.preRun.shift();L.unshift(e)}var J,K=0,X=null,V=null;function Z(e){throw i.onAbort&&i.onAbort(e),R(e=\"Aborted(\"+e+\")\"),U=!0,x=1,e=new WebAssembly.RuntimeError(e+\". Build with -sASSERTIONS for more info.\"),s(e),e}function Q(e){return e.startsWith(\"data:application/octet-stream;base64,\")}function $(e){try{if(e==J&&S)return new Uint8Array(S);if(l)return l(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){Z(e)}}function ee(e,n,t){return function(e){if(!S&&(h||g)){if(\"function\"==typeof fetch&&!e.startsWith(\"file://\"))return fetch(e,{credentials:\"same-origin\"}).then((n=>{if(!n.ok)throw\"failed to load wasm binary file at '\"+e+\"'\";return n.arrayBuffer()})).catch((()=>$(e)));if(c)return new Promise(((n,t)=>{c(e,(e=>n(new Uint8Array(e))),t)}))}return Promise.resolve().then((()=>$(e)))}(e).then((e=>WebAssembly.instantiate(e,n))).then((e=>e)).then(t,(e=>{R(\"failed to asynchronously prepare wasm: \"+e),Z(e)}))}function ne(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function te(e){e.terminate(),e.onmessage=()=>{}}function re(e){(e=le.Ga[e])||Z(),le.gb(e)}function ae(e){var n=le.ab();if(!n)return 6;le.Ja.push(n),le.Ga[e.Ia]=n,n.Ia=e.Ia;var t={cmd:\"run\",start_routine:e.hb,arg:e.Za,pthread_ptr:e.Ia};return y&&n.unref(),n.postMessage(t,e.nb),0}Q(J=\"ort-wasm-threaded.wasm\")||(J=w(J));var oe=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function ie(e,n,t){var r=(n>>>=0)+t;for(t=n;e[t]&&!(t>=r);)++t;if(16<t-n&&e.buffer&&oe)return oe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(n,t):e.subarray(n,t));for(r=\"\";n<t;){var a=e[n++];if(128&a){var o=63&e[n++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|o);else{var i=63&e[n++];65536>(a=224==(240&a)?(15&a)<<12|o<<6|i:(7&a)<<18|o<<12|i<<6|63&e[n++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r}function ue(e,n){return(e>>>=0)?ie(t(),e,n):\"\"}function se(e){if(b)return ze(1,1,e);x=e,B()||(le.ib(),i.onExit&&i.onExit(e),U=!0),d(e,new ne(e))}function fe(e){if(x=e,b)throw me(e),\"unwind\";se(e)}function ce(e){e instanceof ne||\"unwind\"==e||d(1,e)}var le={Ma:[],Ja:[],Ua:[],Ga:{},Qa:function(){b&&le.bb()},qb:function(){},bb:function(){le.receiveObjectTransfer=le.fb,le.threadInitTLS=le.Ta,le.setExitStatus=le.Sa,E=!1},Sa:function(e){x=e},sb:[\"$terminateWorker\"],ib:function(){for(var e of le.Ja)te(e);for(e of le.Ma)te(e);le.Ma=[],le.Ja=[],le.Ga=[]},gb:function(e){var n=e.Ia;delete le.Ga[n],le.Ma.push(e),le.Ja.splice(le.Ja.indexOf(e),1),e.Ia=0,pn(n)},fb:function(){},Ta:function(){le.Ua.forEach((e=>e()))},eb:e=>new Promise((n=>{e.onmessage=t=>{var r=(t=t.data).cmd;if(e.Ia&&(le.$a=e.Ia),t.targetThread&&t.targetThread!=sn()){var a=le.Ga[t.rb];a?a.postMessage(t,t.transferList):R('Internal error! Worker sent a message \"'+r+'\" to target pthread '+t.targetThread+\", but that thread no longer exists!\")}else\"checkMailbox\"===r?Fe():\"spawnThread\"===r?ae(t):\"cleanupThread\"===r?re(t.thread):\"killThread\"===r?(t=t.thread,r=le.Ga[t],delete le.Ga[t],te(r),pn(t),le.Ja.splice(le.Ja.indexOf(r),1),r.Ia=0):\"cancelThread\"===r?le.Ga[t.thread].postMessage({cmd:\"cancel\"}):\"loaded\"===r?(e.loaded=!0,n(e)):\"print\"===r?A(\"Thread \"+t.threadId+\": \"+t.text):\"printErr\"===r?R(\"Thread \"+t.threadId+\": \"+t.text):\"alert\"===r?alert(\"Thread \"+t.threadId+\": \"+t.text):\"setimmediate\"===t.target?e.postMessage(t):\"callHandler\"===r?i[t.handler](...t.args):r&&R(\"worker sent an unknown command \"+r);le.$a=void 0},e.onerror=e=>{throw R(\"worker sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message),e},y&&(e.on(\"message\",(function(n){e.onmessage({data:n})})),e.on(\"error\",(function(n){e.onerror(n)})));var t,r=[];for(t of[\"onExit\",\"onAbort\",\"print\",\"printErr\"])i.hasOwnProperty(t)&&r.push(t);e.postMessage({cmd:\"load\",handlers:r,urlOrBlob:i.mainScriptUrlOrBlob||_scriptDir,wasmMemory:D,wasmModule:I})})),cb:function(e){e()},Ya:function(){var e=w(\"ort-wasm-threaded.worker.js\");e=new Worker(e),le.Ma.push(e)},ab:function(){return 0==le.Ma.length&&(le.Ya(),le.eb(le.Ma[0])),le.Ma.pop()}};function pe(e){for(;0<e.length;)e.shift()(i)}function me(e){if(b)return ze(2,0,e);fe(e)}function de(e){this.Pa=e-24,this.Xa=function(e){a()[this.Pa+4>>2>>>0]=e},this.Wa=function(e){a()[this.Pa+8>>2>>>0]=e},this.Qa=function(e,n){this.Va(),this.Xa(e),this.Wa(n)},this.Va=function(){a()[this.Pa+16>>2>>>0]=0}}function he(e,n,t,r){return b?ze(3,1,e,n,t,r):ge(e,n,t,r)}function ge(e,n,t,r){if(\"undefined\"==typeof SharedArrayBuffer)return R(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;var a=[];return b&&0===a.length?he(e,n,t,r):(e={hb:t,Ia:e,Za:r,nb:a},b?(e.pb=\"spawnThread\",postMessage(e,a),0):ae(e))}function ye(e,n,t){return b?ze(4,1,e,n,t):0}function be(e,n){if(b)return ze(5,1,e,n)}function ve(e){for(var n=0,t=0;t<e.length;++t){var r=e.charCodeAt(t);127>=r?n++:2047>=r?n+=2:55296<=r&&57343>=r?(n+=4,++t):n+=3}return n}function we(e,n,t,r){if(!(0<r))return 0;var a=t>>>=0;r=t+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(t>=r)break;n[t++>>>0]=i}else{if(2047>=i){if(t+1>=r)break;n[t++>>>0]=192|i>>6}else{if(65535>=i){if(t+2>=r)break;n[t++>>>0]=224|i>>12}else{if(t+3>=r)break;n[t++>>>0]=240|i>>18,n[t++>>>0]=128|i>>12&63}n[t++>>>0]=128|i>>6&63}n[t++>>>0]=128|63&i}}return n[t>>>0]=0,t-a}function _e(e,n,r){return we(e,t(),n,r)}function Oe(e,n){if(b)return ze(6,1,e,n)}function Te(e,n,t){if(b)return ze(7,1,e,n,t)}function Me(e,n,t){return b?ze(8,1,e,n,t):0}function Se(e,n){if(b)return ze(9,1,e,n)}function Ae(e,n,t){if(b)return ze(10,1,e,n,t)}function Re(e,n,t,r){if(b)return ze(11,1,e,n,t,r)}function Ee(e,n,t,r){if(b)return ze(12,1,e,n,t,r)}function De(e,n,t,r){if(b)return ze(13,1,e,n,t,r)}function Ie(e){if(b)return ze(14,1,e)}function xe(e,n){if(b)return ze(15,1,e,n)}function Ce(e,n,t){if(b)return ze(16,1,e,n,t)}function ke(e){\"function\"==typeof Atomics.ob&&(Atomics.ob(r(),e>>2,e).value.then(Fe),e+=128,Atomics.store(r(),e>>2,1))}function Fe(){var e=sn();e&&(ke(e),function(e){if(!U)try{if(hn(),!B())try{b?dn(x):fe(x)}catch(e){ce(e)}}catch(e){ce(e)}}())}function He(e){return a()[e>>>2]+4294967296*r()[e+4>>>2]}function Ye(e){return 0==e%4&&(0!=e%100||0==e%400)}i.PThread=le,i.establishStackSpace=function(){var e=sn(),n=r()[e+52>>2>>>0];gn(n,n-(e=r()[e+56>>2>>>0])),bn(n)},i.invokeEntryPoint=function(e,n){e=G.get(e)(n),B()?le.Sa(e):dn(e)},i.__emscripten_thread_mailbox_await=ke,i.checkMailbox=Fe;var Ue,Pe=[0,31,60,91,121,152,182,213,244,274,305,335],We=[0,31,59,90,120,151,181,212,243,273,304,334];function Ge(e){return(Ye(e.getFullYear())?Pe:We)[e.getMonth()]+e.getDate()-1}function Le(e,n,t,r,a,o,i){return b?ze(17,1,e,n,t,r,a,o,i):-52}function je(e,n,t,r,a,o){if(b)return ze(18,1,e,n,t,r,a,o)}function Ne(e){var n=ve(e)+1,t=fn(n);return t&&_e(e,t,n),t}function ze(e,n){var t=arguments.length-2,r=arguments;return function(e){var n=yn();return e=e(),bn(n),e}((()=>{for(var a=vn(8*t),i=a>>3,u=0;u<t;u++){var s=r[2+u];o()[i+u>>>0]=s}return ln(e,t,a,n)}))}Ue=y?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Be,qe=[],Je={};function Ke(){if(!Be){var e,n={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:m||\"./this.program\"};for(e in Je)void 0===Je[e]?delete n[e]:n[e]=Je[e];var t=[];for(e in n)t.push(e+\"=\"+n[e]);Be=t}return Be}function Xe(e,t){if(b)return ze(19,1,e,t);var r=0;return Ke().forEach((function(o,i){var u=t+r;for(i=a()[e+4*i>>2>>>0]=u,u=0;u<o.length;++u)n()[i++>>0>>>0]=o.charCodeAt(u);n()[i>>0>>>0]=0,r+=o.length+1})),0}function Ve(e,n){if(b)return ze(20,1,e,n);var t=Ke();a()[e>>2>>>0]=t.length;var r=0;return t.forEach((function(e){r+=e.length+1})),a()[n>>2>>>0]=r,0}function Ze(e){return b?ze(21,1,e):52}function Qe(e,n,t,r){return b?ze(22,1,e,n,t,r):52}function $e(e,n,t,r,a){return b?ze(23,1,e,n,t,r,a):70}var en=[null,[],[]];function nn(e,n,r,o){if(b)return ze(24,1,e,n,r,o);for(var i=0,u=0;u<r;u++){var s=a()[n>>2>>>0],f=a()[n+4>>2>>>0];n+=8;for(var c=0;c<f;c++){var l=t()[s+c>>>0],p=en[e];0===l||10===l?((1===e?A:R)(ie(p,0)),p.length=0):p.push(l)}i+=f}return a()[o>>2>>>0]=i,0}var tn=[31,29,31,30,31,30,31,31,30,31,30,31],rn=[31,28,31,30,31,30,31,31,30,31,30,31];function an(e,t,a,o){function i(e,n,t){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<n;)e=t[0]+e;return e}function u(e,n){return i(e,n,\"0\")}function s(e,n){function t(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=t(e.getFullYear()-n.getFullYear()))&&0===(r=t(e.getMonth()-n.getMonth()))&&(r=t(e.getDate()-n.getDate())),r}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var n=e.Ka;for(e=new Date(new Date(e.La+1900,0,1).getTime());0<n;){var t=e.getMonth(),r=(Ye(e.getFullYear())?tn:rn)[t];if(!(n>r-e.getDate())){e.setDate(e.getDate()+n);break}n-=r-e.getDate()+1,e.setDate(1),11>t?e.setMonth(t+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return t=new Date(e.getFullYear()+1,0,4),n=f(new Date(e.getFullYear(),0,4)),t=f(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2>>>0];for(var p in o={lb:r()[o>>2>>>0],kb:r()[o+4>>2>>>0],Na:r()[o+8>>2>>>0],Ra:r()[o+12>>2>>>0],Oa:r()[o+16>>2>>>0],La:r()[o+20>>2>>>0],Ha:r()[o+24>>2>>>0],Ka:r()[o+28>>2>>>0],tb:r()[o+32>>2>>>0],jb:r()[o+36>>2>>>0],mb:l?ue(l):\"\"},a=ue(a),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})a=a.replace(new RegExp(p,\"g\"),l[p]);var m=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),d=\"January February March April May June July August September October November December\".split(\" \");for(p in l={\"%a\":function(e){return m[e.Ha].substring(0,3)},\"%A\":function(e){return m[e.Ha]},\"%b\":function(e){return d[e.Oa].substring(0,3)},\"%B\":function(e){return d[e.Oa]},\"%C\":function(e){return u((e.La+1900)/100|0,2)},\"%d\":function(e){return u(e.Ra,2)},\"%e\":function(e){return i(e.Ra,2,\" \")},\"%g\":function(e){return c(e).toString().substring(2)},\"%G\":function(e){return c(e)},\"%H\":function(e){return u(e.Na,2)},\"%I\":function(e){return 0==(e=e.Na)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){for(var n=0,t=0;t<=e.Oa-1;n+=(Ye(e.La+1900)?tn:rn)[t++]);return u(e.Ra+n,3)},\"%m\":function(e){return u(e.Oa+1,2)},\"%M\":function(e){return u(e.kb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.Na&&12>e.Na?\"AM\":\"PM\"},\"%S\":function(e){return u(e.lb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.Ha||7},\"%U\":function(e){return u(Math.floor((e.Ka+7-e.Ha)/7),2)},\"%V\":function(e){var n=Math.floor((e.Ka+7-(e.Ha+6)%7)/7);if(2>=(e.Ha+371-e.Ka-2)%7&&n++,n)53==n&&(4==(t=(e.Ha+371-e.Ka)%7)||3==t&&Ye(e.La)||(n=1));else{n=52;var t=(e.Ha+7-e.Ka-1)%7;(4==t||5==t&&Ye(e.La%400-1))&&n++}return u(n,2)},\"%w\":function(e){return e.Ha},\"%W\":function(e){return u(Math.floor((e.Ka+7-(e.Ha+6)%7)/7),2)},\"%y\":function(e){return(e.La+1900).toString().substring(2)},\"%Y\":function(e){return e.La+1900},\"%z\":function(e){var n=0<=(e=e.jb);return e=Math.abs(e)/60,(n?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.mb},\"%%\":function(){return\"%\"}},a=a.replace(/%%/g,\"\\0\\0\"),l)a.includes(p)&&(a=a.replace(new RegExp(p,\"g\"),l[p](o)));return p=function(e){var n=Array(ve(e)+1);return we(e,n,0,n.length),n}(a=a.replace(/\\0\\0/g,\"%\")),p.length>t?0:(function(e,t){n().set(e,t>>>0)}(p,e),p.length-1)}le.Qa();var on=[null,se,me,he,ye,be,Oe,Te,Me,Se,Ae,Re,Ee,De,Ie,xe,Ce,Le,je,Xe,Ve,Ze,Qe,$e,nn],un={b:function(e,n,t){throw new de(e).Qa(n,t),e},n:function(){Z(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},Q:function(e){cn(e,!g,1,!h),le.Ta()},i:function(e){b?postMessage({cmd:\"cleanupThread\",thread:e}):re(e)},D:ge,f:ye,W:be,z:Oe,B:Te,q:Me,U:Se,L:Ae,T:Re,k:Ee,A:De,x:Ie,V:xe,y:Ce,E:function(){return 131072},m:function(){return!0},t:function(e,n){e==n?setTimeout((()=>Fe())):b?postMessage({targetThread:e,cmd:\"checkMailbox\"}):(e=le.Ga[e])&&e.postMessage({cmd:\"checkMailbox\"})},N:function(){return-1},P:ke,l:function(e){y&&le.Ga[e].ref()},I:function(e,n){e=new Date(1e3*He(e)),r()[n>>2>>>0]=e.getUTCSeconds(),r()[n+4>>2>>>0]=e.getUTCMinutes(),r()[n+8>>2>>>0]=e.getUTCHours(),r()[n+12>>2>>>0]=e.getUTCDate(),r()[n+16>>2>>>0]=e.getUTCMonth(),r()[n+20>>2>>>0]=e.getUTCFullYear()-1900,r()[n+24>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2>>>0]=e},J:function(e,n){e=new Date(1e3*He(e)),r()[n>>2>>>0]=e.getSeconds(),r()[n+4>>2>>>0]=e.getMinutes(),r()[n+8>>2>>>0]=e.getHours(),r()[n+12>>2>>>0]=e.getDate(),r()[n+16>>2>>>0]=e.getMonth(),r()[n+20>>2>>>0]=e.getFullYear()-1900,r()[n+24>>2>>>0]=e.getDay();var t=0|Ge(e);r()[n+28>>2>>>0]=t,r()[n+36>>2>>>0]=-60*e.getTimezoneOffset(),t=new Date(e.getFullYear(),6,1).getTimezoneOffset();var a=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(t!=a&&e.getTimezoneOffset()==Math.min(a,t)),r()[n+32>>2>>>0]=e},K:function(e){var n=new Date(r()[e+20>>2>>>0]+1900,r()[e+16>>2>>>0],r()[e+12>>2>>>0],r()[e+8>>2>>>0],r()[e+4>>2>>>0],r()[e>>2>>>0],0),t=r()[e+32>>2>>>0],a=n.getTimezoneOffset(),o=new Date(n.getFullYear(),6,1).getTimezoneOffset(),i=new Date(n.getFullYear(),0,1).getTimezoneOffset(),u=Math.min(i,o);return 0>t?r()[e+32>>2>>>0]=Number(o!=i&&u==a):0<t!=(u==a)&&(o=Math.max(i,o),n.setTime(n.getTime()+6e4*((0<t?u:o)-a))),r()[e+24>>2>>>0]=n.getDay(),t=0|Ge(n),r()[e+28>>2>>>0]=t,r()[e>>2>>>0]=n.getSeconds(),r()[e+4>>2>>>0]=n.getMinutes(),r()[e+8>>2>>>0]=n.getHours(),r()[e+12>>2>>>0]=n.getDate(),r()[e+16>>2>>>0]=n.getMonth(),r()[e+20>>2>>>0]=n.getYear(),n.getTime()/1e3|0},G:Le,H:je,s:function(e,n,t){function o(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}var i=(new Date).getFullYear(),u=new Date(i,0,1),s=new Date(i,6,1);i=u.getTimezoneOffset();var f=s.getTimezoneOffset(),c=Math.max(i,f);a()[e>>2>>>0]=60*c,r()[n>>2>>>0]=Number(i!=f),e=o(u),n=o(s),e=Ne(e),n=Ne(n),f<i?(a()[t>>2>>>0]=e,a()[t+4>>2>>>0]=n):(a()[t>>2>>>0]=n,a()[t+4>>2>>>0]=e)},d:function(){Z(\"\")},O:function(){Z(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},j:function(){},g:function(){return Date.now()},X:function(){throw z+=1,\"unwind\"},u:function(){return 4294901760},c:Ue,v:function(){return y?require(\"os\").cpus().length:navigator.hardwareConcurrency},M:function(e,n,t){qe.length=n,t>>=3;for(var r=0;r<n;r++)qe[r]=o()[t+r>>>0];return on[e].apply(null,qe)},r:function(e){var n=t().length;if((e>>>=0)<=n||4294901760<e)return!1;for(var r=1;4>=r;r*=2){var a=n*(1+.2/r);a=Math.min(a,e+100663296);var o=Math,i=o.min;a=Math.max(e,a),a+=(65536-a%65536)%65536;e:{var u=D.buffer;try{D.grow(i.call(o,4294901760,a)-u.byteLength+65535>>>16),P();var s=1;break e}catch(e){}s=void 0}if(s)return!0}return!1},R:Xe,S:Ve,C:fe,e:Ze,h:Qe,o:$e,w:nn,a:D||i.wasmMemory,F:an,p:function(e,n,t,r){return an(e,n,t,r)}};!function(){function e(e,n){return e=e.exports,i.asm=e,le.Ua.push(i.asm.ua),G=i.asm.va,j.unshift(i.asm.Y),I=n,le.cb((()=>{if(K--,i.monitorRunDependencies&&i.monitorRunDependencies(K),0==K&&(null!==X&&(clearInterval(X),X=null),V)){var e=V;V=null,e()}})),e}var n={a:un};if(K++,i.monitorRunDependencies&&i.monitorRunDependencies(K),i.instantiateWasm)try{return i.instantiateWasm(n,e)}catch(e){R(\"Module.instantiateWasm callback failed with error: \"+e),s(e)}(function(e,n){var t=J;return S||\"function\"!=typeof WebAssembly.instantiateStreaming||Q(t)||t.startsWith(\"file://\")||y||\"function\"!=typeof fetch?ee(t,e,n):fetch(t,{credentials:\"same-origin\"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(n,(function(r){return R(\"wasm streaming compile failed: \"+r),R(\"falling back to ArrayBuffer instantiation\"),ee(t,e,n)}))))})(n,(function(n){e(n.instance,n.module)})).catch(s)}(),i._OrtInit=function(){return(i._OrtInit=i.asm.Z).apply(null,arguments)},i._OrtCreateSessionOptions=function(){return(i._OrtCreateSessionOptions=i.asm._).apply(null,arguments)},i._OrtAppendExecutionProvider=function(){return(i._OrtAppendExecutionProvider=i.asm.$).apply(null,arguments)},i._OrtAddSessionConfigEntry=function(){return(i._OrtAddSessionConfigEntry=i.asm.aa).apply(null,arguments)},i._OrtReleaseSessionOptions=function(){return(i._OrtReleaseSessionOptions=i.asm.ba).apply(null,arguments)},i._OrtCreateSession=function(){return(i._OrtCreateSession=i.asm.ca).apply(null,arguments)},i._OrtReleaseSession=function(){return(i._OrtReleaseSession=i.asm.da).apply(null,arguments)},i._OrtGetInputCount=function(){return(i._OrtGetInputCount=i.asm.ea).apply(null,arguments)},i._OrtGetOutputCount=function(){return(i._OrtGetOutputCount=i.asm.fa).apply(null,arguments)},i._OrtGetInputName=function(){return(i._OrtGetInputName=i.asm.ga).apply(null,arguments)},i._OrtGetOutputName=function(){return(i._OrtGetOutputName=i.asm.ha).apply(null,arguments)},i._OrtFree=function(){return(i._OrtFree=i.asm.ia).apply(null,arguments)},i._OrtCreateTensor=function(){return(i._OrtCreateTensor=i.asm.ja).apply(null,arguments)},i._OrtGetTensorData=function(){return(i._OrtGetTensorData=i.asm.ka).apply(null,arguments)},i._OrtReleaseTensor=function(){return(i._OrtReleaseTensor=i.asm.la).apply(null,arguments)},i._OrtCreateRunOptions=function(){return(i._OrtCreateRunOptions=i.asm.ma).apply(null,arguments)},i._OrtAddRunConfigEntry=function(){return(i._OrtAddRunConfigEntry=i.asm.na).apply(null,arguments)},i._OrtReleaseRunOptions=function(){return(i._OrtReleaseRunOptions=i.asm.oa).apply(null,arguments)},i._OrtRun=function(){return(i._OrtRun=i.asm.pa).apply(null,arguments)},i._OrtEndProfiling=function(){return(i._OrtEndProfiling=i.asm.qa).apply(null,arguments)};var sn=i._pthread_self=function(){return(sn=i._pthread_self=i.asm.ra).apply(null,arguments)},fn=i._malloc=function(){return(fn=i._malloc=i.asm.sa).apply(null,arguments)};i._free=function(){return(i._free=i.asm.ta).apply(null,arguments)},i.__emscripten_tls_init=function(){return(i.__emscripten_tls_init=i.asm.ua).apply(null,arguments)};var cn=i.__emscripten_thread_init=function(){return(cn=i.__emscripten_thread_init=i.asm.wa).apply(null,arguments)};function ln(){return(ln=i.asm.ya).apply(null,arguments)}function pn(){return(pn=i.asm.za).apply(null,arguments)}i.__emscripten_thread_crashed=function(){return(i.__emscripten_thread_crashed=i.asm.xa).apply(null,arguments)};var mn,dn=i.__emscripten_thread_exit=function(){return(dn=i.__emscripten_thread_exit=i.asm.Aa).apply(null,arguments)},hn=i.__emscripten_check_mailbox=function(){return(hn=i.__emscripten_check_mailbox=i.asm.Ba).apply(null,arguments)};function gn(){return(gn=i.asm.Ca).apply(null,arguments)}function yn(){return(yn=i.asm.Da).apply(null,arguments)}function bn(){return(bn=i.asm.Ea).apply(null,arguments)}function vn(){return(vn=i.asm.Fa).apply(null,arguments)}function wn(){function e(){if(!mn&&(mn=!0,i.calledRun=!0,!U)&&(b||pe(j),u(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),!b)){if(i.postRun)for(\"function\"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;){var e=i.postRun.shift();N.unshift(e)}pe(N)}}if(!(0<K))if(b)u(i),b||pe(j),startWorker(i);else{if(i.preRun)for(\"function\"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)q();pe(L),0<K||(i.setStatus?(i.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){i.setStatus(\"\")}),1),e()}),1)):e())}}if(i.keepRuntimeAlive=B,i.wasmMemory=D,i.stackAlloc=vn,i.stackSave=yn,i.stackRestore=bn,i.UTF8ToString=ue,i.stringToUTF8=_e,i.lengthBytesUTF8=ve,i.ExitStatus=ne,i.PThread=le,V=function e(){mn||wn(),mn||(V=e)},i.preInit)for(\"function\"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();return wn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm = {})  {\n\nvar c;c||(c=typeof ortWasm !== 'undefined' ? ortWasm : {});var h,p;c.ready=new Promise((a,b)=>{h=a;p=b});var t=Object.assign({},c),w=\"./this.program\",y=\"object\"==typeof window,z=\"function\"==typeof importScripts,A=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,B=\"\",C,D,E;\nif(A){var fs=require(\"fs\"),F=require(\"path\");B=z?F.dirname(B)+\"/\":__dirname+\"/\";C=(a,b)=>{a=a.startsWith(\"file://\")?new URL(a):F.normalize(a);return fs.readFileSync(a,b?void 0:\"utf8\")};E=a=>{a=C(a,!0);a.buffer||(a=new Uint8Array(a));return a};D=(a,b,e,f=!0)=>{a=a.startsWith(\"file://\")?new URL(a):F.normalize(a);fs.readFile(a,f?void 0:\"utf8\",(g,k)=>{g?e(g):b(f?k.buffer:k)})};!c.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\\\/g,\"/\"));process.argv.slice(2);c.inspect=()=>\"[Emscripten Module object]\"}else if(y||\nz)z?B=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(B=document.currentScript.src),_scriptDir&&(B=_scriptDir),0!==B.indexOf(\"blob:\")?B=B.substr(0,B.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):B=\"\",C=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},z&&(E=a=>{var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),D=(a,b,e)=>{var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.responseType=\n\"arraybuffer\";f.onload=()=>{200==f.status||0==f.status&&f.response?b(f.response):e()};f.onerror=e;f.send(null)};var aa=c.print||console.log.bind(console),G=c.printErr||console.warn.bind(console);Object.assign(c,t);t=null;c.thisProgram&&(w=c.thisProgram);var H;c.wasmBinary&&(H=c.wasmBinary);var noExitRuntime=c.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&I(\"no native wasm support detected\");var J,K=!1,L,M,N,O;\nfunction ba(){var a=J.buffer;c.HEAP8=L=new Int8Array(a);c.HEAP16=new Int16Array(a);c.HEAP32=N=new Int32Array(a);c.HEAPU8=M=new Uint8Array(a);c.HEAPU16=new Uint16Array(a);c.HEAPU32=O=new Uint32Array(a);c.HEAPF32=new Float32Array(a);c.HEAPF64=new Float64Array(a)}var ca=[],da=[],ea=[];function fa(){var a=c.preRun.shift();ca.unshift(a)}var P=0,Q=null,R=null;\nfunction I(a){if(c.onAbort)c.onAbort(a);a=\"Aborted(\"+a+\")\";G(a);K=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");p(a);throw a;}function ha(a){return a.startsWith(\"data:application/octet-stream;base64,\")}var S;S=\"ort-wasm.wasm\";if(!ha(S)){var ia=S;S=c.locateFile?c.locateFile(ia,B):B+ia}function ja(a){try{if(a==S&&H)return new Uint8Array(H);if(E)return E(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){I(b)}}\nfunction ka(a){if(!H&&(y||z)){if(\"function\"==typeof fetch&&!a.startsWith(\"file://\"))return fetch(a,{credentials:\"same-origin\"}).then(b=>{if(!b.ok)throw\"failed to load wasm binary file at '\"+a+\"'\";return b.arrayBuffer()}).catch(()=>ja(a));if(D)return new Promise((b,e)=>{D(a,f=>b(new Uint8Array(f)),e)})}return Promise.resolve().then(()=>ja(a))}function la(a,b,e){return ka(a).then(f=>WebAssembly.instantiate(f,b)).then(f=>f).then(e,f=>{G(\"failed to asynchronously prepare wasm: \"+f);I(f)})}\nfunction ma(a,b){var e=S;return H||\"function\"!=typeof WebAssembly.instantiateStreaming||ha(e)||e.startsWith(\"file://\")||A||\"function\"!=typeof fetch?la(e,a,b):fetch(e,{credentials:\"same-origin\"}).then(f=>WebAssembly.instantiateStreaming(f,a).then(b,function(g){G(\"wasm streaming compile failed: \"+g);G(\"falling back to ArrayBuffer instantiation\");return la(e,a,b)}))}function T(a){for(;0<a.length;)a.shift()(c)}\nfunction na(a){this.pa=a-24;this.ua=function(b){O[this.pa+4>>2>>>0]=b};this.ta=function(b){O[this.pa+8>>2>>>0]=b};this.ra=function(b,e){this.sa();this.ua(b);this.ta(e)};this.sa=function(){O[this.pa+16>>2>>>0]=0}}var oa=0,pa=0,qa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ra(a,b,e){b>>>=0;var f=b+e;for(e=b;a[e]&&!(e>=f);)++e;if(16<e-b&&a.buffer&&qa)return qa.decode(a.subarray(b,e));for(f=\"\";b<e;){var g=a[b++];if(g&128){var k=a[b++]&63;if(192==(g&224))f+=String.fromCharCode((g&31)<<6|k);else{var l=a[b++]&63;g=224==(g&240)?(g&15)<<12|k<<6|l:(g&7)<<18|k<<12|l<<6|a[b++]&63;65536>g?f+=String.fromCharCode(g):(g-=65536,f+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else f+=String.fromCharCode(g)}return f}function U(a,b){return(a>>>=0)?ra(M,a,b):\"\"}\nfunction V(a){for(var b=0,e=0;e<a.length;++e){var f=a.charCodeAt(e);127>=f?b++:2047>=f?b+=2:55296<=f&&57343>=f?(b+=4,++e):b+=3}return b}\nfunction sa(a,b,e,f){e>>>=0;if(!(0<f))return 0;var g=e;f=e+f-1;for(var k=0;k<a.length;++k){var l=a.charCodeAt(k);if(55296<=l&&57343>=l){var q=a.charCodeAt(++k);l=65536+((l&1023)<<10)|q&1023}if(127>=l){if(e>=f)break;b[e++>>>0]=l}else{if(2047>=l){if(e+1>=f)break;b[e++>>>0]=192|l>>6}else{if(65535>=l){if(e+2>=f)break;b[e++>>>0]=224|l>>12}else{if(e+3>=f)break;b[e++>>>0]=240|l>>18;b[e++>>>0]=128|l>>12&63}b[e++>>>0]=128|l>>6&63}b[e++>>>0]=128|l&63}}b[e>>>0]=0;return e-g}\nfunction ta(a,b,e){return sa(a,M,b,e)}function W(a){return 0===a%4&&(0!==a%100||0===a%400)}var ua=[0,31,60,91,121,152,182,213,244,274,305,335],ya=[0,31,59,90,120,151,181,212,243,273,304,334];function za(a){return(W(a.getFullYear())?ua:ya)[a.getMonth()]+a.getDate()-1}function Aa(a){var b=V(a)+1,e=Ba(b);e&&ta(a,e,b);return e}var X={};\nfunction Ca(){if(!Y){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:w||\"./this.program\"},b;for(b in X)void 0===X[b]?delete a[b]:a[b]=X[b];var e=[];for(b in a)e.push(b+\"=\"+a[b]);Y=e}return Y}var Y,Da=[null,[],[]],Ea=[31,29,31,30,31,30,31,31,30,31,30,31],Fa=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction Ga(a){var b=Array(V(a)+1);sa(a,b,0,b.length);return b}\nfunction Ha(a,b,e,f){function g(d,m,n){for(d=\"number\"==typeof d?d.toString():d||\"\";d.length<m;)d=n[0]+d;return d}function k(d,m){return g(d,m,\"0\")}function l(d,m){function n(va){return 0>va?-1:0<va?1:0}var x;0===(x=n(d.getFullYear()-m.getFullYear()))&&0===(x=n(d.getMonth()-m.getMonth()))&&(x=n(d.getDate()-m.getDate()));return x}function q(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),\n0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function v(d){var m=d.la;for(d=new Date((new Date(d.ma+1900,0,1)).getTime());0<m;){var n=d.getMonth(),x=(W(d.getFullYear())?Ea:Fa)[n];if(m>x-d.getDate())m-=x-d.getDate()+1,d.setDate(1),11>n?d.setMonth(n+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+m);break}}n=new Date(d.getFullYear()+1,0,4);m=q(new Date(d.getFullYear(),\n0,4));n=q(n);return 0>=l(m,d)?0>=l(n,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}var u=N[f+40>>2>>>0];f={xa:N[f>>2>>>0],wa:N[f+4>>2>>>0],na:N[f+8>>2>>>0],qa:N[f+12>>2>>>0],oa:N[f+16>>2>>>0],ma:N[f+20>>2>>>0],ha:N[f+24>>2>>>0],la:N[f+28>>2>>>0],za:N[f+32>>2>>>0],va:N[f+36>>2>>>0],ya:u?U(u):\"\"};e=U(e);u={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in u)e=e.replace(new RegExp(r,\"g\"),u[r]);var wa=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),xa=\"January February March April May June July August September October November December\".split(\" \");u={\"%a\":function(d){return wa[d.ha].substring(0,3)},\"%A\":function(d){return wa[d.ha]},\"%b\":function(d){return xa[d.oa].substring(0,\n3)},\"%B\":function(d){return xa[d.oa]},\"%C\":function(d){return k((d.ma+1900)/100|0,2)},\"%d\":function(d){return k(d.qa,2)},\"%e\":function(d){return g(d.qa,2,\" \")},\"%g\":function(d){return v(d).toString().substring(2)},\"%G\":function(d){return v(d)},\"%H\":function(d){return k(d.na,2)},\"%I\":function(d){d=d.na;0==d?d=12:12<d&&(d-=12);return k(d,2)},\"%j\":function(d){for(var m=0,n=0;n<=d.oa-1;m+=(W(d.ma+1900)?Ea:Fa)[n++]);return k(d.qa+m,3)},\"%m\":function(d){return k(d.oa+1,2)},\"%M\":function(d){return k(d.wa,\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(d){return 0<=d.na&&12>d.na?\"AM\":\"PM\"},\"%S\":function(d){return k(d.xa,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(d){return d.ha||7},\"%U\":function(d){return k(Math.floor((d.la+7-d.ha)/7),2)},\"%V\":function(d){var m=Math.floor((d.la+7-(d.ha+6)%7)/7);2>=(d.ha+371-d.la-2)%7&&m++;if(m)53==m&&(n=(d.ha+371-d.la)%7,4==n||3==n&&W(d.ma)||(m=1));else{m=52;var n=(d.ha+7-d.la-1)%7;(4==n||5==n&&W(d.ma%400-1))&&m++}return k(m,2)},\"%w\":function(d){return d.ha},\"%W\":function(d){return k(Math.floor((d.la+\n7-(d.ha+6)%7)/7),2)},\"%y\":function(d){return(d.ma+1900).toString().substring(2)},\"%Y\":function(d){return d.ma+1900},\"%z\":function(d){d=d.va;var m=0<=d;d=Math.abs(d)/60;return(m?\"+\":\"-\")+String(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":function(d){return d.ya},\"%%\":function(){return\"%\"}};e=e.replace(/%%/g,\"\\x00\\x00\");for(r in u)e.includes(r)&&(e=e.replace(new RegExp(r,\"g\"),u[r](f)));e=e.replace(/\\0\\0/g,\"%\");r=Ga(e);if(r.length>b)return 0;L.set(r,a>>>0);return r.length-1}\nvar Ia={a:function(a,b,e){(new na(a)).ra(b,e);oa=a;pa++;throw oa;},j:function(){I(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},d:function(){return 0},K:function(){},u:function(){},w:function(){},m:function(){return 0},I:function(){},E:function(){},H:function(){},h:function(){},v:function(){},s:function(){},J:function(){},t:function(){},i:function(){return!0},B:function(a,b){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[b>>\n2>>>0]=a.getUTCSeconds();N[b+4>>2>>>0]=a.getUTCMinutes();N[b+8>>2>>>0]=a.getUTCHours();N[b+12>>2>>>0]=a.getUTCDate();N[b+16>>2>>>0]=a.getUTCMonth();N[b+20>>2>>>0]=a.getUTCFullYear()-1900;N[b+24>>2>>>0]=a.getUTCDay();N[b+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},C:function(a,b){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[b>>2>>>0]=a.getSeconds();N[b+4>>2>>>0]=a.getMinutes();N[b+8>>2>>>0]=a.getHours();N[b+12>>2>>>0]=a.getDate();N[b+16>>2>>>0]=a.getMonth();N[b+\n20>>2>>>0]=a.getFullYear()-1900;N[b+24>>2>>>0]=a.getDay();N[b+28>>2>>>0]=za(a)|0;N[b+36>>2>>>0]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset(),f=(new Date(a.getFullYear(),0,1)).getTimezoneOffset();N[b+32>>2>>>0]=(e!=f&&a.getTimezoneOffset()==Math.min(f,e))|0},D:function(a){var b=new Date(N[a+20>>2>>>0]+1900,N[a+16>>2>>>0],N[a+12>>2>>>0],N[a+8>>2>>>0],N[a+4>>2>>>0],N[a>>2>>>0],0),e=N[a+32>>2>>>0],f=b.getTimezoneOffset(),g=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),\nk=(new Date(b.getFullYear(),0,1)).getTimezoneOffset(),l=Math.min(k,g);0>e?N[a+32>>2>>>0]=Number(g!=k&&l==f):0<e!=(l==f)&&(g=Math.max(k,g),b.setTime(b.getTime()+6E4*((0<e?l:g)-f)));N[a+24>>2>>>0]=b.getDay();N[a+28>>2>>>0]=za(b)|0;N[a>>2>>>0]=b.getSeconds();N[a+4>>2>>>0]=b.getMinutes();N[a+8>>2>>>0]=b.getHours();N[a+12>>2>>>0]=b.getDate();N[a+16>>2>>>0]=b.getMonth();N[a+20>>2>>>0]=b.getYear();return b.getTime()/1E3|0},y:function(){return-52},z:function(){},o:function(a,b,e){function f(v){return(v=v.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?\nv[1]:\"GMT\"}var g=(new Date).getFullYear(),k=new Date(g,0,1),l=new Date(g,6,1);g=k.getTimezoneOffset();var q=l.getTimezoneOffset();O[a>>2>>>0]=60*Math.max(g,q);N[b>>2>>>0]=Number(g!=q);a=f(k);b=f(l);a=Aa(a);b=Aa(b);q<g?(O[e>>2>>>0]=a,O[e+4>>2>>>0]=b):(O[e>>2>>>0]=b,O[e+4>>2>>>0]=a)},c:function(){I(\"\")},A:function(){I(\"To use dlopen, you need enable dynamic linking, see https://emscripten.org/docs/compiling/Dynamic-Linking.html\")},f:function(){return Date.now()},p:function(){return 4294901760},b:A?\n()=>{var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),x:function(a,b,e){M.copyWithin(a>>>0,b>>>0,b+e>>>0)},n:function(a){var b=M.length;a>>>=0;if(4294901760<a)return!1;for(var e=1;4>=e;e*=2){var f=b*(1+.2/e);f=Math.min(f,a+100663296);var g=Math,k=g.min;f=Math.max(a,f);f+=(65536-f%65536)%65536;a:{var l=J.buffer;try{J.grow(k.call(g,4294901760,f)-l.byteLength+65535>>>16);ba();var q=1;break a}catch(v){}q=void 0}if(q)return!0}return!1},F:function(a,b){var e=0;Ca().forEach(function(f,\ng){var k=b+e;g=O[a+4*g>>2>>>0]=k;for(k=0;k<f.length;++k)L[g++>>0>>>0]=f.charCodeAt(k);L[g>>0>>>0]=0;e+=f.length+1});return 0},G:function(a,b){var e=Ca();O[a>>2>>>0]=e.length;var f=0;e.forEach(function(g){f+=g.length+1});O[b>>2>>>0]=f;return 0},e:function(){return 52},g:function(){return 52},k:function(){return 70},q:function(a,b,e,f){for(var g=0,k=0;k<e;k++){var l=O[b>>2>>>0],q=O[b+4>>2>>>0];b+=8;for(var v=0;v<q;v++){var u=M[l+v>>>0],r=Da[a];0===u||10===u?((1===a?aa:G)(ra(r,0)),r.length=0):r.push(u)}g+=\nq}O[f>>2>>>0]=g;return 0},r:Ha,l:function(a,b,e,f){return Ha(a,b,e,f)}};\n(function(){function a(e){e=e.exports;c.asm=e;J=c.asm.L;ba();da.unshift(c.asm.M);P--;c.monitorRunDependencies&&c.monitorRunDependencies(P);if(0==P&&(null!==Q&&(clearInterval(Q),Q=null),R)){var f=R;R=null;f()}return e}var b={a:Ia};P++;c.monitorRunDependencies&&c.monitorRunDependencies(P);if(c.instantiateWasm)try{return c.instantiateWasm(b,a)}catch(e){G(\"Module.instantiateWasm callback failed with error: \"+e),p(e)}ma(b,function(e){a(e.instance)}).catch(p);return{}})();\nc._OrtInit=function(){return(c._OrtInit=c.asm.N).apply(null,arguments)};c._OrtCreateSessionOptions=function(){return(c._OrtCreateSessionOptions=c.asm.O).apply(null,arguments)};c._OrtAppendExecutionProvider=function(){return(c._OrtAppendExecutionProvider=c.asm.P).apply(null,arguments)};c._OrtAddSessionConfigEntry=function(){return(c._OrtAddSessionConfigEntry=c.asm.Q).apply(null,arguments)};c._OrtReleaseSessionOptions=function(){return(c._OrtReleaseSessionOptions=c.asm.R).apply(null,arguments)};\nc._OrtCreateSession=function(){return(c._OrtCreateSession=c.asm.S).apply(null,arguments)};c._OrtReleaseSession=function(){return(c._OrtReleaseSession=c.asm.T).apply(null,arguments)};c._OrtGetInputCount=function(){return(c._OrtGetInputCount=c.asm.U).apply(null,arguments)};c._OrtGetOutputCount=function(){return(c._OrtGetOutputCount=c.asm.V).apply(null,arguments)};c._OrtGetInputName=function(){return(c._OrtGetInputName=c.asm.W).apply(null,arguments)};\nc._OrtGetOutputName=function(){return(c._OrtGetOutputName=c.asm.X).apply(null,arguments)};c._OrtFree=function(){return(c._OrtFree=c.asm.Y).apply(null,arguments)};c._OrtCreateTensor=function(){return(c._OrtCreateTensor=c.asm.Z).apply(null,arguments)};c._OrtGetTensorData=function(){return(c._OrtGetTensorData=c.asm._).apply(null,arguments)};c._OrtReleaseTensor=function(){return(c._OrtReleaseTensor=c.asm.$).apply(null,arguments)};\nc._OrtCreateRunOptions=function(){return(c._OrtCreateRunOptions=c.asm.aa).apply(null,arguments)};c._OrtAddRunConfigEntry=function(){return(c._OrtAddRunConfigEntry=c.asm.ba).apply(null,arguments)};c._OrtReleaseRunOptions=function(){return(c._OrtReleaseRunOptions=c.asm.ca).apply(null,arguments)};c._OrtRun=function(){return(c._OrtRun=c.asm.da).apply(null,arguments)};c._OrtEndProfiling=function(){return(c._OrtEndProfiling=c.asm.ea).apply(null,arguments)};\nvar Ba=c._malloc=function(){return(Ba=c._malloc=c.asm.fa).apply(null,arguments)};c._free=function(){return(c._free=c.asm.ga).apply(null,arguments)};function Ja(){return(Ja=c.asm.ia).apply(null,arguments)}function Ka(){return(Ka=c.asm.ja).apply(null,arguments)}function La(){return(La=c.asm.ka).apply(null,arguments)}c.stackAlloc=La;c.stackSave=Ja;c.stackRestore=Ka;c.UTF8ToString=U;c.stringToUTF8=ta;c.lengthBytesUTF8=V;var Z;R=function Ma(){Z||Na();Z||(R=Ma)};\nfunction Na(){function a(){if(!Z&&(Z=!0,c.calledRun=!0,!K)){T(da);h(c);if(c.onRuntimeInitialized)c.onRuntimeInitialized();if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var b=c.postRun.shift();ea.unshift(b)}T(ea)}}if(!(0<P)){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)fa();T(ca);0<P||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){c.setStatus(\"\")},1);a()},1)):a())}}\nif(c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();Na();\n\n\n  return ortWasm.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(57);\n"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","indexOf","splice","length","push","logLevelValue","env","wasm","webgl","webgpu","logLevel","value","Object","defineProperty","enumerable","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","isBigIntChecked","Tensor","constructor","arg0","arg1","arg2","type","data","dims","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","set","checkBigInt","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","Number","isSafeInteger","RangeError","calculateSize","this","static","buffer","options","height","width","tensorLayout","norm","mean","bias","normMean","normBias","inputformat","bitmapFormat","outputformat","tensorFormat","stride","float32Data","step","rImagePointer","gImagePointer","bImagePointer","aImagePointer","rTensorPointer","gTensorPointer","bTensorPointer","aTensorPointer","image","isHTMLImageEle","HTMLImageElement","isImageDataEle","ImageData","isImageBitmap","ImageBitmap","isString","tensorConfig","canvas","document","createElement","pixels2DContext","getContext","resizedHeight","resizedWidth","drawImage","getImageData","bufferToTensor","Promise","resolve","reject","context","newImage","Image","crossOrigin","src","onload","img","format","tempCanvas","putImageData","toDataURL","j","R","G","B","A","fillStyle","fillRect","toImageData","channels","createImageData","reshape","InferenceSession","handler","async","feeds","fetches","isFetchesEmpty","outputNames","isFetches","arg1Keys","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","dispose","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","byteOffset","byteLength","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","e","err","join","resolveBackend","startProfiling","endProfiling","initTimeout","simd","proxy","numThreads","isInteger","numCpuLogicalCores","navigator","cpus","hardwareConcurrency","Math","min","ceil","initializeWebAssemblyInstance","pathOrBuffer","OnnxruntimeWebAssemblySessionHandler","loadModel","wasmBackend","currentKernelId","commandEncoder","computePassEncoder","pendingDispatchNumber","profilingEnabled","currentKernelCustomData","kernelCustomData","gpu","adapter","requestAdapter","deviceDescriptor","requiredLimits","maxComputeWorkgroupStorageSize","limits","maxComputeWorkgroupsPerDimension","maxStorageBufferBindingSize","features","has","profilingMode","requiredFeatures","device","requestDevice","gpuDataManager","createGpuDataManager","programManager","ProgramManager","kernels","kernelPersistentData","configureLogger","debug","onuncapturederror","ev","error","GPUValidationError","console","message","profilingQuerySet","createQuerySet","count","getCommandEncoder","createCommandEncoder","getComputePassEncoder","beginComputePass","endComputePass","end","flush","queue","submit","finish","refreshPendingBuffers","program","inputs","outputIndices","createKernelOutput","createIntermediateOutput","inputTypes","inputDatas","gpuData","programInfo","inputTensorShapes","inputGpuDataTypes","inputTensorShapesToString","d","inputGpuDataTypesToString","cacheHint","getProgramInfoUniqueKey","artifact","getArtifact","validatedOutputIndices","outputs","_","outputTensorViews","outputDatas","isTemporary","isPersistent","tensorView","dataType","temporaryData","persistentData","normalizedDispatchGroup","normalizeDispatchGroupSize","dispatchGroup","build","setArtifact","LOG_DEBUG","upload","gpuDataId","memcpy","dst","getTargetBuffer","arrayBuffer","download","alloc","create","id","free","ptr","release","createKernel","kernelId","attribute","op","WEBGPU_OP_RESOLVE_RULES","releaseKernel","delete","computeKernel","kernel","kernelEntry","attributes","TensorViewImpl","getFloat32Array","HEAP8","ShapeUtil","newDims","ComputeContextImpl","customData","contextDataOffset","heapU32","HEAPU32","dataIndex","opKernelContext","inputCount","compute","inputsOutputsMapping","mappedInputs","index","output","elementSize","getTensorElementSize","bufferSize","stack","stackSave","stackAlloc","offset","_JsepOutput","stackRestore","jsepInit","WebGpuBackend","initialize","isSourceGpu","HEAPU8","subarray","dataOffset","logLevelPrefix","configLogLevel","$configLogLevel","$debug","LOG","msg","messageLevel","logLevelStringToEnum","level","log","Date","toISOString","args","MatMulUtil","a","b","BroadcastUtil","adims","bdims","isMatMul","arank","brank","crank","max","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","shape","finalShape","inputRank","finalRank","getSizeFromDimensionRange","axis","start","rank","strides","tensorRank","axes","x","normalizeAxis","perm","slice","reverse","pad","shape1","shape2","every","PoolConvUtil","isGlobalOperator","inputDims","kernelShape","dilations","pads","isChannelLast","autoPad","adjustPadAndReturnShape","outputDims","computeShapeHelper","filterDims","inSize","dilation","padHeadIndex","padTailIndex","dkernel","floor","padNeeded","leftShape","transLeft","rightShape","transRight","biasShape","M","K","N","kDim","isValidBroadcast","MIN_CLIP","MAX_CLIP","AttributeWithCacheKeyImpl","assign","cacheKey","_cacheKey","sort","createAttributeWithCacheKey","calcNormalizedBufferSize","guid","GpuDataManagerImpl","storageCache","downloadCache","buffersForUploadingPending","buffersPending","srcArrayBuffer","srcOffset","srcLength","gpuDataCache","originalSize","gpuBufferForUploading","createBuffer","mappedAtCreation","usage","GPUBufferUsage","MAP_WRITE","COPY_SRC","getMappedRange","unmap","copyBufferToBuffer","sourceId","destinationId","sourceGpuDataCache","destinationGpuDataCache","STORAGE","COPY_DST","gpuBuffer","GpuDataType","default","cachedData","downloadData","gpuReadBuffer","MAP_READ","readDataPromise","mapAsync","GPUMapMode","READ","then","destroy","unaryOps","abs","acos","acosh","binaryOps","add","asin","asinh","atan","atanh","pool","averagePool","parseAveragePoolAttributes","clipV10","clip","conv","parseConvAttributes","cos","cosh","div","elu","parseAlphaAttributes","erf","exp","gemm","parseGemmAttributes","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","parseGlobalMaxPoolAttributes","leakyRelu","matMul","maxPool","parseMaxPoolAttributes","mul","neg","pow","reciprocal","relu","sigmoid","sin","sinh","sqrt","sub","tan","tanh","thresholdedRelu","transpose","parseTransposeAttributes","typeSnippet","component","activationFnSnippet","activation","_hasPreluActivationWeights","_packed","_coordsLength","biasActivationSnippet","hasBias","createConv2DMatMulProgramInfo","metadata","outputShape","dimAOuter","dimBOuter","dimInner","sequentialAccessByThreads","isChannelsLast","inChannels","batchSize","outWidth","outHeight","outChannels","isVec4","dispatchX","dispatchY","workGroupSize","elementsPerThread","dispatch","innerElementSize","tileAOuter","tileBOuter","tileInner","fitAOuter","fitBOuter","fitInner","elementsSize","declareInputs","declareFunctions","gpuDataType","y","z","getShaderSource","utilFunctions","computeStrides","addBias","hasPreluActivationWeights","innerElementSizeX","innerElementSizeW","coordASnippet","coordResSnippet","xHeight","xWidth","row","col","readXSnippet","getXSnippet","sampleX","sampleW","getWSnippet","resType","aType","bType","conv2dCommonSnippet","makeMatMulPackedVec4Source","makeMatMulPackedSource","workPerThread","workgroupSize","transposeA","splitK","splitedDimInner","isVectorA","tileAWidth","tileAHight","rowPerThreadB","calculateResultSnippet","writeDataToSubASnippet","rowPerThreadA","colPerThreadA","matmulSnippet","readDataFromSubASnippet","createBinaryOpProgramInfoLoader","funcCall","additionalImplementation","outputDataType","isBroadcast","areEqual","outputSize","vectorize","calculatedShape","calcShape","sharedDimension","dimA","shaderHelper","dimsA","dimsB","dimsOutput","doBroadcast","typeA","typeB","typeOutput","vecSize","expressionScalar","expressionVector","scalar","vector","broadcastImpl","outputIndicesHelper","createIndicesHelper","calcOffsetImpl","offsets","idx","o2iImpl","iType","assignment","indicesVariableDeclaration","o2iCall","singleAssignment","expressionA","expressionB","mainStart","guardAgainstOutOfBoundsWorkgroupSizes","createBinaryOpProgramShader","createBinaryOpProgramInfo","WORKGROUP_SIZE","o2iSnippet","varOffset","varIndices","i2oImpl","i2oExpression","isPtr","ShaderHelperImpl","workgroupSizeX","workgroupSizeY","workgroupSizeZ","is1DimensionDispatch","createShaderHelper","createGroupedConvProgramInfoLoader","squeezeOutputShapeFunction","processBias","xShape","wShape","outputChannelsPerGroup","group","activationFunction","applyActivation","getActicationSnippet","inputStorageBuffersDeclarations","calculateOutputShape","xIndicesHelper","wIndicesHelper","createGroupedConvProgramInfo","inputShape","adjustPads","inputSpatialShape","spatialRank","dilatedKernelShape","weightTransposeAttribute","getAdjustedConvAttributes","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","auto_pad","kernel_shape","wIsConst","w_is_const","validateInputs","concat","adjustedAttributes","conv1d","inputHeight","inputWidth","inputChannels","weightHeight","weightWidth","transposedWeight","wT","transposeProgramMetadata","createTransposeProgramInfo","convInputs","createConv2DMatMulProgramInfoLoader","conv2d","createConv2DMatMulProgramMetadata","clipMin","clipMax","activation_params","activationCacheKey","aShape","bShape","GemmUtil","getShapeOfGemmResult","transA","transB","line","calculateAlpha","alpha","calculateC","m","n","broadcastM","broadcastN","offsetC","beta","createGemmProgramInfo","createGemmProgramInfoLoader","createMatmulProgramInfoLoader","createMatmulProgramInfo","getAdjustedPoolAttributesAndOutputShape","inputShapeAsChannelFirst","hasDilations","adjustPoolAttributes","outputShapeAsChannelFirst","computePoolOutputShape","generatePoolingCode","op1","op2","kw","sw","pwStart","dimIdxW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimIdxH","dimH","kernelSize","kernelStrides","stridesRank","padsRank","padCode","reduce","sum","cur","parsePoolCommonAttributes","ceilMode","ceil_mode","createAveragePoolProgramInfo","countIncludePad","count_include_pad","attr","globalPoolAttributes","storageOrder","createMaxPoolProgramInfo","storage_order","getAdjustedPerm","keys","input","permAttr","sortBasedOnPerm","getOutputShape","inputIndicesHelper","reverseFunc","permFunctionBody","createElementwiseProgramInfoLoader","datasize","expression","createElementwiseProgramShader","inputTensors","createElementwiseProgramInfo","generateClipAttributesFromInputs","repo","attributesBound","buildArtifact","writeTimestamp","setPipeline","computePipeline","entries","binding","resource","bindGroup","createBindGroup","layout","getBindGroupLayout","setBindGroup","dispatchWorkgroups","queryData","QUERY_RESOLVE","syncData","resolveQuerySet","kernelName","mappedData","startTimeU64","endTimeU64","profilingTimeBase","startTime","endTime","normalizedDispatchGroupSize","code","shaderModule","createShaderModule","createComputePipeline","entryPoint","limitPerDimension","dispatchAverage","cbrt","iterateExtraOptions","prefix","seen","forEach","toString","isProxy","proxyWorker","initWasmCallbacks","initOrtCallbacks","initializing","createSessionAllocateCallbacks","createSessionFinalizeCallbacks","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","shift","out","scriptSrc","currentScript","wasmPaths","substr","lastIndexOf","terminate","onmessage","in","postMessage","initializeWebAssembly","initializeRuntime","core","initRuntime","createSessionAllocate","model","createSessionFinalize","modeldata","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","tag","allocWasmString","_OrtCreateRunOptions","extra","WeakSet","keyDataOffset","valueDataOffset","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_free","runtimeInitialized","path","response","fetch","promisify","readFile","modelData","inputArray","kvp","tensor","t","result","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","some","ep","enableMemPattern","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","executionMode","getExecutionMode","logIdDataOffset","logId","optimizedModelFilePathOffset","optimizedModelFilePath","_OrtCreateSessionOptions","enableCpuMemArena","enableProfiling","epName","webnnOptions","deviceType","_OrtAddSessionConfigEntry","powerPreference","epNameDataOffset","_OrtAppendExecutionProvider","setExecutionProviders","_OrtReleaseSessionOptions","dataLength","lengthBytesUTF8","_malloc","stringToUTF8","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","dateType","tensorTypeToTypedArrayConstructor","loggingLevel","errorCode","_OrtInit","initOrt","activeSessions","modelDataOffset","sessionHandle","_OrtCreateSession","_OrtGetInputCount","outputCount","_OrtGetOutputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","_OrtGetInputName","UTF8ToString","_OrtGetOutputName","_OrtFree","_OrtReleaseSession","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimsOffset","dimIndex","HEAP32","_OrtCreateTensor","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","_OrtRun","runPromise","jsepRunPromise","beforeGetTensorDataStack","tensorDataOffset","_OrtGetTensorData","tensorDataIndex","dimsLength","stringData","maxBytesToRead","_OrtReleaseTensor","profileFileName","_OrtEndProfiling","tensors","buffers","ortWasmFactory","ortWasmFactoryThreaded","flags","timeout","useThreads","MessageChannel","port1","WebAssembly","validate","isMultiThreadSupported","useSimd","isSimdSupported","wasmPrefixOverride","wasmFileName","getWasmFileName","wasmPathOverride","isTimeout","tasks","setTimeout","config","locateFile","fileName","scriptDirectory","endsWith","Blob","URL","createObjectURL","mainScriptUrlOrBlob","__dirname","scriptSourceCode","what","race","PThread","terminateAllThreads","Worker_fn","content","workerConstructor","workerOptions","url","globalScope","window","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","worker","revokeObjectURL","encodeURIComponent","_scriptDir","__filename","D","C","P","k","r","F","H","o","Y","u","s","ready","f","c","l","p","h","g","importScripts","process","versions","node","ENVIRONMENT_IS_PTHREAD","w","O","dirname","startsWith","normalize","readFileSync","thisProgram","argv","replace","exitCode","inspect","global","Worker","location","href","XMLHttpRequest","open","send","responseText","responseType","status","onerror","performance","T","bind","warn","writeSync","S","print","printErr","quit","wasmBinary","E","noExitRuntime","Z","I","U","HEAP16","HEAPU16","HEAPF32","HEAPF64","W","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","L","q","preRun","unshift","J","X","V","onAbort","RuntimeError","Q","$","ee","credentials","ok","catch","instantiate","ne","te","re","le","Ga","gb","ae","ab","Ja","Ia","cmd","start_routine","hb","arg","Za","pthread_ptr","unref","nb","oe","TextDecoder","ie","decode","String","fromCharCode","ue","se","ze","ib","onExit","fe","me","ce","Ma","Ua","Qa","bb","qb","receiveObjectTransfer","fb","threadInitTLS","Ta","setExitStatus","Sa","sb","pn","eb","$a","targetThread","sn","rb","transferList","Fe","thread","loaded","threadId","text","alert","target","filename","lineno","on","handlers","urlOrBlob","wasmModule","cb","Ya","pop","pe","de","Pa","Xa","Wa","Va","he","ge","pb","ye","be","ve","charCodeAt","we","_e","Oe","Te","Me","Se","Ae","Re","Ee","De","Ie","xe","Ce","ke","Atomics","ob","store","hn","dn","He","Ye","establishStackSpace","gn","bn","invokeEntryPoint","__emscripten_thread_mailbox_await","checkMailbox","Ue","Pe","We","Ge","getFullYear","getMonth","getDate","Le","je","Ne","fn","arguments","yn","vn","ln","hrtime","timeOrigin","now","Be","qe","Je","Ke","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","Xe","Ve","Ze","Qe","$e","en","nn","tn","rn","an","getDay","Ka","La","getTime","setDate","setMonth","setFullYear","lb","kb","Na","Ra","Oa","Ha","tb","jb","mb","RegExp","split","substring","includes","un","cn","ref","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","getSeconds","getMinutes","getHours","getTimezoneOffset","setTime","getYear","toTimeString","match","apply","grow","asm","ua","va","monitorRunDependencies","clearInterval","instantiateWasm","instantiateStreaming","instance","aa","ba","ca","da","ea","fa","ga","ha","ia","ja","ka","la","ma","na","oa","pa","qa","_pthread_self","ra","sa","ta","__emscripten_tls_init","__emscripten_thread_init","wa","ya","za","__emscripten_thread_crashed","xa","mn","__emscripten_thread_exit","Aa","__emscripten_check_mailbox","Ba","Ca","Da","Ea","Fa","wn","calledRun","onRuntimeInitialized","postRun","startWorker","setStatus","keepRuntimeAlive","ExitStatus","preInit","ortWasm","fs","copyWithin","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","obj","prop","prototype","Symbol","toStringTag"],"sourceRoot":""}